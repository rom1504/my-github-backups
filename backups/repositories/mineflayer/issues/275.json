{
    "assignee": null,
    "body": "When creating a bot, you usually want to combine many different methods and information to accomplish tasks.\r\nMineflayer provides unit action (digging, simple movements, building, ...) and information.\r\n\r\nThere are many ways to combine these actions to produce useful behavior : \r\n* the [pyramid of doom](https://github.com/andrewrk/mineflayer/blob/094a9510cb514ca56f9ce8f888aa4c6d0d7ac7d4/test/externalTests/useChests.js#L28)  (anti-)pattern\r\n* defining case specific functions to combine functions ([this](https://github.com/andrewrk/mineflayer/blob/5675cbd0dab18bd019771327f9ab8c40b4c9536f/test/externalTests/plugins/testCommon.js#L21) for example)\r\n* state machines (in [mineflayer-scaffold](https://github.com/andrewrk/mineflayer-scaffold/blob/15def1c24c31231a411807bff6cda88042491432/index.js#L65))\r\n* iterators (in [helperbot](https://github.com/Darthfett/helperbot/blob/8a9ca118d2e9e21a79091034040e304f4256f2a6/lib/plugins/stripmine.js#L197))\r\n* meta programming (in [rbot](https://github.com/rom1504/rbot/blob/dd2e1942747b4d8224218e5e57d9b6a07e37fe4b/task/syntaxTask.js))\r\n* a task manager (see [dutie](https://github.com/demipixel/dutie) and [dutieflayer](https://github.com/demipixel/dutieflayer) but also [duties](https://github.com/wtfaremyinitials/duties))\r\n\r\nThere are also some stuff provided by the js community that might be useful : \r\n* [async](https://github.com/caolan/async)\r\n* [promises](https://github.com/kriskowal/q)\r\n\r\nIn this issue I'd like to talk about whether we can find some common ways on how to combine mineflayer tasks to get useful behaviour. That doesn't mean these ways should be included in mineflayer, they can simply be ways we advise people to use when building bots, but since mineflayer is the common factor in all this, it seems like a good place to talk about it.\r\n\r\nI think criteria to know whether one of these ways works or not are : \r\n* do you need to write a lot of code to use it ?\r\n* is that code complicated to read ?\r\n* how much was done with that method ? does it work to actually get useful bots ?\r\n\r\nIt might be interesting to make a table to compare all these methods (with the pros and the cons).\r\n\r\nThe discussion has also started there https://github.com/andrewrk/mineflayer/issues/182 and there https://github.com/demipixel/dutie/wiki/Example-task-scenarios.",
    "closed_at": null,
    "comment_data": [
        {
            "body": "Several steps into doing something : \r\n* task generation : generate all the tasks you are going to do to accomplish something\r\n* task scheduling : decide what you are going to do first\r\n* task evaluation : actually do it using mineflayer\r\n\r\nMost of the methods listed above mix all that together.\r\nI think it might be interesting to separate these aspects because really they are different problems.\r\n\r\nFor task generation : it might be interesting to build some kind of graph of what you can do to get from a state A to a state B.\r\nFor example : \r\n* A = you have no tool ; B = you want to get some stone ; what you can do : [[get log; craft wood; craft a stick ; craft a wood pickaxe; get stone], [kill someone with stone] ; [find a stone itemStack in the world]; [get some tnt; make it explode; get the resulting stone]]\r\n\r\nEach possible task could get a estimated time attribute in order to choose which to do.\r\nIf that graph was available, it would be easier to generate task based on what you have and what you want.",
            "created_at": "2015-04-30T11:20:33Z",
            "html_url": "https://github.com/andrewrk/mineflayer/issues/275#issuecomment-97743291",
            "id": 97743291,
            "issue_url": "https://api.github.com/repos/andrewrk/mineflayer/issues/275",
            "updated_at": "2015-04-30T11:20:33Z",
            "url": "https://api.github.com/repos/andrewrk/mineflayer/issues/comments/97743291",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "That would be quite difficult to do. How would we program every possibility? How would we show that tnt is very resource unfriendly? What about getting wool? Making a farm would take longer but would be useful.",
            "created_at": "2015-04-30T16:47:05Z",
            "html_url": "https://github.com/andrewrk/mineflayer/issues/275#issuecomment-97875414",
            "id": 97875414,
            "issue_url": "https://api.github.com/repos/andrewrk/mineflayer/issues/275",
            "updated_at": "2015-04-30T16:47:05Z",
            "url": "https://api.github.com/repos/andrewrk/mineflayer/issues/comments/97875414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7506359?v=3",
                "events_url": "https://api.github.com/users/demipixel/events{/privacy}",
                "followers_url": "https://api.github.com/users/demipixel/followers",
                "following_url": "https://api.github.com/users/demipixel/following{/other_user}",
                "gists_url": "https://api.github.com/users/demipixel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/demipixel",
                "id": 7506359,
                "login": "demipixel",
                "organizations_url": "https://api.github.com/users/demipixel/orgs",
                "received_events_url": "https://api.github.com/users/demipixel/received_events",
                "repos_url": "https://api.github.com/users/demipixel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/demipixel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/demipixel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/demipixel"
            }
        },
        {
            "body": "This should probably be a plugin, but it sounds like a lot of fun. You could attach providers that can answer with the amount of time to answer queries.\r\n\r\n```\r\nneed: * axe\r\nresponse from crafter: [go to chest, get things, go to bench, craft axe], time 60s\r\nresponse from fetcher: [go to chest, get stone axe], time 5s\r\n```\r\n\r\nThere could be providers for walking using different methods, inventory crafting, subcontracting to other providers and so on.",
            "created_at": "2015-04-30T17:08:08Z",
            "html_url": "https://github.com/andrewrk/mineflayer/issues/275#issuecomment-97883253",
            "id": 97883253,
            "issue_url": "https://api.github.com/repos/andrewrk/mineflayer/issues/275",
            "updated_at": "2015-04-30T17:08:08Z",
            "url": "https://api.github.com/repos/andrewrk/mineflayer/issues/comments/97883253",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/159568?v=3",
                "events_url": "https://api.github.com/users/vogonistic/events{/privacy}",
                "followers_url": "https://api.github.com/users/vogonistic/followers",
                "following_url": "https://api.github.com/users/vogonistic/following{/other_user}",
                "gists_url": "https://api.github.com/users/vogonistic/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vogonistic",
                "id": 159568,
                "login": "vogonistic",
                "organizations_url": "https://api.github.com/users/vogonistic/orgs",
                "received_events_url": "https://api.github.com/users/vogonistic/received_events",
                "repos_url": "https://api.github.com/users/vogonistic/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vogonistic/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vogonistic/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vogonistic"
            }
        },
        {
            "body": "Related to (the obtaining field of) https://github.com/wurstmineberg/assets.wurstmineberg.de/blob/master/json/items.json.description.txt",
            "created_at": "2015-08-09T23:57:39Z",
            "html_url": "https://github.com/andrewrk/mineflayer/issues/275#issuecomment-129262336",
            "id": 129262336,
            "issue_url": "https://api.github.com/repos/andrewrk/mineflayer/issues/275",
            "updated_at": "2015-08-10T15:54:59Z",
            "url": "https://api.github.com/repos/andrewrk/mineflayer/issues/comments/129262336",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "On that theme, trying to express achievement as tasks would be a good test for a task model http://minecraft.gamepedia.com/Achievement#List_of_achievements",
            "created_at": "2015-11-07T00:43:08Z",
            "html_url": "https://github.com/andrewrk/mineflayer/issues/275#issuecomment-154588918",
            "id": 154588918,
            "issue_url": "https://api.github.com/repos/andrewrk/mineflayer/issues/275",
            "updated_at": "2015-11-07T00:43:08Z",
            "url": "https://api.github.com/repos/andrewrk/mineflayer/issues/comments/154588918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/andrewrk/mineflayer/issues/275/comments",
    "created_at": "2015-04-28T12:33:42Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/andrewrk/mineflayer/issues/275/events",
    "html_url": "https://github.com/andrewrk/mineflayer/issues/275",
    "id": 71577517,
    "labels": [],
    "labels_url": "https://api.github.com/repos/andrewrk/mineflayer/issues/275/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 275,
    "state": "open",
    "title": "Combining multiple tasks",
    "updated_at": "2015-11-07T00:43:08Z",
    "url": "https://api.github.com/repos/andrewrk/mineflayer/issues/275",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
        "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
        "followers_url": "https://api.github.com/users/rom1504/followers",
        "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
        "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rom1504",
        "id": 2346494,
        "login": "rom1504",
        "organizations_url": "https://api.github.com/users/rom1504/orgs",
        "received_events_url": "https://api.github.com/users/rom1504/received_events",
        "repos_url": "https://api.github.com/users/rom1504/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rom1504"
    }
}