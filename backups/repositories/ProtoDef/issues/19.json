{
    "assignee": null,
    "body": "Currently in nmp we only know about the id switched on, not the name of the packet, it's needed to do the mapping there.\r\nDoes it make sense for the serializer/parser to know about \"names\" ?\r\n\r\nWhat are \"packet names\" ? Just type names as currently (but knowing the type read in the meta is apparently confusing so that's not a good solution) ? Maybe it could be possible to add some meta information in the switch ?\r\n\r\nOr maybe the mapping id to packet name shouldn't be the job of the serializer/parser and should be let to users ? (as it currently done in nmp)",
    "closed_at": "2015-11-06T14:57:31Z",
    "comment_data": [
        {
            "body": "Ah, I know of a good way to solve that problem: add the possibility of giving names to switch cases, just like container fields have names.\r\n\r\nEdit: the purpose would be avoiding https://github.com/PrismarineJS/prismarine-nbt/pull/7/files#diff-196a18a54d8a91c332693181d5ad8337R15 (and the same for nmp packets)",
            "created_at": "2015-11-02T16:38:09Z",
            "html_url": "https://github.com/roblabla/ProtoDef/issues/19#issuecomment-153076813",
            "id": 153076813,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/19",
            "updated_at": "2015-11-02T17:30:11Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/153076813",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Possibilities:\r\n\r\n## have names in switch fields\r\n```json\r\n{\r\n        \"name\": \"value\",\r\n        \"type\": [\r\n          \"switch\",\r\n          {\r\n            \"compareTo\": \"type\",\r\n            \"fields\": [\r\n              {\"value\":\"0\",\"type\":\"end\",\"name\":\"end\"},\r\n              {\"value\":\"1\",\"type\":\"byte\",\"name\":\"byte\"},\r\n              {\"value\":\"2\",\"type\":\"short\",\"name\":\"short\"},\r\n              {\"value\":\"3\",\"type\":\"int\",\"name\":\"int\"},\r\n              {\"value\":\"4\",\"type\":\"long\",\"name\":\"long\"},\r\n              {\"value\":\"5\",\"type\":\"float\",\"name\":\"float\"},\r\n              {\"value\":\"6\",\"type\":\"double\",\"name\":\"double\"},\r\n              {\"value\":\"7\",\"type\":\"byteArray\",\"name\":\"byteArray\"},\r\n              {\"value\":\"8\",\"type\":\"string\",\"name\":\"string\"},\r\n              {\"value\":\"9\",\"type\":\"list\",\"name\":\"list\"},\r\n              {\"value\":\"10\",\"type\":\"compound\",\"name\":\"compound\"},\r\n              {\"value\":\"11\",\"type\":\"intArray\",\"name\":\"intArray\"}\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n```\r\nIt's kind of ugly and it doesn't quite solve the problem of the field that would hold the name.\r\n\r\nHiding the compared field ? (https://github.com/PrismarineJS/node-minecraft-protocol/pull/274#discussion_r43066274)\r\n\r\n## a new \"mapper\" type that would transform the id to name and vice-versa: \r\n```json\r\n[\"mapper\", {\"fromField\":\"typeId\", \r\n                 \"toField\":\"typeName\",\"conversions\":{\"0\":\"end\",\"1\":\"byte\",\"2\":\"short\",...}}]\r\n```\r\nIt looks cleaner but it kind of add a level of serialization/parsing, but maybe that's ok.\r\n\r\nWould be that for this example:\r\n```json\r\n[\r\n    \"container\",\r\n    [\r\n      {\r\n        \"name\": \"type\",\r\n        \"type\": [\r\n          \"mapper\",\r\n          {\r\n            \"type\": \"byte\",\r\n            \"mappings\": {\r\n              \"0\": \"end\",\r\n              \"1\": \"byte\",\r\n              \"2\": \"short\",\r\n              \"3\": \"int\",\r\n              \"4\": \"long\",\r\n              \"5\": \"float\",\r\n              \"6\": \"double\",\r\n              \"7\": \"byteArray\",\r\n              \"8\": \"string\",\r\n              \"9\": \"list\",\r\n              \"10\": \"compound\",\r\n              \"11\": \"intArray\"\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\": \"name\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"name\": \"value\",\r\n        \"type\": [\r\n          \"switch\",\r\n          {\r\n            \"compareTo\": \"type\",\r\n            \"fields\": {\r\n              \"0\": \"end\",\r\n              \"1\": \"byte\",\r\n              \"2\": \"short\",\r\n              \"3\": \"int\",\r\n              \"4\": \"long\",\r\n              \"5\": \"float\",\r\n              \"6\": \"double\",\r\n              \"7\": \"byteArray\",\r\n              \"8\": \"string\",\r\n              \"9\": \"list\",\r\n              \"10\": \"compound\",\r\n              \"11\": \"intArray\"\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  ]\r\n```\r\n\r\nedit3: that example with the mapper isn't quite done, WIP",
            "created_at": "2015-11-02T20:10:07Z",
            "html_url": "https://github.com/roblabla/ProtoDef/issues/19#issuecomment-153142975",
            "id": 153142975,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/19",
            "updated_at": "2015-11-02T20:54:50Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/153142975",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/19/comments",
    "created_at": "2015-11-01T01:30:37Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": "90c97fc966894cf9c6900ba6b07408f1b4cb67e1",
            "commit_url": "https://api.github.com/repos/rom1504/ProtoDef/commits/90c97fc966894cf9c6900ba6b07408f1b4cb67e1",
            "created_at": "2015-11-05T21:39:20Z",
            "event": "referenced",
            "id": 456258157,
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/events/456258157"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-11-06T14:57:31Z",
            "event": "closed",
            "id": 456990990,
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/events/456990990"
        }
    ],
    "events_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/19/events",
    "html_url": "https://github.com/roblabla/ProtoDef/issues/19",
    "id": 114444260,
    "labels": [],
    "labels_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/19/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 19,
    "state": "closed",
    "title": "Should the serializer/parser know about names ?",
    "updated_at": "2015-11-06T14:57:31Z",
    "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/19",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
        "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
        "followers_url": "https://api.github.com/users/rom1504/followers",
        "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
        "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rom1504",
        "id": 2346494,
        "login": "rom1504",
        "organizations_url": "https://api.github.com/users/rom1504/orgs",
        "received_events_url": "https://api.github.com/users/rom1504/received_events",
        "repos_url": "https://api.github.com/users/rom1504/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rom1504"
    }
}