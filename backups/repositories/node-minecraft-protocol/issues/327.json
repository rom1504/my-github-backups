{
    "assignee": null,
    "body": "`ping(options, cb)` performs a [Server List Ping](http://wiki.vg/Server_List_Ping) using the `STATUS` protocol, returning a bunch of useful information, example:\r\n\r\n```json\r\n{\r\n    \"version\": {\r\n        \"name\": \"1.8.7\",\r\n        \"protocol\": 47\r\n    },\r\n    \"players\": {\r\n        \"max\": 100,\r\n        \"online\": 5,\r\n        \"sample\": [\r\n            {\r\n                \"name\": \"thinkofdeath\",\r\n                \"id\": \"4566e69f-c907-48ee-8d71-d7ba5aa00d20\"\r\n            }\r\n        ]\r\n    },\t\r\n    \"description\": {\r\n        \"text\": \"Hello world\"\r\n    },\r\n    \"favicon\": \"data:image/png;base64,<data>\"\r\n}\r\n```\r\n\r\nThe version/protocol field could be useful for https://github.com/PrismarineJS/node-minecraft-protocol/issues/234 Cross-version protocol support. Before initiating the connection, perform a ping to get the version and use it accordingly. `description`, `favicon`, and other fields could also be saved for consultation later.\r\n\r\nFML/Forge servers https://github.com/PrismarineJS/node-minecraft-protocol/issues/114 https://github.com/PrismarineJS/node-minecraft-protocol/pull/326 additionally contain more information:\r\n\r\n```json\r\n  \"modinfo\": {\r\n    \"type\": \"FML\",\r\n    \"modList\": [\r\n      {\r\n        \"modid\": \"mcp\",\r\n        \"version\": \"9.18\"\r\n      },\r\n      {\r\n        \"modid\": \"FML\",\r\n        \"version\": \"8.0.99.99\"\r\n      },\r\n      {\r\n        \"modid\": \"Forge\",\r\n        \"version\": \"11.15.0.1715\"\r\n      },\r\n      {\r\n        \"modid\": \"IronChest\",\r\n        \"version\": \"6.0.121.768\"\r\n      }\r\n    ]\r\n  }\r\n```\r\n\r\n(modinfo.type is also returned on [Glowstone++](https://github.com/GlowstonePlusPlus/GlowstonePlusPlus/commit/f95fd32b34388bbe789db2ce82edba6278286d35), 'BUKKIT' is a recognized type, to show the Bukkit logo in FML's server list screen. 'VANILLA' as well but not clear if anyone sends it.).\r\n\r\n`modList` is particularly useful because it gives the list of mods you must have in order to connect to the server. The FML|HS handshake protocol sends this list in the ModList packet, and if it doesn't match the server will kick the client, so the client would have to know it *a priori* unless retrieved from the Server List Ping. \r\n\r\n`createClient()` already does perform one pre-connect action: resolving DNS srv (_minecraft._tcp) records. ping.js doesn't do this, but it probably should (bug? anyone want to test?). Server List Ping would be another reasonable pre-connect step to perform, imho. Real clients usually show a server list before the player connects, so this would more closely match vanilla behavior as well.\r\n\r\nTherefore here's the changes I suggest:\r\n\r\n* Refactor DNS SRV resolution out of createClient.js, so ping() can use it standalone as well\r\n* Enhance createClient() to ping() (including DNS SRV) before connecting, by default\r\n* Optionally allow createClient() to skip pinging (option `ping: false`?), if desired; probably ought to also have `dns_srv: false` option to skip the pre-connect DNS resolution step. Some clients may want to skip these steps (and forgo the added benefits - no server description, automatic protocol negotiation, automatic Forge mod support), but I'd imagine most will want the useful default functionality",
    "closed_at": "2016-01-25T02:32:39Z",
    "comment_data": [
        {
            "body": "Made this change in examples/client_forge: https://github.com/PrismarineJS/node-minecraft-protocol/commit/283b75d6946fcf1999beb1a29dc0d6cf4d09edae - but I think it'd be useful generically",
            "created_at": "2016-01-24T04:27:57Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/327#issuecomment-174248663",
            "id": 174248663,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327",
            "updated_at": "2016-01-24T04:27:57Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174248663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "ping not doing DNS SRV is a bug.\r\n\r\nThe ability to disable the SRV request isn't super useful in the 99.9999% scenario. The notchian client makes an SRV DNS request, we're just matching that. If someone wants to bypass it, he can just provide an already-created TCP stream to NMP (when we support that).\r\n\r\nIMO, createClient shouldn't call ping. The notchian client doesn't do that, for one. For two, some servers don't reply to pings. What you describe is a hack specific for the forge client, and I think should only belong to a future \"nmp-forge\" module. The overhead isn't negligeable (initiate a connection, handshake, ping, close connection) for something that people not connecting to forge (which should be most people) don't need at all.",
            "created_at": "2016-01-24T13:03:02Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/327#issuecomment-174294603",
            "id": 174294603,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327",
            "updated_at": "2016-01-24T13:03:02Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174294603",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "\"ping not doing DNS SRV is a bug.\" Actually it does, connect is defined in\ncreateClient and ping is only used in files including createClient (in\ntest.js). That means ping doesn't work if you require only ping.js but that\nshouldn't happen since users require the whole nmp. That design is a bit\nconfusing though, could be improved.\n\nOn Sun, Jan 24, 2016, 14:03 Robin Lambertz <notifications@github.com> wrote:\n\n> ping not doing DNS SRV is a bug.\n>\n> The ability to disable the SRV request isn't super useful in the 99.9999%\n> scenario. The notchian client makes an SRV DNS request, we're just matching\n> that. If someone wants to bypass it, he can just provide an already-created\n> TCP stream to NMP (when we support that).\n>\n> IMO, createClient shouldn't call ping. The notchian client doesn't do\n> that, for one. For two, some servers don't reply to pings. What you\n> describe is a hack specific for the forge client, and I think should only\n> belong to a future \"nmp-forge\" module. The overhead isn't negligeable\n> (initiate a connection, handshake, ping, close connection) for something\n> that people not connecting to forge (which should be most people) don't\n> need at all.\n>\n> â€”\n> Reply to this email directly or view it on GitHub\n> <https://github.com/PrismarineJS/node-minecraft-protocol/issues/327#issuecomment-174294603>\n> .\n>\n",
            "created_at": "2016-01-24T13:29:02Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/327#issuecomment-174298631",
            "id": 174298631,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327",
            "updated_at": "2016-01-24T13:29:02Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174298631",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Pinging before connecting could be an option in createClient, because it's\nindeed useful to support dynamic cross version. We could have a timeout for\nit so that if it timeout something appropriate could be done (defaulting to\nthe current version for dynamic cross version or trying normal login for\nforge (or a default list of mods)\n\nOn Sun, Jan 24, 2016, 14:28 Romain Beaumont <romain.rom1@gmail.com> wrote:\n\n> \"ping not doing DNS SRV is a bug.\" Actually it does, connect is defined in\n> createClient and ping is only used in files including createClient (in\n> test.js). That means ping doesn't work if you require only ping.js but that\n> shouldn't happen since users require the whole nmp. That design is a bit\n> confusing though, could be improved.\n>\n> On Sun, Jan 24, 2016, 14:03 Robin Lambertz <notifications@github.com>\n> wrote:\n>\n>> ping not doing DNS SRV is a bug.\n>>\n>> The ability to disable the SRV request isn't super useful in the 99.9999%\n>> scenario. The notchian client makes an SRV DNS request, we're just matching\n>> that. If someone wants to bypass it, he can just provide an already-created\n>> TCP stream to NMP (when we support that).\n>>\n>> IMO, createClient shouldn't call ping. The notchian client doesn't do\n>> that, for one. For two, some servers don't reply to pings. What you\n>> describe is a hack specific for the forge client, and I think should only\n>> belong to a future \"nmp-forge\" module. The overhead isn't negligeable\n>> (initiate a connection, handshake, ping, close connection) for something\n>> that people not connecting to forge (which should be most people) don't\n>> need at all.\n>>\n>> â€”\n>> Reply to this email directly or view it on GitHub\n>> <https://github.com/PrismarineJS/node-minecraft-protocol/issues/327#issuecomment-174294603>\n>> .\n>>\n>\n",
            "created_at": "2016-01-24T13:36:53Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/327#issuecomment-174298979",
            "id": 174298979,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327",
            "updated_at": "2016-01-24T13:36:53Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174298979",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "If a server does not respond to Server List Ping, then how will it appear in the server list? Example of server that doesn't respond?\r\n\r\n**update:** edited src/createServer.js, commented out `client.once('ping_start', onPing);` to test against the vanilla client - it will show \"Pingingâ€¦\" and a red X with a \"no connection\" tooltip:\r\n\r\n<img width=\"708\" alt=\"screen shot 2016-01-24 at 9 27 15 am\" src=\"https://cloud.githubusercontent.com/assets/5897956/12537780/d5dc8c0e-c27c-11e5-95b8-56809843d105.png\">\r\n\r\nand then after some time \"Can't connect to server\":\r\n\r\n<img width=\"646\" alt=\"screen shot 2016-01-24 at 9 27 37 am\" src=\"https://cloud.githubusercontent.com/assets/5897956/12537781/d5fd6352-c27c-11e5-935c-3f0610b31c50.png\">\r\n\r\nalthough you can still double-click to force connect",
            "created_at": "2016-01-24T15:48:02Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/327#issuecomment-174310946",
            "id": 174310946,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327",
            "updated_at": "2016-01-24T17:29:50Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174310946",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Relevant: https://github.com/Dinnerbone/mcstatus",
            "created_at": "2016-01-24T16:15:00Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/327#issuecomment-174312482",
            "id": 174312482,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327",
            "updated_at": "2016-01-24T16:15:00Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174312482",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "I've seen some custom servers do that to put a server in some sort of\n\"maintenance mode\"\n\nOn Sun, Jan 24, 2016, 5:15 PM deathcap <notifications@github.com> wrote:\n\n> Relevant: https://github.com/Dinnerbone/mcstatus\n>\n> â€”\n> Reply to this email directly or view it on GitHub\n> <https://github.com/PrismarineJS/node-minecraft-protocol/issues/327#issuecomment-174312482>\n> .\n>\n",
            "created_at": "2016-01-24T17:59:51Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/327#issuecomment-174325373",
            "id": 174325373,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327",
            "updated_at": "2016-01-24T17:59:51Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174325373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "Here's a working prototype along the lines of what I had in mind:\r\n\r\nhttps://github.com/deathcap/node-minecraft-protocol-auto\r\n\r\nUses a ping to get the protocol version, enables Forge with mod list if server type='FML', and also automatically sets the client protocol version to match the server version. Works in testing a 1.9 snapshot, 1.8.9, some third-party 1.8 server software, and a Forge 1.8.9 server, but has some rough edges:\r\n\r\n* Hardcodes knowledge of release versions and protocol versions, would be nice to get this from minecraft-data instead (protocolVersions.json added in https://github.com/deathcap/node-minecraft-protocol-forge)\r\n* Uses only the major release version (1.8, 1.9..), but client/server may have mismatched protocol versions, PR to NMP to allow specifying protocolVersion directly: https://github.com/PrismarineJS/node-minecraft-protocol/pull/330\r\n* Ping timeouts: not handled well, could fallback to a normal server connection if an error is received, but if the server is up but ignoring the ping then it'll wait indefinitely, separate bug https://github.com/PrismarineJS/node-minecraft-protocol/issues/329\r\n* Had to change the API of the wrapper, not compatible with `client = createClient()` because of the ping packet, made it async `createClientAsync(options, function(err, client)`\r\n* Forge support uses [node-minecraft-protocol-forge](https://github.com/deathcap/node-minecraft-protocol-forge), TBD how this support will fit in https://github.com/PrismarineJS/node-minecraft-protocol/pull/326\r\n\r\nI haven't published node-minecraft-protocol-auto to NPM, I still think it would be a worthwhile addition to node-minecraft-protocol itself. Maybe not in `createClient()`, but it could be a separate API available as an opt-in feature.",
            "created_at": "2016-01-25T02:08:23Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/327#issuecomment-174371198",
            "id": 174371198,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327",
            "updated_at": "2016-01-25T02:08:23Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174371198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "This issue is well-covered by https://github.com/PrismarineJS/node-minecraft-protocol/issues/234 so I'll close it, still would like to see this though =)",
            "created_at": "2016-01-25T02:32:39Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/327#issuecomment-174374048",
            "id": 174374048,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327",
            "updated_at": "2016-01-25T02:32:39Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174374048",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327/comments",
    "created_at": "2016-01-24T04:26:12Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": "4190a4a8d80a68be311e7549ffdcef766ea87cf2",
            "commit_url": "https://api.github.com/repos/deathcap/node-minecraft-protocol-auto/commits/4190a4a8d80a68be311e7549ffdcef766ea87cf2",
            "created_at": "2016-01-25T01:48:18Z",
            "event": "referenced",
            "id": 524443637,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/524443637"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-25T02:32:39Z",
            "event": "closed",
            "id": 524461237,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/524461237"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327/events",
    "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/327",
    "id": 128371588,
    "labels": [],
    "labels_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 327,
    "state": "closed",
    "title": "Always ping server before initiating connection?",
    "updated_at": "2016-01-25T02:32:39Z",
    "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/327",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
        "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
        "followers_url": "https://api.github.com/users/deathcap/followers",
        "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
        "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/deathcap",
        "id": 5897956,
        "login": "deathcap",
        "organizations_url": "https://api.github.com/users/deathcap/orgs",
        "received_events_url": "https://api.github.com/users/deathcap/received_events",
        "repos_url": "https://api.github.com/users/deathcap/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/deathcap"
    }
}