{
    "assignee": null,
    "body": "",
    "closed_at": null,
    "comment_data": [
        {
            "body": "WIP, got to fix stuff before this is getting anywhere.",
            "created_at": "2015-12-04T04:18:52Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-161870558",
            "id": 161870558,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2015-12-04T04:18:52Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161870558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "follows https://github.com/roblabla/ProtoDef/pull/38 but with promise in reads",
            "created_at": "2015-12-04T04:19:23Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-161870595",
            "id": 161870595,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2015-12-04T04:19:23Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161870595",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Alright the benchmark works.\r\nI'm trying to use https://github.com/rvagg/bl#slice to speed up reading split packets, but the problem is slice return a Buffer instance (and not a BufferList instance), which is a problem when `this.incomingBuffer=this.incomingBuffer.slice(count);` is done.\r\n\r\nOne way to deal with that would be losing the \"your data is at offset 0\" assumption and returning an offset in the promise returned by `read`.\r\nThat would leave it to the dataGetter to deal with the offset.\r\nIt might mean that the buffer would get too big, but I guess we could always slice it if it gets really too big and update the offset in consequence.",
            "created_at": "2015-12-04T16:34:40Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-162013732",
            "id": 162013732,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2015-12-04T16:35:02Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/162013732",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "That idea didn't work (see https://github.com/roblabla/ProtoDef/pull/44 and https://github.com/roblabla/ProtoDef/pull/45)",
            "created_at": "2015-12-04T17:29:05Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-162028864",
            "id": 162028864,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2015-12-04T17:29:05Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/162028864",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "So, the benchmark takes 3s instead of 1s. \r\nBut that's okay because in realistic cases, the packet won't be that much split.",
            "created_at": "2015-12-04T17:30:08Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-162029076",
            "id": 162029076,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2015-12-04T17:30:08Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/162029076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "If needed, that's how to write _transform to get whole packets in the serializer:\r\n```js\r\n_transform(chunk, enc, cb) {\r\n    var transformedBuffer=new Buffer(0);\r\n\r\n    try {\r\n      this.createPacketBuffer(chunk, (size,f) => {\r\n        var buffer=new Buffer(size);\r\n        f(buffer);\r\n        transformedBuffer=Buffer.concat([transformedBuffer,buffer])\r\n      });\r\n      this.push(transformedBuffer);\r\n      cb();\r\n    }\r\n    catch(err) {\r\n      cb(err);\r\n    }\r\n  }\r\n```\r\nIt's pretty fast. (I think Buffer.concat is pretty fast somehow)\r\n\r\nI'm not exactly sure if we need that or not for https://github.com/PrismarineJS/node-minecraft-protocol/blob/master/src/transforms/compression.js#L19",
            "created_at": "2015-12-04T20:33:33Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-162074333",
            "id": 162074333,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2015-12-04T21:06:21Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/162074333",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "If we want, we don't even need to create new small buffer each time, it's possible to just allocate a big enough buffer (say 100 byte), and slice it when returned, and increase its size if needed (kind of like std::vector)\r\nNot having to pre-compute the size makes the whole thing (even with the concat of small buffer solution) have the same perf. And the code is much better.",
            "created_at": "2015-12-04T21:40:59Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-162089732",
            "id": 162089732,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2015-12-04T21:42:15Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/162089732",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Currently trying to make nmp work with this.\r\nProblems are mostly these compression and split step in mc protocol.\r\nThey mean you need to read the whole thing and you need the size of stuff.",
            "created_at": "2015-12-05T01:01:38Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-162120726",
            "id": 162120726,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2015-12-05T01:01:38Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/162120726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "In good progress for using it in nmp and prismarine-nbt.\r\nTo make stuff easier, do a \r\n* [x] protodef.readBuffer\r\n* [x] protodef.writeBuffer\r\n\r\nPossibly merge that with createPacketBuffer and parsePacketBuffer\r\n\r\nsee https://github.com/roblabla/ProtoDef/blob/write_async_promise/test/dataTypes/numeric.js#L5",
            "created_at": "2015-12-05T03:09:55Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-162135006",
            "id": 162135006,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2016-01-10T01:42:54Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/162135006",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "one possibility is having both implementation (buffer and \"stream\" (read/write function)) available like is done by https://github.com/Steveice10/PacketLib/tree/master/src/main/java/org/spacehq/packetlib/io (used in mcprotocollib)\r\n\r\nedit: hmm I'm not 100% sure if this is really comparable",
            "created_at": "2015-12-18T16:49:25Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-165834507",
            "id": 165834507,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2015-12-18T16:51:08Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/165834507",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "found a problem in prismarine-nbt \"compound\" type (and the same one will appear in entity metadata) : \r\nit's needed to read a byte and then not move the offset.\r\n\r\nCurrently that's not really possible with this new api. got to figure out how to get this working",
            "created_at": "2015-12-19T18:16:41Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-166011382",
            "id": 166011382,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2015-12-19T18:16:51Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/166011382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "this isn't quite ready as I didn't managed to make nmp works with this yet, but this is the most promising PR out of all of the related them, so I'm going to close the other ones and keep only this one open to make things clearer.",
            "created_at": "2016-01-10T01:43:45Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-170299842",
            "id": 170299842,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2016-01-10T01:43:45Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/170299842",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "I'll probably need to rebase this on master before merging (when it comes to that)",
            "created_at": "2016-01-10T01:45:26Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-170299908",
            "id": 170299908,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2016-01-10T01:45:26Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/170299908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Kind of related  https://jakearchibald.com/2016/streams-ftw/",
            "created_at": "2016-01-25T16:18:54Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/43#issuecomment-174561091",
            "id": 174561091,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
            "updated_at": "2016-01-25T16:18:54Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/174561091",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43/comments",
    "created_at": "2015-12-04T04:12:35Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43/events",
    "html_url": "https://github.com/roblabla/ProtoDef/pull/43",
    "id": 120328747,
    "labels": [],
    "labels_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 43,
    "pull_request": {
        "diff_url": "https://github.com/roblabla/ProtoDef/pull/43.diff",
        "html_url": "https://github.com/roblabla/ProtoDef/pull/43",
        "patch_url": "https://github.com/roblabla/ProtoDef/pull/43.patch",
        "url": "https://api.github.com/repos/roblabla/ProtoDef/pulls/43"
    },
    "state": "open",
    "title": "Write async promise",
    "updated_at": "2016-01-25T16:18:54Z",
    "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/43",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
        "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
        "followers_url": "https://api.github.com/users/rom1504/followers",
        "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
        "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rom1504",
        "id": 2346494,
        "login": "rom1504",
        "organizations_url": "https://api.github.com/users/rom1504/orgs",
        "received_events_url": "https://api.github.com/users/rom1504/received_events",
        "repos_url": "https://api.github.com/users/rom1504/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rom1504"
    }
}