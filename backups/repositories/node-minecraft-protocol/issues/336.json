{
    "assignee": null,
    "body": "Some kind of protocol support for BungeeCord in node-minecraft-protocol might be interesting. \r\n\r\nIt sends additional information in the set_protocol packet host field, in the same way as Forge (which instead appends \\0FML\\0 https://github.com/PrismarineJS/node-minecraft-protocol/issues/114, called this `tagHost` in https://github.com/PrismarineJS/node-minecraft-protocol/pull/326)\r\n\r\nStumbled across this in [Cuberite](https://github.com/cuberite/cuberite/blob/657b0ed0070cc31e375e33ec752e4757e0c7a343/src/Protocol/Protocol18x.cpp):\r\n\r\n```c++\r\n\t// BungeeCord handling:\r\n\t// If BC is setup with ip_forward == true, it sends additional data in the login packet's ServerAddress field:\r\n\t// hostname\\00ip-address\\00uuid\\00profile-properties-as-json\r\n\tAStringVector Params;\r\n\tif (cRoot::Get()->GetServer()->ShouldAllowBungeeCord() && SplitZeroTerminatedStrings(a_ServerAddress, Params) && (Params.size() == 4))\r\n\t{\r\n\t\tLOGD(\"Player at %s connected via BungeeCord\", Params[1].c_str());\r\n\t\tm_ServerAddress = Params[0];\r\n\t\tm_Client->SetIPString(Params[1]);\r\n\t\tm_Client->SetUUID(cMojangAPI::MakeUUIDShort(Params[2]));\r\n\t\tm_Client->SetProperties(Params[3]);\r\n\t}\r\n```\r\n\r\nhttps://github.com/PrismarineJS/node-minecraft-protocol/issues/145 BungeeCord : Fails to parse - closed, not known if still applicable\r\nhttps://github.com/PrismarineJS/node-minecraft-protocol/issues/302 - a potential use case\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "body": "Again, I'd like to see this as a separate module, outside from NMP. NMP should follow the open/closed principle : it should offer the normal \"IDK this thing\" support for extensions (effectively behaving as the normal minecraft client), but be extensible enough so having a better support of those things can easily live outside.\r\n\r\nThe problem with #145 was due to the protocol hack iirc.",
            "created_at": "2016-02-01T01:20:42Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/336#issuecomment-177688378",
            "id": 177688378,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/336",
            "updated_at": "2016-02-01T01:20:42Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177688378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "Yeah the `tagHost` client option will allow client plugins to send this BungeeCord proxy information (and perhaps also [Lilypad](https://github.com/GlowstoneMC/Glowstone/issues/569)), but some other change may be needed to let server plugins read it. Haven't investigated much but the relevant field is in [src/createServer.js](https://github.com/PrismarineJS/node-minecraft-protocol/blob/dd06a7075e1e51eaccc891e804a865d02b961664/src/createServer.js#L154):\r\n\r\n```javascript\r\n    function onHandshake(packet) {\r\n      client.serverHost = packet.serverHost;\r\n```\r\n\r\nKnown formats of packet.serverHost field:\r\n\r\n* hostname - vanilla\r\n* hostname\\00ip-address\\00uuid\\00profile-properties-as-json - BungeeCord\r\n* hostname\\0FML\\0 - Forge (open question: what is sent for Forge + BungeeCord?)\r\n* {\"h\":\"localhost\",\"rIp\":\"127.0.0.1\",...} JSON - Lilypad\r\n\r\nWhat kind of mechanism for plugins to handle these fields did you have in mind? My first thought was a callback, but its not clear how multiple plugins each handling this field would interact.",
            "created_at": "2016-02-01T03:08:56Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/336#issuecomment-177733376",
            "id": 177733376,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/336",
            "updated_at": "2016-02-01T03:08:56Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177733376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Forge is probably `hostname\\0FML\\0 - Forge\\00ip-address\\00uuid\\00profile-properties-as-json`, given the packet should first be sent forge-style by the client, and then bungeecord appends its stuff, before reaching the server.\r\n\r\nAnyway, the plugin system for servers is a tiny bit more complicated. If we want the same middleware system discussed in #333 , we'll need some help from the `Server`. I'm thinking a connect-style API would be good.\r\n\r\n(Ignore the pythonic syntax in there, that's me being lazy)\r\n```\r\nfunction handleForge(opts) {\r\n  return function(client, next) {\r\n    var splitHostname = this.serverName.split('\\0');\r\n    if (splitHostname.length > 2 && splitHostname[1] == \"FML\" && splitHostname[2] == \" - Forge\") {\r\n      this.serverName = splitHostname[0];\r\n    }\r\n    return next();\r\n  };\r\n}\r\n\r\nfunction handleBungee(opts) { return function(client, next) {\r\n  var splitHostname = client.serverName.split('\\0');\r\n  if (splitHostname.length > 3) {\r\n    var realIP = splitHostname[-3];\r\n    client.uuid = splitHostname[-2];\r\n    client.profile = splitHostname[-1]; // I think that's the name ?\r\n    this.serverName = splitHostname[0:-4];\r\n  }\r\n  return next();\r\n};}\r\n\r\nvar server = new Server();\r\nserver.use(handleBungee(opts));\r\nserver.use(handleForge(opts));\r\n```\r\n\r\nIt's relatively pretty, and powerful enough for our purposes I think. Obviously, order is important, but there's no way to get around this fact.",
            "created_at": "2016-02-01T12:14:14Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/336#issuecomment-177942918",
            "id": 177942918,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/336",
            "updated_at": "2016-02-01T12:16:18Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177942918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "https://www.npmjs.com/package/ware is a ready-to-use middleware system.",
            "created_at": "2016-02-01T12:18:40Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/336#issuecomment-177946084",
            "id": 177946084,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/336",
            "updated_at": "2016-02-01T12:18:40Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177946084",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/336/comments",
    "created_at": "2016-01-31T18:53:34Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-02-01T13:02:32Z",
            "event": "labeled",
            "id": 534142961,
            "label": {
                "color": "5319e7",
                "name": "new feature"
            },
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/534142961"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/336/events",
    "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/336",
    "id": 130167480,
    "labels": [
        {
            "color": "5319e7",
            "name": "new feature",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/labels/new%20feature"
        }
    ],
    "labels_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/336/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 336,
    "state": "open",
    "title": "BungeeCord protocol support",
    "updated_at": "2016-02-01T13:02:32Z",
    "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/336",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
        "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
        "followers_url": "https://api.github.com/users/deathcap/followers",
        "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
        "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/deathcap",
        "id": 5897956,
        "login": "deathcap",
        "organizations_url": "https://api.github.com/users/deathcap/orgs",
        "received_events_url": "https://api.github.com/users/deathcap/received_events",
        "repos_url": "https://api.github.com/users/deathcap/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/deathcap"
    }
}