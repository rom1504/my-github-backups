{
    "assignee": null,
    "body": "I almost cried myself to sleep tonight after I realized I hadn't pulled from master in like 20 commits even though I finished worlds. Luckily you didn't change much :)\r\n\r\n- Basics of worlds going. Typing \"world\" will teleport you to 0, 70, 0 in the nether and generate it if need be.\r\n- A few changes to logging in and setting positions, etc\r\n- serv.worlds, add more worlds by doing serv.worlds.push(new World(...))\r\n- BUG: Time is randomly switching... Is this my fault? Every second it seems to flip back and forth between two \"times\", meaning it will flash from day to night...? Might be something else, I don't know, because I didn't touch time...\r\n- CODE CRAP: \"world\" command is stuffed in playerPlugin/world.js. Should I spend the effort of trying to generate a portal both in the overworld (using flint + steel) and in the nether (fully generated by server) or should I simply make a cleaner command until we get around to that?",
    "closed_at": "2015-10-25T22:37:47Z",
    "comment_data": [
        {
            "body": "Pretty good.\r\nA few points I think might improve the code:\r\n1. make serv.worlds an object instead of an array so we can so serv.worlds[\"overworld\"] instead of serv.world[0]\r\n2. instead of doing serv.worlds[player.world] everywhere, what about putting a reference of the world directly in player.world ? (it won't copy the world, js works with references for objects)\r\n3. if player.world is the actual world, make a player.worldName to store the world the player is currently in. (maybe the name of the world should be directly in prismarine-world though, but we can change that later)\r\n\r\nWell I'm not entirely sure about 1 and 3. I think 2 would improve things though.",
            "created_at": "2015-10-14T12:54:56Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/pull/80#issuecomment-148041180",
            "id": 148041180,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/80",
            "updated_at": "2015-10-14T12:54:56Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/148041180",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Okay, when I do a rebase, it works fine, but then it says \"1 behind 19 ahead\" or whatever. After the rebase, I had to pull and then merge with origin/worlds or whatever it was, otherwise it wouldn't let me push (obviously).\r\n\r\nMy biggest issue with your first point is that it's similar to the plugin problem: I'm worried about assuming no two plugins are going to try and take the same name (even though I know serv.worlds.overworld would be cleaner to work with). Sure, we could have a serv.createWorld to do this for us, but that means if two plugins have never met before and use the same world name, ONE of them will crash.\r\n\r\nFor your second option: I was thinking about that. As long as it's easy to use or compare, I think it would be fine (compare as in playerA.world == playerB.world). I don't know if we'd actually need three if we did this one.",
            "created_at": "2015-10-14T14:59:54Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/pull/80#issuecomment-148076818",
            "id": 148076818,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/80",
            "updated_at": "2015-10-14T14:59:54Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/148076818",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7506359?v=3",
                "events_url": "https://api.github.com/users/demipixel/events{/privacy}",
                "followers_url": "https://api.github.com/users/demipixel/followers",
                "following_url": "https://api.github.com/users/demipixel/following{/other_user}",
                "gists_url": "https://api.github.com/users/demipixel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/demipixel",
                "id": 7506359,
                "login": "demipixel",
                "organizations_url": "https://api.github.com/users/demipixel/orgs",
                "received_events_url": "https://api.github.com/users/demipixel/received_events",
                "repos_url": "https://api.github.com/users/demipixel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/demipixel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/demipixel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/demipixel"
            }
        },
        {
            "body": "\"it wouldn't let me push \" : do git push --force (after a rebase)\r\n\r\nYeah I guess we could compare that way. \r\n\r\nI agree about the critics on my first point, maybe I want to make 5 overworld.",
            "created_at": "2015-10-14T15:02:30Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/pull/80#issuecomment-148077521",
            "id": 148077521,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/80",
            "updated_at": "2015-10-14T15:02:59Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/148077521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Ok I just tested it.\r\nThat nether is fun.\r\n\r\nIntroduced bug: can't see the other players in the overworld. Fix it ;)\r\n\r\nAs a general rule, when you change stuff in flying-squid, think about testing it with 2 clients, to make sure multiplayer stuff still work ;)",
            "created_at": "2015-10-14T17:24:42Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/pull/80#issuecomment-148125103",
            "id": 148125103,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/80",
            "updated_at": "2015-10-14T17:25:18Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/148125103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "> 1) please fix the indentation there ;)\r\n\r\nk\r\n\r\n> 2) Ah and in the rest of the file, we do 2 spaces indentation, configure your editor to do that.\r\n\r\nIt is configured... o_O I'm using sublime... Sometimes it changes by file (e.g. if it recognizes a 4-space file)\r\n\r\n> 3) what is this opt for ?\r\n\r\nIt's in the api.md. opt.yaw and opt.pitch\r\n\r\n> 4) pretty sure you can't do that and the order of stuff need to be respected.\r\n\r\nSo you want player.spawn() and the bottom again?\r\n\r\n> 5) same remark here: fix the indentation\r\n\r\nAhhhhh, I DID have it on two-space display, but I didn't always have it on \"tabs=>spaces\". *sigh* Sublime...\r\n\r\n> 6) No, that's not the way to do it. When a player teleport, its position should be changed (see updatePositions.js), which will then emit positionChanged, and send him the right chunks.\r\n\r\npositionChanged should really be named \"moved\". The difference I'm making is that \"moved\" is a relativePositionChange and \"teleport\" is sent by the server via sendPosition. The reason for doing this is because if we have something like this:\r\n\r\n```js\r\n    player.on(\"positionChanged\",function(){\r\n      if(!player.sendingChunks && player.entity.position.distanceTo(player.lastPositionChunkUpdated)>16*32)\r\n      {\r\n        player.sendingChunks=true;\r\n        player.sendChunksAroundPlayer(player.view).then(() => player.sendingChunks=false);\r\n      }\r\n    });\r\n```\r\nIf they're at 0,0 in the overworld and then teleport to 0,0 in the nether, it all screws up. (Sure, we could set player.lastPositionChunkUpdated to something else, but we have to assume somebody else might have this problem as well). Differentiating between \"I've moved some\" VS \"I moved to another world or moved 100000 blocks\" should be noted.\r\n\r\n> 7) that's wrong.\r\n\r\nYou mean indentation again?",
            "created_at": "2015-10-14T20:10:09Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/pull/80#issuecomment-148181257",
            "id": 148181257,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/80",
            "updated_at": "2015-10-14T20:10:09Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/148181257",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7506359?v=3",
                "events_url": "https://api.github.com/users/demipixel/events{/privacy}",
                "followers_url": "https://api.github.com/users/demipixel/followers",
                "following_url": "https://api.github.com/users/demipixel/following{/other_user}",
                "gists_url": "https://api.github.com/users/demipixel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/demipixel",
                "id": 7506359,
                "login": "demipixel",
                "organizations_url": "https://api.github.com/users/demipixel/orgs",
                "received_events_url": "https://api.github.com/users/demipixel/received_events",
                "repos_url": "https://api.github.com/users/demipixel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/demipixel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/demipixel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/demipixel"
            }
        },
        {
            "body": "3)\r\nRight, why is there even any parameters at all in sendPosition ? I think it would be better to just set the player.entity.position and player.entity.yaw and player.entity.pitch and then just call sendPosition.\r\n\r\n4) I want what was at the bottom to be at the bottom, that new player.spawn is wrong (see 7) (see the difference in https://github.com/mhsjlw/flying-squid/pull/80/files )\r\n\r\n6) No, it really should be the same thing for any position in a given world. For a change of world, we might have to adapt that condition yeah, pretty sure it's not needed to make a new event for that.\r\n\r\n7) no, look at the previous code, this doesn't do the same thing (named_entity_spawn and all are missing there)",
            "created_at": "2015-10-14T22:45:46Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/pull/80#issuecomment-148224801",
            "id": 148224801,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/80",
            "updated_at": "2015-10-14T22:45:46Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/148224801",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Working and the code is ok, just need to do the \"spawn player if close enough\" since we don't send to everybody the position of everybody now.",
            "created_at": "2015-10-25T04:50:03Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/pull/80#issuecomment-150891704",
            "id": 150891704,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/80",
            "updated_at": "2015-10-25T04:50:03Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/150891704",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Finally done :D \r\nI added commits to fix the remaining issues.",
            "created_at": "2015-10-25T22:38:54Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/pull/80#issuecomment-150980815",
            "id": 150980815,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/80",
            "updated_at": "2015-10-25T22:38:54Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/150980815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/80/comments",
    "created_at": "2015-10-14T06:46:28Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": "7ac4653ea2341094c6554f9b1e81145419ef1427",
            "commit_url": "https://api.github.com/repos/PrismarineJS/flying-squid/commits/7ac4653ea2341094c6554f9b1e81145419ef1427",
            "created_at": "2015-10-25T22:37:47Z",
            "event": "merged",
            "id": 445005926,
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/events/445005926"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-10-25T22:37:47Z",
            "event": "closed",
            "id": 445005927,
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/events/445005927"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7506359?v=3",
                "events_url": "https://api.github.com/users/demipixel/events{/privacy}",
                "followers_url": "https://api.github.com/users/demipixel/followers",
                "following_url": "https://api.github.com/users/demipixel/following{/other_user}",
                "gists_url": "https://api.github.com/users/demipixel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/demipixel",
                "id": 7506359,
                "login": "demipixel",
                "organizations_url": "https://api.github.com/users/demipixel/orgs",
                "received_events_url": "https://api.github.com/users/demipixel/received_events",
                "repos_url": "https://api.github.com/users/demipixel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/demipixel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/demipixel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/demipixel"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-10-26T01:13:33Z",
            "event": "head_ref_deleted",
            "id": 445050032,
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/events/445050032"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/80/events",
    "html_url": "https://github.com/PrismarineJS/flying-squid/pull/80",
    "id": 111335254,
    "labels": [],
    "labels_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/80/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 80,
    "pull_request": {
        "diff_url": "https://github.com/PrismarineJS/flying-squid/pull/80.diff",
        "html_url": "https://github.com/PrismarineJS/flying-squid/pull/80",
        "patch_url": "https://github.com/PrismarineJS/flying-squid/pull/80.patch",
        "url": "https://api.github.com/repos/PrismarineJS/flying-squid/pulls/80"
    },
    "state": "closed",
    "title": "Worlds",
    "updated_at": "2015-10-26T01:13:33Z",
    "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/80",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7506359?v=3",
        "events_url": "https://api.github.com/users/demipixel/events{/privacy}",
        "followers_url": "https://api.github.com/users/demipixel/followers",
        "following_url": "https://api.github.com/users/demipixel/following{/other_user}",
        "gists_url": "https://api.github.com/users/demipixel/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/demipixel",
        "id": 7506359,
        "login": "demipixel",
        "organizations_url": "https://api.github.com/users/demipixel/orgs",
        "received_events_url": "https://api.github.com/users/demipixel/received_events",
        "repos_url": "https://api.github.com/users/demipixel/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/demipixel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/demipixel/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/demipixel"
    }
}