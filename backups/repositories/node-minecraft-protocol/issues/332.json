{
    "assignee": null,
    "body": "src/ping.js implements a server list ping using `ping` and `ping_start` in the `STATUS` protocol state, but there is another type of ping initiated by sending the bytes 0xfe 0x01. Sometimes known as the \"legacy\" ping, but it supported by modern versions of Minecraft, including 1.8.9 and the 1.9 snapshots: http://wiki.vg/Protocol#Legacy_Server_List_Ping\r\n\r\n> While not technically part of the current protocol, legacy clients may send this packet to initiate Server List Ping, and modern servers should handle it correctly.\r\n\r\nnode-minecraft-protocol should support FE01 ping, in both the server and client. Server is especially important since third-party ping/status software may still send FE01 pings, due to simplicity and widespread support (vanilla servers support it). Client support would be useful when pinging servers of an unknown version, including those with the modern Netty protocol, or earlier versions (all the way back to Minecraft 1.4.4 release is supported by the FE01 ping).\r\n\r\nExample of fe01 ping in nodejs: https://github.com/deathcap/mcping16/blob/master/mcping16.js#L124 - but needs to be cleaned up to use protodef, etc.",
    "closed_at": null,
    "comment_data": [
        {
            "body": "This packet is supported for serialization/deserialization by https://github.com/PrismarineJS/minecraft-data/blob/master/data/1.8/protocol.json#L148:\r\n\r\n```javascript\r\n        \"legacy_server_list_ping\": {\r\n          \"id\": \"0xfe\",\r\n          \"fields\": [\r\n            {\r\n              \"name\": \"payload\",\r\n              \"type\": \"ubyte\"\r\n            }\r\n          ]\r\n        }\r\n```\r\n\r\nbut nothing currently reads/writes it",
            "created_at": "2016-01-26T17:05:41Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/332#issuecomment-175119414",
            "id": 175119414,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/332",
            "updated_at": "2016-01-26T17:05:41Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/175119414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "That probably doesn't work. It needs to be sent without the length-prefix and with a byte ID instead of varint ID, no ?",
            "created_at": "2016-01-26T18:29:54Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/332#issuecomment-175161579",
            "id": 175161579,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/332",
            "updated_at": "2016-01-26T18:29:54Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/175161579",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "Yeah I think needs to be special-cased somehow",
            "created_at": "2016-01-27T04:23:42Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/332#issuecomment-175383414",
            "id": 175383414,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/332",
            "updated_at": "2016-01-27T04:23:42Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/175383414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Yeah maybe just with a simple if (packet.name==\"legacy_server_list_ping\"){\n/* write directly to this.socket */ } in Client.write\n\nOn Wed, Jan 27, 2016, 05:23 deathcap <notifications@github.com> wrote:\n\n> Yeah I think needs to be special-cased somehow\n>\n> —\n> Reply to this email directly or view it on GitHub\n> <https://github.com/PrismarineJS/node-minecraft-protocol/issues/332#issuecomment-175383414>\n> .\n>\n",
            "created_at": "2016-01-27T07:55:55Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/332#issuecomment-175470196",
            "id": 175470196,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/332",
            "updated_at": "2016-01-27T07:55:55Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/175470196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Ah, not sure how that should be handled by the parsing pipeline though\n\nOn Wed, Jan 27, 2016, 08:55 Romain Beaumont <romain.rom1@gmail.com> wrote:\n\n> Yeah maybe just with a simple if (packet.name==\"legacy_server_list_ping\"){\n> /* write directly to this.socket */ } in Client.write\n>\n> On Wed, Jan 27, 2016, 05:23 deathcap <notifications@github.com> wrote:\n>\n>> Yeah I think needs to be special-cased somehow\n>>\n>> —\n>> Reply to this email directly or view it on GitHub\n>> <https://github.com/PrismarineJS/node-minecraft-protocol/issues/332#issuecomment-175383414>\n>> .\n>>\n>\n",
            "created_at": "2016-01-27T07:57:06Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/332#issuecomment-175470380",
            "id": 175470380,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/332",
            "updated_at": "2016-01-27T07:57:06Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/175470380",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Researching the various pings in https://github.com/deathcap/node-minecraft-ping, details in the repo but overall summary of server support:\r\n\r\n| Minecraft Version | ping_fe01fa   | ping_fe01     | ping_fe       | Netty status ping(*)\r\n| -------------     | ------------- | ------------- | ------------- | -------------\r\n| 1.9               | YES           | YES           | Limited       | YES\r\n| 1.8.9             | YES           | YES           | Limited       | YES\r\n| 1.7.10            | YES           | YES           | Limited       | YES\r\n| 1.6.4             | YES           | Slow          | Limited, Slow | NO\r\n| 1.5.2             | YES           | YES           | Limited, Slow | NO\r\n| 1.4.4             | YES           | YES           | Limited, Slow | NO\r\n| 1.3.2             | NO            | Limited       | Limited       | NO\r\n| 1.2.5             | NO            | Limited       | Limited       | NO\r\n| earlier           | NO            | maybe         | probably      | NO\r\n\r\n(*) As implemented in [node-minecraft-protocol](https://github.com/PrismarineJS/node-minecraft-protocol) src/ping.js\r\n\r\n(**) Limited = responds but does not return the game/protocol version\r\n\r\n\r\nWhat I call `ping_fe01fa()` (that is, FE01 + FA `MC|PingHost`) seems to be the best overall, as far as client pinging goes. For the server, just would need to handle the 0xfe \"packet\" and reply accordingly (technically, check if the next byte is 0x01, if so include the game/protocol version (ping type 1), otherwise return only the motd, online players, max players (ping type 0 - ping_fe/limited), but that's a minor point).",
            "created_at": "2016-01-29T08:01:26Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/332#issuecomment-176632192",
            "id": 176632192,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/332",
            "updated_at": "2016-01-29T08:02:50Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/176632192",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Released https://www.npmjs.com/package/minecraft-ping, but it is only for the client-side ping.\r\n\r\nFor server in node-minecraft-protocol, currently gets stuck in the splitter transform. I think we'll need to do something like this:\r\n\r\n```\r\ndiff --git a/src/transforms/framing.js b/src/transforms/framing.js\r\nindex a4fb0f7..a447137 100644\r\n--- a/src/transforms/framing.js\r\n+++ b/src/transforms/framing.js\r\n@@ -30,6 +30,13 @@ class Splitter extends Transform {\r\n   }\r\n   _transform(chunk, enc, cb) {\r\n     this.buffer = Buffer.concat([this.buffer, chunk]);\r\n+\r\n+    if (this.buffer[0] === 0xfe) {\r\n+      // legacy_server_list_ping packet follows a different protocol format, no varint length\r\n+      this.push(this.buffer);\r\n+      return cb();\r\n+    }\r\n+\r\n     var offset = 0;\r\n \r\n     var { value, size, error } = readVarInt(this.buffer, offset) || { error: \"Not enough data\" };\r\n```\r\n\r\nthis gets the legacy server list ping to the deserializer, which recognizes it:\r\n\r\n```\r\nMC-PROTO: 36906 read packet handshaking.legacy_server_list_ping\r\nMC-PROTO: 36906 { payload: 250 }\r\n```\r\n\r\nbut it will need to be handled. Also, for par with vanilla, deserialization should be able to read:\r\n\r\n* fe\r\n* fe01\r\n* fe01fa...MC|PingHost\r\n\r\nCurrently it can read the last two, but not the first:\r\n\r\n```\r\nMC-PROTO: 37154 read packet handshaking.legacy_server_list_ping\r\nMC-PROTO: 37154 { payload: 250 }\r\n_transform <Buffer fe>\r\nparsePacketBuffer <Buffer fe>\r\nevents.js:141\r\n      throw er; // Unhandled 'error' event\r\n      ^\r\n\r\nError: Deserialization error for handshaking.toServer : Read error for name : Reader returned null : {\"type\":\"varint\"}\r\n    at ProtoDef.read (/Users/admin/games/voxeljs/ProtoDef/dist/protodef.js:109:15)\r\n    at ProtoDef.readMapper (/Users/admin/games/voxeljs/ProtoDef/dist/datatypes/utils.js:27:20)\r\n    at ProtoDef.read (/Users/admin/games/voxeljs/ProtoDef/dist/protodef.js:107:42)\r\n    at /Users/admin/games/voxeljs/ProtoDef/dist/datatypes/structures.js:114:32\r\n    at tryCatch (/Users/admin/games/voxeljs/ProtoDef/dist/utils.js:33:12)\r\n    at tryDoc (/Users/admin/games/voxeljs/ProtoDef/dist/utils.js:40:10)\r\n    at /Users/admin/games/voxeljs/ProtoDef/dist/datatypes/structures.js:113:5\r\n    at Array.forEach (native)\r\n    at ProtoDef.readContainer (/Users/admin/games/voxeljs/ProtoDef/dist/datatypes/structures.js:108:12)\r\n    at ProtoDef.read (/Users/admin/games/voxeljs/ProtoDef/dist/protodef.js:46:25)\r\n```\r\n\r\nor\r\n\r\n```\r\nError: Deserialization error for handshaking.toServer.legacy_server_list_ping.payload : Read error for params.legacy_server_list_ping.payload : Reader returned null : {\"type\":\"ubyte\"}\r\n```\r\n\r\nIf only 0xfe is received, then the server should (or at least vanilla servers do) return the \"ping 0\" response, example:\r\n\r\n```\r\n00000000  fe                                               .\r\n    00000000  ff 00 17 00 41 00 20 00  4d 00 69 00 6e 00 65 00 ....A. . M.i.n.e.\r\n    00000010  63 00 72 00 61 00 66 00  74 00 20 00 53 00 65 00 c.r.a.f. t. .S.e.\r\n    00000020  72 00 76 00 65 00 72 00  a7 00 30 00 a7 00 32 00 r.v.e.r. ..0...2.\r\n    00000030  30                                               0\r\n```\r\n\r\n0xff (kick) + 2-byte length + UCS-2 string: motd + \\xa7 + current players (decimal string) + \\xa7 + max players (decimal string)\r\n\r\nIf 0xfe is received followed by 0x01 (and then optionally anything else; 1.6.4 sends some MC|PingHost junk, but it does not matter), then the server should send the \"ping 1\" response:\r\n\r\n```\r\n00000000  fe 01                                            ..\r\n    00000000  ff 00 25 00 a7 00 31 00  00 00 31 00 32 00 37 00 ..%...1. ..1.2.7.\r\n    00000010  00 00 31 00 36 00 77 00  30 00 33 00 61 00 00 00 ..1.6.w. 0.3.a...\r\n    00000020  41 00 20 00 4d 00 69 00  6e 00 65 00 63 00 72 00 A. .M.i. n.e.c.r.\r\n    00000030  61 00 66 00 74 00 20 00  53 00 65 00 72 00 76 00 a.f.t. . S.e.r.v.\r\n    00000040  65 00 72 00 00 00 30 00  00 00 32 00 30          e.r...0. ..2.0\r\n```\r\n\r\nSame 0xff (kick) + 2-byte length + UCS-2 string format, but it begins with \\xa7 + digit '1' and has \\0-delimited fields:\r\n\r\n```javascript\r\n    if (string[0] == '\\xa7') {\r\n      const parts = string.split('\\0');\r\n      result.pingVersion = parseInt(parts[0].slice(1));\r\n      result.protocolVersion = parseInt(parts[1]);\r\n      result.gameVersion = parts[2];\r\n      result.motd = parts[3];\r\n      result.playersOnline = parseInt(parts[4]);\r\n```",
            "created_at": "2016-01-30T21:47:52Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/332#issuecomment-177313781",
            "id": 177313781,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/332",
            "updated_at": "2016-01-30T21:56:09Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177313781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "The splitter is easy enough to special-case for 0xfe, but not sure how to special-case in the deserializer.\r\n\r\nCurrently, 0xfe 0x01 decodes to varint 254, and 0xfe is an incomplete varint. Should legacy ping support be added somewhere in here?\r\n\r\n```javascript\r\n// src/transforms/serializer.js createProtocol\r\n  proto.addType(\"packet\",[\"container\", [\r\n    { \"name\": \"name\", \"type\":[\"mapper\",{\"type\": \"varint\" ,\r\n      \"mappings\":Object.keys(packets).reduce(function(acc,name){\r\n        acc[parseInt(packets[name].id)]=name;\r\n        return acc;\r\n      },{})\r\n    }]},\r\n    { \"name\": \"params\", \"type\": [\"switch\", {\r\n      \"compareTo\": \"name\",\r\n      \"fields\": Object.keys(packets).reduce(function(acc,name){\r\n        acc[name]=\"packet_\"+name;\r\n        return acc;\r\n      },{})\r\n    }]}\r\n  ]]);\r\n```\r\n\r\nbut only for the `handshaking` state. Tried to add to minecraft-data/data/1.8/protocol.json states > handshaking, but that file does not include the packet length varint, it is defined here in src/transforms/serializer.js, the \"packet\" data type.\r\n\r\nThe difficulty is that the first few bytes of the packet can either be a varint length, or a packet identifier byte.. can protodef express this? I know it can switch on another field, but can the field have two different types depending on its value? (if 0xfe, then read rest of bytes as the payload; if anything else, read as a varint length, continue parsing).\r\n\r\nIt would be be easiest if 0xfe legacy ping handling could bypass the deserializer, but I can't see how to do this.",
            "created_at": "2016-01-30T22:39:35Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/332#issuecomment-177322556",
            "id": 177322556,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/332",
            "updated_at": "2016-01-30T22:39:35Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177322556",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/332/comments",
    "created_at": "2016-01-26T04:36:11Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-29T07:55:20Z",
            "event": "renamed",
            "id": 530947688,
            "rename": {
                "from": "FE01 ping support",
                "to": "FE01FA ping support"
            },
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/530947688"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-30T22:16:47Z",
            "event": "renamed",
            "id": 532674703,
            "rename": {
                "from": "FE01FA ping support",
                "to": "FE legacy ping support"
            },
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/532674703"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": "c24718f64cdae262c90961b2ccfd3065f2150905",
            "commit_url": "https://api.github.com/repos/deathcap/node-minecraft-protocol/commits/c24718f64cdae262c90961b2ccfd3065f2150905",
            "created_at": "2016-01-30T22:47:56Z",
            "event": "referenced",
            "id": 532686329,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/532686329"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-02-01T13:02:25Z",
            "event": "labeled",
            "id": 534142809,
            "label": {
                "color": "5319e7",
                "name": "new feature"
            },
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/534142809"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/332/events",
    "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/332",
    "id": 128722310,
    "labels": [
        {
            "color": "5319e7",
            "name": "new feature",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/labels/new%20feature"
        }
    ],
    "labels_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/332/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 332,
    "state": "open",
    "title": "FE legacy ping support",
    "updated_at": "2016-02-01T13:02:25Z",
    "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/332",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
        "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
        "followers_url": "https://api.github.com/users/deathcap/followers",
        "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
        "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/deathcap",
        "id": 5897956,
        "login": "deathcap",
        "organizations_url": "https://api.github.com/users/deathcap/orgs",
        "received_events_url": "https://api.github.com/users/deathcap/received_events",
        "repos_url": "https://api.github.com/users/deathcap/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/deathcap"
    }
}