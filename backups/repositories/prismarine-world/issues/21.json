{
    "assignee": null,
    "body": "Kind of started there https://github.com/PrismarineJS/prismarine-world/blob/master/src/world.js#L33 but it's not general enough.\r\nI'm not sure if Chunk.initialize improve performances at all.\r\n\r\nAdding such helpers to prismarine-world/prismarine-chunk means using the correct dependency version (probably carets) in dependent modules or everything break for modules cohabitating with such modules and trying to use the helpers.",
    "closed_at": null,
    "comment_data": [
        {
            "body": "It seems doing \r\n```js\r\nvar pos=new Vec3(0,0,0);\r\nfor(pos.x=0;pos.x<16;pos.x++) for(pos.y=0;pos.y<256;pos.y++) for(pos.z=0;pos.z<16;pos.z++)\r\n  if(inZone(pos.x+offsetX,pos.y-iniPos.y,pos.z+offsetZ))\r\n    chunk.setBlock(pos,iniFunc(pos.x+offsetX,pos.y-iniPos.y,pos.z+offsetZ))\r\n```\r\n\r\nis just as fast as \r\n```js\r\nchunk.initialize((x,y,z) => \r\ninZone(x+offsetX,y-iniPos.y,z+offsetZ) ?\r\n iniFunc(x+offsetX,y-iniPos.y,z+offsetZ) : null);\r\n```",
            "created_at": "2016-01-17T23:04:01Z",
            "html_url": "https://github.com/PrismarineJS/prismarine-world/issues/21#issuecomment-172393348",
            "id": 172393348,
            "issue_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/21",
            "updated_at": "2016-01-17T23:04:01Z",
            "url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/comments/172393348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "For some reason doing this blow up the ram:\r\n```js\r\ninitialize(iniFunc,length,width,height=256,iniPos=new Vec3(0,0,0)) {\r\n    var pos=iniPos.clone();\r\n    const ps=[];\r\n    console.log(length,width,height,iniPos);\r\n    for(pos.x=iniPos.x;pos.x<width+iniPos.x;pos.x++)for(pos.y=iniPos.y;pos.y<height+iniPos.y;pos.y++) for(pos.z=iniPos.z;pos.z<length+iniPos.z;pos.z++)\r\n      ps.push(this.setBlock(pos, iniFunc(pos.x - iniPos.x, pos.y - iniPos.y, pos.z - iniPos.z)));\r\n\r\n\r\n    return Promise.all(ps);\r\n  };\r\n```\r\n\r\nI guess the reason is it's creating too much promises (`10^6`)",
            "created_at": "2016-01-17T23:55:57Z",
            "html_url": "https://github.com/PrismarineJS/prismarine-world/issues/21#issuecomment-172397409",
            "id": 172397409,
            "issue_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/21",
            "updated_at": "2016-01-17T23:55:57Z",
            "url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/comments/172397409",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/21/comments",
    "created_at": "2016-01-17T17:53:37Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/21/events",
    "html_url": "https://github.com/PrismarineJS/prismarine-world/issues/21",
    "id": 127112026,
    "labels": [],
    "labels_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/21/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 21,
    "repository_url": "https://api.github.com/repos/PrismarineJS/prismarine-world",
    "state": "open",
    "title": "Figure out a good way to do an iterator/generator to go through a large section of blocks easily",
    "updated_at": "2016-01-17T23:55:57Z",
    "url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/21",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
        "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
        "followers_url": "https://api.github.com/users/rom1504/followers",
        "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
        "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rom1504",
        "id": 2346494,
        "login": "rom1504",
        "organizations_url": "https://api.github.com/users/rom1504/orgs",
        "received_events_url": "https://api.github.com/users/rom1504/received_events",
        "repos_url": "https://api.github.com/users/rom1504/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rom1504"
    }
}