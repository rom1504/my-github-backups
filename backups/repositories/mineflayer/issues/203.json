{
    "assignee": null,
    "body": "Currently mineflayer has very little tests and lot of functionalities. In order to figure out what works and what doesn't in order to fix the problem, it's needed to test manually the examples which is not very efficient.\r\n\r\nIt would be nice to have a way to test various functionalities present in the examples automatically, for example : \r\n* reading the username and message in the chat\r\n* writing in the chat\r\n* knowing what blocks are around the bot\r\n* digging a block\r\n* ...\r\n\r\nI think a good way of testing all this would be to assume a minecraft server is running at a given host and port and test whether : \r\n* it's crashing : that's basic but really a lot of things crash currently so that would be useful\r\n* it works : by checking the state of mineflayer structures (for example checking the usernames are not undefined, that the blocks are not undefined, that a bot has indeed changed after digging that block)\r\n\r\nTesting all the functionalities is a big thing to do, but having a simple framework for adding test and adding a test after something has been fixed would be nice.\r\n\r\nI think the end results of this testing would be a generated list of what works and what doesn't, so it would be easier to contribute.\r\n\r\nTell me what you think :)",
    "closed_at": "2015-04-28T12:08:16Z",
    "comment_data": [
        {
            "body": "We should ensure two things : \r\n\r\n1. Internal consistency. For this, we should unit test functions with values we assume correct.\r\n2. External consistency. For this, we could either write a simple node-mc-proto server implementing the functionality required for the test, and make sure everything works properly.\r\n\r\nI'm sort of against using a minecraft server for this, since node-minecraft-protocol is already supposed to be battle-tested as far as the protocol is concerned.",
            "created_at": "2015-03-13T00:50:15Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-78721593",
            "id": 78721593,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-13T00:50:15Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/78721593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "The problem with \"writing a simple node-mc-proto server implementing the functionality required for the test\" is mineflayer is high level, so a simple action mineflayer-wise might mean a lot of different part involved server wise. Would it really be possible to test significant things without having to implement the whole minecraft server ?\r\n\r\nnode-minecraft-protocol is tested protocol wise, but it is not tested about the higher level things mineflayer provide, for example parsing of the chunk, handling the chat messages, ...\r\n\r\nBut I agree it might be better not to use a minecraft server, it would make the test faster. If it can be done, that would be nice.",
            "created_at": "2015-03-13T01:01:41Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-78726194",
            "id": 78726194,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-13T01:01:41Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/78726194",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "I'm thinking the exact opposite, the best idea is to use the notchian server. The reasoning for this is we don't write mineflayer or node-minecraft-protocol to be compatible with itself, we write it to be compatible with minecraft. Testing mineflayer on our custom built server is pointless because this is not where mineflayer will be used in the real world.\r\n\r\nIdeally we should set up a map file with a set of chests, containers, blocks, items, etc, designed to test our bot. The map file can easily be brought onto later server versions to test without needing to re-write a testing server, and we would know how the bot interacts with this test will reflect the way the bot responds to real world servers.",
            "created_at": "2015-03-13T01:31:19Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-78736230",
            "id": 78736230,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-13T01:31:19Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/78736230",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/860229?v=3",
                "events_url": "https://api.github.com/users/Corgano/events{/privacy}",
                "followers_url": "https://api.github.com/users/Corgano/followers",
                "following_url": "https://api.github.com/users/Corgano/following{/other_user}",
                "gists_url": "https://api.github.com/users/Corgano/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Corgano",
                "id": 860229,
                "login": "Corgano",
                "organizations_url": "https://api.github.com/users/Corgano/orgs",
                "received_events_url": "https://api.github.com/users/Corgano/received_events",
                "repos_url": "https://api.github.com/users/Corgano/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Corgano/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Corgano/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Corgano"
            }
        },
        {
            "body": "The big problem with using a minecraft server as a test bed is that it's completely unreliable. I had to entirely _remove_ the timeouts from node-minecraft-protocol's test (well, actually, I made the timeouts something like 40 minutes) because minecraft_server could take up to 10 minutes to start, accept connections, log a player in, etc...\r\n\r\nThere is a lot we can test without having to do too much work. Chunk loading, inventory management, physics, etc... can all be tested very reliably with a simple node-minecraft-protocol server. More complicated behaviors might need a real minecraft_server, but I def think we should implement as much as possible without it.",
            "created_at": "2015-03-13T12:11:10Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-78942823",
            "id": 78942823,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-13T12:11:10Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/78942823",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "I'd like to propose a different approach, which is having much of the testing automated, but not all of it.\r\n\r\nI'm imagining you would spin up a server manually, and log yourself in with the notchian client, mostly to babysit the test in case something crazy happens during testing. Then you run the test bot, which tries to do everything it can in a long sequence. (This is almost exactly the process I just followed to test all the functions in the chatterbox example.)\r\n\r\nThe bot will probably need to be an op in order to give itself the items it needs to do the testing (pistons, enchanting table, etc.). The test sequence might be something like this:\r\n\r\n * using bare hands, dig down 1m, and then dig an area around it to give itself a workspace. (this tests digging and dirt entities spawning and getting collected.)\r\n * use /give to get stone, dirt, gravel, and place them in a specific configuration beside itself. (this tests placing blocks.)\r\n * use various tools (again using /give) to test that it can harvest cobblestone with the right tool, etc. (this tests equipping tools.)\r\n * test to make sure it sees gravel fall when it digs out the block below it.\r\n * place a piston and a lever, operate the lever, make sure we're getting the `pistonMove` event.\r\n * place a chest, put items in it, close the chest, open it, pull items out, etc. (this is currently broken).\r\n * announce in chat that the bot is testing punching, and then punch the human babysitter.\r\n * ...\r\n\r\nThis plan seems fairly easy to program, and low enough effort to run the tests that if someone wants to know if everything's working (which I currently do), it's fairly easy to get an answer quickly. (Granted it's not as easy as a fully-automated test.) I'm imagining a successful test run would take less than a minute, and painless enough that developers want to run it before pushing their commits.\r\n\r\nThis proposal has an answer to the problem of trying to have reproducible tests in an inherently random game, which is the human babysitter. For example, if the bot spawns on the edge of a lake, and doesn't know how to dig itself into a suitable testing workspace, the human can identify the problem, and fix it in various ways: leading the bot away from the water, placing dirt around the bot, rerolling the world, etc. This is obviously suboptimal, but hopefully human intervention will rarely be required, making the testing worthwhile.\r\n\r\nI didn't quite understand all the server proposals in this thread so far, but I think writing our own server is no good, because we really need to test our interaction with the real server. I think that maintaining a controlled test world is a decent idea, but I think it would be harder to maintain than a bot that creates a controlled test environment as I described above.\r\n\r\nObviously, this proposal is all talk for now. Let the most enthusiastic developer win!",
            "created_at": "2015-03-18T08:26:35Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-82815990",
            "id": 82815990,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-18T08:26:35Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/82815990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            }
        },
        {
            "body": "I like that idea. This would test \"real world\" problems in a semi-automatic way.\r\nWe may want to also have some totally automatic tests (like this https://github.com/andrewrk/mineflayer/blob/master/test/test.js) but this semi-automatic way would probably be much faster than manually booting all the .js in examples/ , calling the commands manually, figuring out if it really worked, etc.\r\n\r\nI think it would be nice to start with a simple one of these tests, to be able to add other ones more easily later.",
            "created_at": "2015-03-18T09:36:48Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-82851811",
            "id": 82851811,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-18T09:36:48Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/82851811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Right, so having something akin to a \"test\" example that uses every functionality of mineflayer to make sure they work ? That actually sounds reasonable enough. We'll still need lots more of specs in the fully-automated and server-independent testing though.",
            "created_at": "2015-03-18T10:46:14Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-82888929",
            "id": 82888929,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-18T10:46:14Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/82888929",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "Small idea for the bootstrapping process: instead of the first action being digging, first action could be giving itself 999 dirt and then jump-building a platform in the sky to test. the sky is pretty uniform",
            "created_at": "2015-03-18T23:02:06Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-83218970",
            "id": 83218970,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-18T23:02:06Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/83218970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/106511?v=3",
                "events_url": "https://api.github.com/users/andrewrk/events{/privacy}",
                "followers_url": "https://api.github.com/users/andrewrk/followers",
                "following_url": "https://api.github.com/users/andrewrk/following{/other_user}",
                "gists_url": "https://api.github.com/users/andrewrk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andrewrk",
                "id": 106511,
                "login": "andrewrk",
                "organizations_url": "https://api.github.com/users/andrewrk/orgs",
                "received_events_url": "https://api.github.com/users/andrewrk/received_events",
                "repos_url": "https://api.github.com/users/andrewrk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andrewrk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andrewrk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andrewrk"
            }
        },
        {
            "body": "> the sky is pretty uniform\r\n\r\nThat's a good idea.\r\n\r\nAlso, instead of punching the human spectator, the test script could log in multiple bots (duh). That way, we can also test watching people die, disconnect, etc. without human involvement. (watching someone disconnect is currently broken.)",
            "created_at": "2015-03-18T23:04:10Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-83219209",
            "id": 83219209,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-18T23:04:10Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/83219209",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            }
        },
        {
            "body": "Even better idea, test in a superflat world. here are some `server.properties` settings that got me a completely deterministic world (as far as I can tell):\r\n\r\n```properties\r\nlevel-type=FLAT\r\ngenerate-structures=false\r\nspawn-monsters=false\r\nspawn-animals=false\r\nspawn-npcs=false\r\n```",
            "created_at": "2015-03-24T00:43:11Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-85263732",
            "id": 85263732,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-24T00:43:11Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/85263732",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            }
        },
        {
            "body": "> some server.properties settings\r\n\r\nUnfortunately, these are only useful if #233 is implemented, as many of these settings are missing from the \"Open to LAN\" strategy. For example, I can't figure out how to turn off monster spawning.",
            "created_at": "2015-03-24T01:30:30Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-85281289",
            "id": 85281289,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-24T01:30:30Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/85281289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            }
        },
        {
            "body": "> how to turn off monster spawning\r\n\r\nOk, I figured it out, but it's dumb. You have to start playing, and then as quickly as you can type `/gamemode doMobSpawning false` in the chat box (while the world is running, mind you), and that prevents any more monsters from spawning. Then you run around with a diamond sword killing all the slimes and sheep that spawned while you were typing that, and then your world is ready for testing.",
            "created_at": "2015-03-24T01:55:53Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-85289865",
            "id": 85289865,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-24T01:55:53Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/85289865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            }
        },
        {
            "body": "you could just change gamemode to peaceful. that kills the mobs.",
            "created_at": "2015-03-24T10:49:53Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-85448357",
            "id": 85448357,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-24T10:49:53Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/85448357",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "@thejoshwolfe What's your progress on your superflat.js ? Does it need a lot of supervision or could it be fully automated ?",
            "created_at": "2015-03-27T11:15:50Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-86904567",
            "id": 86904567,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-27T11:15:50Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/86904567",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "it doesn't need supervision at the moment. it needs a server running where it can use cheatcodes as the username \"bot\". preferably, the world should be superflat with mob spawning disabled, but that isn't strictly necessary.\r\n\r\nthe test run takes about 3 seconds from start to finish, but of course that's only with some testing implemented.",
            "created_at": "2015-03-27T11:22:10Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-86905694",
            "id": 86905694,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-27T11:22:10Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/86905694",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            }
        },
        {
            "body": "I wonder if we could automate it and add it to circle ci, just like https://github.com/PrismarineJS/node-minecraft-protocol/blob/master/test/test.js.\r\n\r\nIt would be nice to be able to know whether a commit breaks such and such stuff without having to do anything.",
            "created_at": "2015-03-27T11:40:21Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-86908088",
            "id": 86908088,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-03-27T11:40:21Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/86908088",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "So I added information about the tests there https://github.com/andrewrk/mineflayer/blob/master/doc/contribute.md#creating-tests\r\n\r\nSome tests are already implemented, more test can be done following the instruction the contribute.md.\r\n\r\nI think we can create new issues for new tests, small issues are easier to handle than fat issues like this (which are sometimes still good to start with, to talk)",
            "created_at": "2015-04-28T12:08:16Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203#issuecomment-97038047",
            "id": 97038047,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
            "updated_at": "2015-04-28T12:08:16Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/97038047",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 17,
    "comments_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203/comments",
    "created_at": "2015-03-13T00:00:28Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            },
            "commit_id": "840bc199deb3f99a14a9a6420fcaa80abdc65af2",
            "commit_url": "https://api.github.com/repos/PrismarineJS/mineflayer/commits/840bc199deb3f99a14a9a6420fcaa80abdc65af2",
            "created_at": "2015-03-25T01:43:48Z",
            "event": "referenced",
            "id": 264205441,
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/264205441"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            },
            "commit_id": "92d7cfea3357aa2dfd6f81954e23c9acd2acd023",
            "commit_url": "https://api.github.com/repos/PrismarineJS/mineflayer/commits/92d7cfea3357aa2dfd6f81954e23c9acd2acd023",
            "created_at": "2015-03-27T02:38:27Z",
            "event": "referenced",
            "id": 266531048,
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/266531048"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            },
            "commit_id": "837ecf4f6ef15e750115d1c6d61284e52e26d7e6",
            "commit_url": "https://api.github.com/repos/PrismarineJS/mineflayer/commits/837ecf4f6ef15e750115d1c6d61284e52e26d7e6",
            "created_at": "2015-03-27T03:15:53Z",
            "event": "referenced",
            "id": 266557287,
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/266557287"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-03-27T11:15:50Z",
            "event": "mentioned",
            "id": 266786720,
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/266786720"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-03-27T11:15:50Z",
            "event": "subscribed",
            "id": 266786721,
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/266786721"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-03-27T12:31:26Z",
            "event": "labeled",
            "id": 266837297,
            "label": {
                "color": "fbca04",
                "name": "testing"
            },
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/266837297"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-04-28T12:08:16Z",
            "event": "closed",
            "id": 291900058,
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/291900058"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203/events",
    "html_url": "https://github.com/PrismarineJS/mineflayer/issues/203",
    "id": 60941586,
    "labels": [
        {
            "color": "fbca04",
            "name": "testing",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/labels/testing"
        }
    ],
    "labels_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 203,
    "repository_url": "https://api.github.com/repos/PrismarineJS/mineflayer",
    "state": "closed",
    "title": "Testing",
    "updated_at": "2015-04-28T12:08:16Z",
    "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/203",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
        "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
        "followers_url": "https://api.github.com/users/rom1504/followers",
        "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
        "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rom1504",
        "id": 2346494,
        "login": "rom1504",
        "organizations_url": "https://api.github.com/users/rom1504/orgs",
        "received_events_url": "https://api.github.com/users/rom1504/received_events",
        "repos_url": "https://api.github.com/users/rom1504/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rom1504"
    }
}