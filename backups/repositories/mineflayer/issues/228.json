{
    "assignee": null,
    "body": "For example a carpet is not really a block but we shouldn't fall through it.\r\nSee also : \r\n* fences\r\n* doors\r\n* bars\r\n\r\nCurrently we'll consider a carpet has an empy bounding box but that's not perfect.",
    "closed_at": null,
    "comment_data": [
        {
            "body": "also slabs, stairs, snow (etc.)? simplest non-cubic bounding box is of blocks of varying heights:\r\n\r\nhttp://minecraft.gamepedia.com/Solid_block#Heights\r\n\r\n\r\nHeight\t| Block types\r\n--- | ---\r\n2\t| Door, Iron Door\r\n1 1/2\t| Fence, Cobblestone Wall\r\n15/16\t| Cactus\r\n7/8\t| Soul Sand, Chest, Ender Chest, Trapped Chest, Brewing Stand (stand part)\r\n13/16\t| End Portal Frame (without Eye of Ender)\r\n3/4\t| Enchantment Table, Cocoa Bean (plant), Head (on wall)\r\n5/8\t| Inside of Hopper\r\n9/16\t| Bed\r\n1/2\t| Bottom slab, Head (on ground), bottom part of Stair, Cake\r\n3/8\t| Daylight Sensor, Flower Pot\r\n5/16\t| Inside of Cauldron\r\n3/16\t| Bottom Trapdoor\r\n1/8\t| Brewing Stand (base), Redstone Repeater, Redstone Comparator, Snow\r\n1/16\t| Carpet\r\n1/64\t| Lily Pad\r\n",
            "created_at": "2015-03-22T20:17:41Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/228#issuecomment-84691600",
            "id": 84691600,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228",
            "updated_at": "2015-03-22T20:17:41Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/84691600",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "How do we want to handle all these? Different bounding boxes can be an issue, but things like doors or fences which can change depending on blocks or state, or even brewing stands which have multiple \"bound **boxes**\" will have an issue. One idea was to make bounding box an area of boxes, ex:\r\n```\r\n[ { x: 0, y: 0, z: 0, width: 1, length: 1, height: 0.5 } ]\r\n```\r\nNot ideal but better than nothing. Might cause it to get a bit slow.\r\n\r\nAs for actually supporting them, we have SOME support right now. We test for all blocks in the area (surrounding the character) but the [current method](https://github.com/andrewrk/mineflayer/blob/47517943f0d78d1fcb18712197ae85a0ac0e8078/lib/plugins/physics.js#L181) returns a bool. Instead we're going to need to return the bounding box(es). From there we can calculate the height each player would be on any given block (full block VS on top of brewing stand). Then limit the player's Y to the highest one (similar for X and Z).\r\n\r\nWhen I was writing my own node-minecraft-protocol bot, I found that all I would need to do is set the player's position inside of a block that was 0.5 height or lower (like a slab). As soon as the bot thought it was inside a slab, the \"highest block\" it was stepping on was no longer air, but the slab so it automatically stepped up.",
            "created_at": "2015-03-23T19:57:44Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/228#issuecomment-85168471",
            "id": 85168471,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228",
            "updated_at": "2015-03-23T19:57:44Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/85168471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7506359?v=3",
                "events_url": "https://api.github.com/users/demipixel/events{/privacy}",
                "followers_url": "https://api.github.com/users/demipixel/followers",
                "following_url": "https://api.github.com/users/demipixel/following{/other_user}",
                "gists_url": "https://api.github.com/users/demipixel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/demipixel",
                "id": 7506359,
                "login": "demipixel",
                "organizations_url": "https://api.github.com/users/demipixel/orgs",
                "received_events_url": "https://api.github.com/users/demipixel/received_events",
                "repos_url": "https://api.github.com/users/demipixel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/demipixel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/demipixel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/demipixel"
            }
        },
        {
            "body": "this has been a known problem forever. the most daunting challenge with detailed bounding boxes is the path finding code. the path finder has a hardcoded set of jumps it believes it can make, and half slabs et al add an inordinate amount of complexity. we could change the jumping logic to do dynamic calculations, which would be very difficult to program, very expensive to compute, and perfectly correct. simple bounding boxes survived so long because they are very easy to deal with.\r\n\r\nI don't think we should charge ahead with this issue without a plan to keep the path finding up to date. I understand that the path finding is actually a different repository, but I think it's important enough to consider here.",
            "created_at": "2015-03-23T20:26:54Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/228#issuecomment-85179542",
            "id": 85179542,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228",
            "updated_at": "2015-03-23T20:26:54Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/85179542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            }
        },
        {
            "body": "> a plan to keep the path finding up to date.\r\n\r\nI can't find it anymore, but I used to have a navigator bot that would just fly everywhere like superman. That would be the simplest code to write, although many would consider it \"cheating\". The vanilla server used to do very little checking on the client's physics, so flying mods and flying bots were pretty easy to get away with. last I checked (2 years ago), the \"allow-flight\" setting in server.properties just sets a timer for being in the air, so it could be somewhat easy to fool.\r\n\r\nIf we implement correct bounding boxes, I propose that the navigator code do a hybrid of flying and fair physics, where it finds standable ground within a paraboloid of somewhat reasonable jumps, and then just kinda flies over to it. I believe this is the best compromise between correctness (which is also fairness) and implementation and CPU difficulty.\r\n\r\nSee also https://github.com/andrewrk/mineflayer-navigate/issues/15",
            "created_at": "2015-03-23T20:43:11Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/228#issuecomment-85186722",
            "id": 85186722,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228",
            "updated_at": "2015-03-23T20:43:11Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/85186722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            }
        },
        {
            "body": "I would love to see an actual benchmark showing how much CPU complexity correct bounding boxes actually inflicts. I don't think it'd be that bad. The code might be more complex, but that's another issue.\r\n\r\nBesides, pathfinding isn't part of mineflayer AFAIK, it's part of a mineflayer plugin. Bounding boxes in mineflayer are only used for the physics engine, which I believe should be as correct and accurate as possible. Reason is simple : mineflayer bots should work on any server software, including spigot servers with NCP, which implements harsh rules for things like flying.\r\n\r\nPlugins can still implement things in a hackish way by hijacking bot.position directly, but I seriously think it should be done outside of mineflayer core.",
            "created_at": "2015-03-24T00:02:30Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/228#issuecomment-85253774",
            "id": 85253774,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228",
            "updated_at": "2015-03-24T00:02:30Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/85253774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "So I think we need to : \r\n* define how to store these bounding boxes\r\n* handle them in physics.js (and elsewhere ?)\r\n* see how that might affect mineflayer-navigate and how to address this",
            "created_at": "2015-03-24T00:20:30Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/228#issuecomment-85256921",
            "id": 85256921,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228",
            "updated_at": "2015-03-24T00:20:30Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/85256921",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "on good hardware 4 years ago, we had to limit the algorithm to 10 seconds to make sure a bot would eventually give up on an impossible path before exploring the entire loaded world. Normally, straight obvious paths were nearly instant up to 100m, but I was able to craft mazes that were possible to solve, but the bot couldn't figure it out in the 10s time limit. The basic idea to fooling the bot is to build a large flat structure above the ground (like a wheat farm) with a staircase about 50m away from where you stand, then ask a bot directly below you to \"come here\". The algorithm will get overwhelmed exploring the possibility of navigating a larger and larger radius around him over the terrain, and won't find the staircase in time to try exploring it.\r\n\r\nThis isn't a benchmark, like you asked for, but cpu time was a limiting factor in how useful the path finding was, and, as discussed in https://github.com/andrewrk/mineflayer-navigate/issues/2 , caused other problems, because it can lock up the main javascript thread for 10s at a time. At worst, this might theoretically kick the bot for not sending physics updates fast enough or something, although I don't remember that actually being a problem.\r\n\r\nSee also https://github.com/andrewrk/mineflayer-navigate/issues/20 for another idea to improve CPU performance.\r\n\r\nIn general, I'm fine with implementing correct bounding boxes; this feature has been missing for years. I'm just giving a heads up that we will need to make some kind of compromises in the path finding when we do it. Either compromising correctness (by ignoring the correct bounding boxes), compromising algorithmic simplicity and performance (by exhaustively trying everything with fair jumping), or compromising fairness (by fudging the jumping physics and flying for short distances). I am a fan of the third option.",
            "created_at": "2015-03-24T00:28:49Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/228#issuecomment-85258581",
            "id": 85258581,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228",
            "updated_at": "2015-03-24T00:28:49Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/85258581",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            }
        },
        {
            "body": "Hmm, fair enough. I still think we should implement correct bounding boxes, but then maybe we could find a way to disable them in physics, reverting to the simple \"solid vs air\" logic, if the bot wants to. ",
            "created_at": "2015-03-24T00:34:54Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/228#issuecomment-85260426",
            "id": 85260426,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228",
            "updated_at": "2015-03-24T00:34:54Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/85260426",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "One of the problems with speed on the path finding was that it was calculated block by block when asked for. If the path finder pre-calculates the possible areas to stand on chunk load and change, it could be sped up a lot. \n\n> On Mar 23, 2015, at 17:34, Robin Lambertz <notifications@github.com> wrote:\n> \n> Hmm, fair enough. I still think we should implement correct bounding boxes, but then maybe we could find a way to disable them in physics, reverting to the simple \"solid vs air\" logic, if the bot wants to.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n> \n",
            "created_at": "2015-03-24T00:41:14Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/228#issuecomment-85263219",
            "id": 85263219,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228",
            "updated_at": "2015-03-24T00:41:14Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/85263219",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/159568?v=3",
                "events_url": "https://api.github.com/users/vogonistic/events{/privacy}",
                "followers_url": "https://api.github.com/users/vogonistic/followers",
                "following_url": "https://api.github.com/users/vogonistic/following{/other_user}",
                "gists_url": "https://api.github.com/users/vogonistic/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vogonistic",
                "id": 159568,
                "login": "vogonistic",
                "organizations_url": "https://api.github.com/users/vogonistic/orgs",
                "received_events_url": "https://api.github.com/users/vogonistic/received_events",
                "repos_url": "https://api.github.com/users/vogonistic/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vogonistic/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vogonistic/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vogonistic"
            }
        },
        {
            "body": "OT @thejoshwolfe:\r\n> a navigator bot that would just fly everywhere like superman\r\n\r\nJust wanted to mention that my bot does \"superman\" navigation by 3-step-teleporting ([code](https://github.com/Gjum/Bat/blob/7871c7fcc4834a748864bac81ad5a5884ea1d31a/bat/bat.py#L109-L116)).\r\nIt basically teleports 300 blocks up, then to 300 blocks over the target, then to the target; that's three position updates, so it won't be detected as flying.\r\nThe vanilla server collision checks allow you to move through blocks vertically, so this method always works as long as the position you navigate to is valid. Very cheaty but also very useful for testing.",
            "created_at": "2015-03-29T17:37:09Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/228#issuecomment-87449644",
            "id": 87449644,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228",
            "updated_at": "2015-08-19T17:10:50Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/87449644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2612164?v=3",
                "events_url": "https://api.github.com/users/Gjum/events{/privacy}",
                "followers_url": "https://api.github.com/users/Gjum/followers",
                "following_url": "https://api.github.com/users/Gjum/following{/other_user}",
                "gists_url": "https://api.github.com/users/Gjum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Gjum",
                "id": 2612164,
                "login": "Gjum",
                "organizations_url": "https://api.github.com/users/Gjum/orgs",
                "received_events_url": "https://api.github.com/users/Gjum/received_events",
                "repos_url": "https://api.github.com/users/Gjum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Gjum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Gjum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Gjum"
            }
        },
        {
            "body": "Good way to check if that works properly : checks whether the bot (jumper.js for example) can walk on soulsand on a server with no cheap plus (see #319)\r\n\r\nAfter some testing : it seems you need to come out of the ground before you move out of soulsand if you want the server to accept. So : between a blockA and a blockB you need to be at max(boundingBoxA,boundingBoxB).\r\n\r\nActually likely the highest of the blocks you are on.",
            "created_at": "2015-08-09T01:35:49Z",
            "html_url": "https://github.com/PrismarineJS/mineflayer/issues/228#issuecomment-129081705",
            "id": 129081705,
            "issue_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228",
            "updated_at": "2015-08-09T02:31:37Z",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/comments/129081705",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228/comments",
    "created_at": "2015-03-22T18:07:38Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-03-24T14:05:59Z",
            "event": "labeled",
            "id": 263528856,
            "label": {
                "color": "006b75",
                "name": "physics"
            },
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/263528856"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-03-27T12:29:39Z",
            "event": "labeled",
            "id": 266836240,
            "label": {
                "color": "fad8c7",
                "name": "data-related"
            },
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/266836240"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-03-27T12:39:31Z",
            "event": "labeled",
            "id": 266841667,
            "label": {
                "color": "5319e7",
                "name": "block"
            },
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/266841667"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-03-29T17:37:09Z",
            "event": "mentioned",
            "id": 267962297,
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/267962297"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87436?v=3",
                "events_url": "https://api.github.com/users/thejoshwolfe/events{/privacy}",
                "followers_url": "https://api.github.com/users/thejoshwolfe/followers",
                "following_url": "https://api.github.com/users/thejoshwolfe/following{/other_user}",
                "gists_url": "https://api.github.com/users/thejoshwolfe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thejoshwolfe",
                "id": 87436,
                "login": "thejoshwolfe",
                "organizations_url": "https://api.github.com/users/thejoshwolfe/orgs",
                "received_events_url": "https://api.github.com/users/thejoshwolfe/received_events",
                "repos_url": "https://api.github.com/users/thejoshwolfe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thejoshwolfe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thejoshwolfe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thejoshwolfe"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-03-29T17:37:09Z",
            "event": "subscribed",
            "id": 267962298,
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/267962298"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": "7d4e60549251666733c18f12f8ffe5a721aa50bf",
            "commit_url": "https://api.github.com/repos/PrismarineJS/mineflayer/commits/7d4e60549251666733c18f12f8ffe5a721aa50bf",
            "created_at": "2015-08-09T03:04:42Z",
            "event": "referenced",
            "id": 377225865,
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/events/377225865"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228/events",
    "html_url": "https://github.com/PrismarineJS/mineflayer/issues/228",
    "id": 63559532,
    "labels": [
        {
            "color": "5319e7",
            "name": "block",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/labels/block"
        },
        {
            "color": "fad8c7",
            "name": "data-related",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/labels/data-related"
        },
        {
            "color": "006b75",
            "name": "physics",
            "url": "https://api.github.com/repos/PrismarineJS/mineflayer/labels/physics"
        }
    ],
    "labels_url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 228,
    "state": "open",
    "title": "Handle new kinds of bounding boxes",
    "updated_at": "2015-08-19T17:10:50Z",
    "url": "https://api.github.com/repos/PrismarineJS/mineflayer/issues/228",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
        "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
        "followers_url": "https://api.github.com/users/rom1504/followers",
        "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
        "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rom1504",
        "id": 2346494,
        "login": "rom1504",
        "organizations_url": "https://api.github.com/users/rom1504/orgs",
        "received_events_url": "https://api.github.com/users/rom1504/received_events",
        "repos_url": "https://api.github.com/users/rom1504/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rom1504"
    }
}