{
    "assignee": null,
    "body": "An attempt at beginning to modularize createClient() into separate modular components, see also https://github.com/PrismarineJS/node-minecraft-protocol/pull/210 [WIP] Modularize NMP which covered server, but this PR is for client only. I also did not tackle how to enable/disable/load 'modules' in this PR, considering it out of scope — this is only a source-level refactor/cleanup to make the client more modular.\r\n\r\nNote: lots of code moved around, but few actual changes; best reviewed by individual commit, I strived to keep each new module to one commit (but did not meet this goal, had to do some cleanup afterwards, did not bother to rebase/squash, though I could if needed). \r\n\r\nThe basic design is each submodule is called with `(client, options)`, and it is responsible for modifying the client to add some functionality, given the optional options object. The goal being to reduce tight coupling, as much as possible, but it could still be improved further. Or the modules could be broken up differently. Currently includes:\r\n\r\n* src/client/compress.js: sets compression threshold\r\n * would like the src/transforms/compression.js transformation to be piped in here; has a hard dependency with other internals not touched here, but ought to be more isolated so can simply remove this module to disable compression entirely\r\n* src/client/caseCorrect.js: gets the case-correct username from yggdrasil before connecting\r\n * is also responsible for performing the next step - calling connect() - possible to factor this dependency out? if no credentials given, it doesn't case-correct, but still has to call connect() to trigger the next step in the connection process\r\n* src/client/encrypt.js: ursa, yggdrasil, crypto, encryption key request. not extensively tested\r\n* src/client/keepalive.js: listen for `keep_alive`, respond\r\n* src/client/play.js: listen for `success`, transition to `PLAY` state\r\n * maybe could be renamed, or merged into another module. encrypt? handshake/login?\r\n* src/client/setProtocol.js: sends `set_protocol` packet, this is very interesting from a modularization perspective, since FML|HS would want to change it, as would protocol negotiation add-ons\r\n* src/client/tcp_dns.js: includes creating the TCP/IP socket with `net.connect()` and DNS resolution with `dns.resolveSrv()`\r\n * this is the biggest change, couldn't come up with a good name for the module, but it performs essential TCP/IP socket networking functions — this is very desirable to factor out, since, for example, a web socket server would not use it, and instead call setSocket() itself; the crucial abstraction here is a nodejs [stream](https://github.com/deathcap/wsmc/blob/master/minecraft-protocol-stream.js)\r\n\r\ncreateClient() still includes the minecraft-data version lookup, but with these changes, the file is not much more than a list of modules to inject:\r\n\r\n```javascript\r\nvar encrypt = require('./client/encrypt');\r\nvar keepalive = require('./client/keepalive');\r\nvar compress = require('./client/compress');\r\nvar caseCorrect = require('./client/caseCorrect');\r\nvar setProtocol = require('./client/setProtocol');\r\nvar play = require('./client/play');\r\nvar tcp_dns = require('./client/tcp_dns');\r\n\r\nmodule.exports=createClient;\r\n\r\nfunction createClient(options) {\r\n…[version lookup code elided…]\r\n\r\n  tcp_dns(client, options);\r\n  setProtocol(client, options);\r\n  keepalive(client, options);\r\n  encrypt(client, options);\r\n  play(client, options);\r\n  compress(client, options);\r\n  caseCorrect(client, options);\r\n\r\n  return client;\r\n}\r\n```",
    "closed_at": "2016-01-27T21:46:26Z",
    "comment_data": [
        {
            "body": "Nice !\nNow to figure out how will forge fit with that pattern.\n\nOn Tue, Jan 26, 2016, 09:19 deathcap <notifications@github.com> wrote:\n\n> An attempt at beginning to modularize createClient() into separate modular\n> components, see also #210\n> <https://github.com/PrismarineJS/node-minecraft-protocol/pull/210> [WIP]\n> Modularize NMP which covered server, but this PR is for client only. I also\n> did not tackle how to enable/disable/load 'modules' in this PR, considering\n> it out of scope — this is only a source-level refactor/cleanup to make the\n> client more modular.\n>\n> Note: lots of code moved around, but few actual changes; best reviewed by\n> individual commit, I strived to keep each new module to one commit (but did\n> not meet this goal, had to do some cleanup afterwards, did not bother to\n> rebase/squash, though I could if needed).\n>\n> The basic design is each submodule is called with (client, options), and\n> it is responsible for modifying the client to add some functionality, given\n> the optional options object. The goal being to reduce tight coupling, as\n> much as possible, but it could still be improved further. Or the modules\n> could be broken up differently. Currently includes:\n>\n>    - src/client/compress.js: sets compression threshold\n>       - would like the src/transforms/compression.js transformation to be\n>       piped in here; has a hard dependency with other internals not touched here,\n>       but ought to be more isolated so can simply remove this module to disable\n>       compression entirely\n>    - src/client/caseCorrect.js: gets the case-correct username from\n>    yggdrasil before connecting\n>       - is also responsible for performing the next step - calling\n>       connect() - possible to factor this dependency out? if no credentials\n>       given, it doesn't case-correct, but still has to call connect() to trigger\n>       the next step in the connection process\n>    - src/client/encrypt.js: ursa, yggdrasil, crypto, encryption key\n>    request. not extensively tested\n>    - src/client/keepalive.js: listen for keep_alive, respond\n>    - src/client/play.js: listen for success, transition to PLAY state\n>       - maybe could be renamed, or merged into another module. encrypt?\n>       handshake/login?\n>    - src/client/setProtocol.js: sends set_protocol packet, this is very\n>    interesting from a modularization perspective, since FML|HS would want to\n>    change it, as would protocol negotiation add-ons\n>    - src/client/tcp_dns.js: includes creating the TCP/IP socket with\n>    net.connect() and DNS resolution with dns.resolveSrv()\n>       - this is the biggest change, couldn't come up with a good name for\n>       the module, but it performs essential TCP/IP socket networking functions\n>       — this is very desirable to factor out, since, for example, a web socket\n>       server would not use it, and instead call setSocket() itself; the crucial\n>       abstraction here is a nodejs stream\n>       <https://github.com/deathcap/wsmc/blob/master/minecraft-protocol-stream.js>\n>\n> createClient() still includes the minecraft-data version lookup, but with\n> these changes, the file is not much more than a list of modules to inject:\n>\n> var encrypt = require('./client/encrypt');var keepalive = require('./client/keepalive');var compress = require('./client/compress');var caseCorrect = require('./client/caseCorrect');var setProtocol = require('./client/setProtocol');var play = require('./client/play');var tcp_dns = require('./client/tcp_dns');\n> module.exports=createClient;\n> function createClient(options) {\n> …[version lookup code elided…]\n>\n>   tcp_dns(client, options);\n>   setProtocol(client, options);\n>   keepalive(client, options);\n>   encrypt(client, options);\n>   play(client, options);\n>   compress(client, options);\n>   caseCorrect(client, options);\n>\n>   return client;\n> }\n>\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/PrismarineJS/node-minecraft-protocol/pull/333\n> Commit Summary\n>\n>    - Move onEncryptionKeyRequest to client/encryption\n>    - Move onKeepAlive to client/keepalive\n>    - Move onCompressionRequest to client/compress\n>    - Move keepAlive/checkTimeoutInterval to client/keepalive\n>    - Move making a request to get case-correct username before connecting\n>    to client/caseCorrect\n>    - Move onConnect/set_protocol to client/setProtocol\n>    - Move onLogin set state=PLAY to client/play\n>    - Fix ursa imports\n>    - Break client/caseCorrect dependence on TCP/IP host/port; generalize\n>    options.connect(client)\n>    - Move net.socket() and dns.resolveSrv() into client/net_tcp\n>    - Pass options to all src/client/*, for consistency\n>\n> File Changes\n>\n>    - *A* src/client/caseCorrect.js\n>    <https://github.com/PrismarineJS/node-minecraft-protocol/pull/333/files#diff-0>\n>    (43)\n>    - *A* src/client/compress.js\n>    <https://github.com/PrismarineJS/node-minecraft-protocol/pull/333/files#diff-1>\n>    (9)\n>    - *A* src/client/encrypt.js\n>    <https://github.com/PrismarineJS/node-minecraft-protocol/pull/333/files#diff-2>\n>    (66)\n>    - *A* src/client/keepalive.js\n>    <https://github.com/PrismarineJS/node-minecraft-protocol/pull/333/files#diff-3>\n>    (20)\n>    - *A* src/client/play.js\n>    <https://github.com/PrismarineJS/node-minecraft-protocol/pull/333/files#diff-4>\n>    (11)\n>    - *A* src/client/setProtocol.js\n>    <https://github.com/PrismarineJS/node-minecraft-protocol/pull/333/files#diff-5>\n>    (21)\n>    - *A* src/client/tcp_dns.js\n>    <https://github.com/PrismarineJS/node-minecraft-protocol/pull/333/files#diff-6>\n>    (21)\n>    - *M* src/createClient.js\n>    <https://github.com/PrismarineJS/node-minecraft-protocol/pull/333/files#diff-7>\n>    (183)\n>    - *M* src/ping.js\n>    <https://github.com/PrismarineJS/node-minecraft-protocol/pull/333/files#diff-8>\n>    (19)\n>\n> Patch Links:\n>\n>    -\n>    https://github.com/PrismarineJS/node-minecraft-protocol/pull/333.patch\n>    - https://github.com/PrismarineJS/node-minecraft-protocol/pull/333.diff\n>\n> —\n> Reply to this email directly or view it on GitHub\n> <https://github.com/PrismarineJS/node-minecraft-protocol/pull/333>.\n>\n",
            "created_at": "2016-01-26T09:54:16Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/333#issuecomment-174934271",
            "id": 174934271,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/333",
            "updated_at": "2016-01-26T09:54:16Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174934271",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "```\r\nvar client = createClient();\r\nforgeSupport(client, options);\r\n```\r\n\r\nIt should be possible that way, no ?",
            "created_at": "2016-01-26T18:31:33Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/333#issuecomment-175162106",
            "id": 175162106,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/333",
            "updated_at": "2016-01-26T18:31:33Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/175162106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "Something like that would be nice yes, but the \"get the mods and version\nfrom ping before doing anything\" situation need to be solved before that\ncan work. Maybe it can be a createClient option (to wait the ping pong) and\nthen there'd be a client.pongAnswer that the forge plugin can use.\n\nOn Tue, Jan 26, 2016, 19:31 Robin Lambertz <notifications@github.com> wrote:\n\n> var client = createClient();\n> forgeSupport(client, options);\n>\n> It should be possible that way, no ?\n>\n> —\n> Reply to this email directly or view it on GitHub\n> <https://github.com/PrismarineJS/node-minecraft-protocol/pull/333#issuecomment-175162106>\n> .\n>\n",
            "created_at": "2016-01-26T18:44:15Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/333#issuecomment-175169694",
            "id": 175169694,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/333",
            "updated_at": "2016-01-26T18:44:15Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/175169694",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Hmm. I'm thinking there should be a 'next' parameter passed to the modules so they can control when the next Middleware is called. Then we can easily implement the forge ping stuff and delay starting the connection until the ping got a response. ",
            "created_at": "2016-01-26T21:44:40Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/333#issuecomment-175246336",
            "id": 175246336,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/333",
            "updated_at": "2016-01-26T21:44:40Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/175246336",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "Yeah that sounds good\n\nOn Tue, Jan 26, 2016, 22:44 Robin Lambertz <notifications@github.com> wrote:\n\n> Hmm. I'm thinking there should be a 'next' parameter passed to the modules\n> so they can control when the next Middleware is called. Then we can easily\n> implement the forge ping stuff and delay starting the connection until the\n> ping got a response.\n>\n> —\n> Reply to this email directly or view it on GitHub\n> <https://github.com/PrismarineJS/node-minecraft-protocol/pull/333#issuecomment-175246336>\n> .\n>\n",
            "created_at": "2016-01-26T22:03:38Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/333#issuecomment-175253129",
            "id": 175253129,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/333",
            "updated_at": "2016-01-26T22:03:38Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/175253129",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "A next parameter could be interesting, it may also solve the issue with src/client/caseCorrect.js, where it is responsible for initiating the client connection. Would need some more design/prototyping how this would work exactly, though. \r\n\r\nI think the dynamic Forge ping to get mods issue would be best solved separately from this PR, e.g. using the same technique in https://github.com/PrismarineJS/node-minecraft-protocol/pull/331 dynamic cross-protocol support. For now, (or until https://github.com/PrismarineJS/node-minecraft-protocol/pull/326 Forge client support, gets updated to use these submodules), Forge clients could specify the exact `forgeMods` array they want to offer to the server. Then adding support would be a simple matter as @roblabla mentions, installing the middleware something like:\r\n\r\n    forgeHandshake(client, options);\r\n\r\nmaybe some of the other submodules should be consolidated into 'handshake' (implied vanilla handshake) for consistency. Either way, the `options` here would include `forgeMods`.\r\n\r\nMost of https://github.com/PrismarineJS/node-minecraft-protocol/pull/326 can be easily factored out, since the bulk of the code is a custom_payload listener, the only wrinkle is the need to tag the hostname, so a change to src/client/setProtocol.js (to add a custom tag option to serverHost?) may be required.\r\n\r\nBut lets put this off until https://github.com/PrismarineJS/node-minecraft-protocol/pull/326, for this PR I tried to add no new functionality, but pave the way for future enhancements made possible by the improved modularization.",
            "created_at": "2016-01-27T21:18:50Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/333#issuecomment-175858586",
            "id": 175858586,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/333",
            "updated_at": "2016-01-27T21:24:42Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/175858586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Okay let's merge :+1: ",
            "created_at": "2016-01-27T21:45:56Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/333#issuecomment-175871745",
            "id": 175871745,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/333",
            "updated_at": "2016-01-27T21:45:56Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/175871745",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/333/comments",
    "created_at": "2016-01-26T08:18:55Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-27T21:18:50Z",
            "event": "mentioned",
            "id": 528780344,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/528780344"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-27T21:18:50Z",
            "event": "subscribed",
            "id": 528780345,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/528780345"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-27T21:18:55Z",
            "event": "renamed",
            "id": 528780416,
            "rename": {
                "from": "[WIP] Modularization attempt of createClient()",
                "to": "Modularization attempt of createClient()"
            },
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/528780416"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": "a6a673a8c80da66cd02cbcd0bd8d9da2c65cce4e",
            "commit_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/commits/a6a673a8c80da66cd02cbcd0bd8d9da2c65cce4e",
            "created_at": "2016-01-27T21:46:26Z",
            "event": "referenced",
            "id": 528818159,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/528818159"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": "a6a673a8c80da66cd02cbcd0bd8d9da2c65cce4e",
            "commit_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/commits/a6a673a8c80da66cd02cbcd0bd8d9da2c65cce4e",
            "created_at": "2016-01-27T21:46:26Z",
            "event": "merged",
            "id": 528818160,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/528818160"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-27T21:46:26Z",
            "event": "closed",
            "id": 528818170,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/528818170"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": "fd9caddb677e9237ae552829df3d218c7e3e2bee",
            "commit_url": "https://api.github.com/repos/deathcap/node-minecraft-protocol/commits/fd9caddb677e9237ae552829df3d218c7e3e2bee",
            "created_at": "2016-01-28T04:28:31Z",
            "event": "referenced",
            "id": 529095641,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/529095641"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/333/events",
    "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/333",
    "id": 128754013,
    "labels": [],
    "labels_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/333/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 333,
    "pull_request": {
        "diff_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/333.diff",
        "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/333",
        "patch_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/333.patch",
        "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/pulls/333"
    },
    "repository_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol",
    "state": "closed",
    "title": "Modularization attempt of createClient()",
    "updated_at": "2016-01-27T21:46:27Z",
    "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/333",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
        "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
        "followers_url": "https://api.github.com/users/deathcap/followers",
        "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
        "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/deathcap",
        "id": 5897956,
        "login": "deathcap",
        "organizations_url": "https://api.github.com/users/deathcap/orgs",
        "received_events_url": "https://api.github.com/users/deathcap/received_events",
        "repos_url": "https://api.github.com/users/deathcap/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/deathcap"
    }
}