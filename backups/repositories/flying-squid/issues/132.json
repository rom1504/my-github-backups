{
    "assignee": null,
    "body": "Currently there are stuff like this:\r\n```js\r\nplayer.behavior('punch', {}, () => {\r\n      player._writeOthersNearby(\"animation\", {\r\n        entityId: player.id,\r\n        animation: 0\r\n      });\r\n    })\r\n```\r\n\r\nAnd this is really hard to think about because it is both emitting events and listening on it (default action).\r\n\r\nIt would probably be simpler to do\r\n\r\n```js\r\nplayer.emitBehavior('punch', {});\r\nplayer.on('punch',(data,cancelled) => {\r\n  if(cancelled) return;\r\n  player._writeOthersNearby(\"animation\", {\r\n        entityId: player.id,\r\n        animation: 0\r\n      });\r\n});\r\n```\r\n\r\nOr even just:\r\n```js\r\nplayer.emitBehavior('punch', {});\r\nplayer.on('punch',(data) => {\r\n  player._writeOthersNearby(\"animation\", {\r\n        entityId: player.id,\r\n        animation: 0\r\n      });\r\n});\r\n```\r\n\r\nI wonder why the 'punch' event is emitted at all if it has been cancelled ?\r\n\r\n\r\nJust some possibilities, but the current \"default action\" thingy is very confusing imho (why is there only one default action unlike normal events ?)",
    "closed_at": null,
    "comment_data": [
        {
            "body": "On the same theme, stuff like https://github.com/mhsjlw/flying-squid/blob/5bff660bbea5cee64c00cabd354edf598305f2cb/src/lib/plugins/pvp.js#L15 really don't make any sense.\r\nthat thingy with all the parameters should *be* the attackEntity function, the behavior should be emitted on 'use_entity', not when that function is called.\r\n\r\nDo you really want to enable plugins to break functions all around the project ?\r\n\r\nedit: yeah indeed I thing \"default actions\" just make things confusing. (people are going to look at the code and think \"I need to add stuff to the default action\", instead of \"I need to listen to the event and do something\")",
            "created_at": "2015-11-26T11:46:32Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132#issuecomment-159892433",
            "id": 159892433,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
            "updated_at": "2015-11-26T11:48:50Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/159892433",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "So a few points to make:\r\n\r\n- Digging also has one packet that could mean multiple behaviors. It's much simpler to think of \"attackEntity\" and \"useEntity\" (right-click) than just one \"useEntity\" and having to decipher the mouse\r\n- The reason for not doing it on \"punch\" is because there is a guaranteed order:\r\n - EVENTNAME_cancel\r\n - EVENTNAME\r\n - Run default action OR run cancel default action OR do nothing\r\n - EVENTNAME_done\r\n\r\nFor example, if you wanted to make a plugin that digged blocks go flying in the air, you might do:\r\n```js\r\nplayer.on('dug', data => {\r\n  data.blockDropVelocity = new Vec3(Math.random()*10, 10 + Math.random()*10, Math.random()*10);\r\n});\r\n```\r\n\r\nHowever, if the default listener was created before this plugin was loaded (which \"digging.js\" comes before \"external.js\" so it's likely), that means that the default action gets called *before* that plugin. The plugin completely breaks.\r\n\r\nPeople don't need to use cancels at all if they're not interested, and they don't even have to be aware that behaviors emit more than one type of event. However, it's important to note that if you've been on any server with lots of plugins (advanced survival servers, minigame servers, etc), plugins have an intense usage of \"cancelling\" things.\r\n\r\nSorry that was a lot :P",
            "created_at": "2015-11-26T20:46:45Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132#issuecomment-159991958",
            "id": 159991958,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
            "updated_at": "2015-11-26T20:46:56Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/159991958",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7506359?v=3",
                "events_url": "https://api.github.com/users/demipixel/events{/privacy}",
                "followers_url": "https://api.github.com/users/demipixel/followers",
                "following_url": "https://api.github.com/users/demipixel/following{/other_user}",
                "gists_url": "https://api.github.com/users/demipixel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/demipixel",
                "id": 7506359,
                "login": "demipixel",
                "organizations_url": "https://api.github.com/users/demipixel/orgs",
                "received_events_url": "https://api.github.com/users/demipixel/received_events",
                "repos_url": "https://api.github.com/users/demipixel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/demipixel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/demipixel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/demipixel"
            }
        },
        {
            "body": "* I have no problem with multiple events\r\n* Is it useful to run the default action before eventname_done ? (your doc says the opposite btw)\r\nWhat's the use of eventname_done btw ?\r\n\r\n'However, if the default listener was created before this plugin was loaded (which \"digging.js\" comes before \"external.js\" so it's likely), that means that the default action gets called before that plugin. ' no\r\n\r\nif you do player.on(\"some_event\", () => { player.someNotYetDefinedFunction(); }); that won't be a problem if player.someNotYetDefinedFunction has be defined when some_event is actually emitted. (that's why plugin loading order doesn't matter)\r\n\r\nI also have no problem with cancel, but what is the meaning of the punch event if it has been cancelled ? do people want to do things on \"punch\" + cancelled==true ?",
            "created_at": "2015-11-26T22:25:19Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132#issuecomment-159999797",
            "id": 159999797,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
            "updated_at": "2015-11-26T22:25:19Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/159999797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "I'm having trouble thinking of examples where you would say `if (cancelled)` however there are plenty of situations where you wouldn't check if cancelled was true or not. For example, if you wanted a chat log plugin, you would include everything, cancelled or otherwise (in most cases). In other cases, people might use \"cancelCount\" over \"cancelled\".\r\n\r\nBut yeah, I see what you mean by \"punch\" + cancelled==true not really being used (except in really stupid circumstances for testing or whatever)",
            "created_at": "2015-11-27T00:03:43Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132#issuecomment-160008105",
            "id": 160008105,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
            "updated_at": "2015-11-27T00:03:43Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/160008105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7506359?v=3",
                "events_url": "https://api.github.com/users/demipixel/events{/privacy}",
                "followers_url": "https://api.github.com/users/demipixel/followers",
                "following_url": "https://api.github.com/users/demipixel/following{/other_user}",
                "gists_url": "https://api.github.com/users/demipixel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/demipixel",
                "id": 7506359,
                "login": "demipixel",
                "organizations_url": "https://api.github.com/users/demipixel/orgs",
                "received_events_url": "https://api.github.com/users/demipixel/received_events",
                "repos_url": "https://api.github.com/users/demipixel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/demipixel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/demipixel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/demipixel"
            }
        },
        {
            "body": "Hmm hmm yeah, there is an ambiguity between real behavior and \"information behavior\" like chat.",
            "created_at": "2015-11-27T00:10:46Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132#issuecomment-160008429",
            "id": 160008429,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
            "updated_at": "2015-11-27T00:10:46Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/160008429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Well, chat can actually be cancelled (won't broadcast). By \"informational\" behavior, I assume you mean it provides information that can be changed (if it can't be changed, it's just an event). As of right now, the only behavior that has no effect on its default action nor cancel action is \"forceCancelDig\". In reality, though, that should be changed (remove \"stop\", and then just make cancel() set stop to false).",
            "created_at": "2015-11-27T00:13:40Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132#issuecomment-160008694",
            "id": 160008694,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
            "updated_at": "2015-11-27T00:14:03Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/160008694",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7506359?v=3",
                "events_url": "https://api.github.com/users/demipixel/events{/privacy}",
                "followers_url": "https://api.github.com/users/demipixel/followers",
                "following_url": "https://api.github.com/users/demipixel/following{/other_user}",
                "gists_url": "https://api.github.com/users/demipixel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/demipixel",
                "id": 7506359,
                "login": "demipixel",
                "organizations_url": "https://api.github.com/users/demipixel/orgs",
                "received_events_url": "https://api.github.com/users/demipixel/received_events",
                "repos_url": "https://api.github.com/users/demipixel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/demipixel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/demipixel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/demipixel"
            }
        },
        {
            "body": "related\r\n\r\nbehavior shouldn't be in functions, so this is wrong https://github.com/mhsjlw/flying-squid/blob/master/src/lib/plugins/blocks.js#L16\r\n\r\nbehavior should be between an event and a function call. Not in the function call.\r\n\r\nbehavior shouldn't break functions.",
            "created_at": "2015-12-13T04:11:57Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132#issuecomment-164221283",
            "id": 164221283,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
            "updated_at": "2015-12-13T04:11:57Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/164221283",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "The reason for it is for stuff like my \"allglass plugin\" that intervenes both sendBlock and sendChunk. Idk how else you'd do it, especially if you want to intervene another plugin's sendBlock. On the other hand, I'm mainly using the behavior to *change* data, not to cancel the behavior. On the other hand, you might be able to do some fun stuff cancelling a sendBlock...",
            "created_at": "2015-12-13T04:21:42Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132#issuecomment-164221745",
            "id": 164221745,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
            "updated_at": "2015-12-13T04:21:42Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/164221745",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7506359?v=3",
                "events_url": "https://api.github.com/users/demipixel/events{/privacy}",
                "followers_url": "https://api.github.com/users/demipixel/followers",
                "following_url": "https://api.github.com/users/demipixel/following{/other_user}",
                "gists_url": "https://api.github.com/users/demipixel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/demipixel",
                "id": 7506359,
                "login": "demipixel",
                "organizations_url": "https://api.github.com/users/demipixel/orgs",
                "received_events_url": "https://api.github.com/users/demipixel/received_events",
                "repos_url": "https://api.github.com/users/demipixel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/demipixel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/demipixel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/demipixel"
            }
        },
        {
            "body": "yes I see what you mean.\r\n\r\nBut I really dislike that anything in the code, in any plugin, can break sendBlock. Maybe there should be a sendBlock and a cSendBlock (c for cancellable) that would be the behavior and use sendBlock as default function.",
            "created_at": "2015-12-13T04:57:24Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132#issuecomment-164223458",
            "id": 164223458,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
            "updated_at": "2015-12-13T04:57:24Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/164223458",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Might be better to have a ucSendBlock (uncancellable). You also have to consider that stuff might break if another plugin can't intervene a sendBlock, so it's better if the plugin that failed to use ucSendBlock (if they needed it) is the one that breaks rather than the one that intervened (nothing wrong with that)",
            "created_at": "2015-12-13T05:08:10Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132#issuecomment-164224941",
            "id": 164224941,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
            "updated_at": "2015-12-13T05:08:10Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/164224941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7506359?v=3",
                "events_url": "https://api.github.com/users/demipixel/events{/privacy}",
                "followers_url": "https://api.github.com/users/demipixel/followers",
                "following_url": "https://api.github.com/users/demipixel/following{/other_user}",
                "gists_url": "https://api.github.com/users/demipixel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/demipixel",
                "id": 7506359,
                "login": "demipixel",
                "organizations_url": "https://api.github.com/users/demipixel/orgs",
                "received_events_url": "https://api.github.com/users/demipixel/received_events",
                "repos_url": "https://api.github.com/users/demipixel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/demipixel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/demipixel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/demipixel"
            }
        },
        {
            "body": "yeah I'm okay with that",
            "created_at": "2015-12-13T05:09:07Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132#issuecomment-164225234",
            "id": 164225234,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
            "updated_at": "2015-12-13T05:09:07Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/164225234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Better yet make \"noCancel\" or \"uncancellable\" an option.",
            "created_at": "2015-12-13T05:16:01Z",
            "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132#issuecomment-164226958",
            "id": 164226958,
            "issue_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
            "updated_at": "2015-12-13T05:16:01Z",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/comments/164226958",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7506359?v=3",
                "events_url": "https://api.github.com/users/demipixel/events{/privacy}",
                "followers_url": "https://api.github.com/users/demipixel/followers",
                "following_url": "https://api.github.com/users/demipixel/following{/other_user}",
                "gists_url": "https://api.github.com/users/demipixel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/demipixel",
                "id": 7506359,
                "login": "demipixel",
                "organizations_url": "https://api.github.com/users/demipixel/orgs",
                "received_events_url": "https://api.github.com/users/demipixel/received_events",
                "repos_url": "https://api.github.com/users/demipixel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/demipixel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/demipixel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/demipixel"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132/comments",
    "created_at": "2015-11-26T10:02:45Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-12-07T00:40:25Z",
            "event": "labeled",
            "id": 483899690,
            "label": {
                "color": "006b75",
                "name": "refactoring"
            },
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/events/483899690"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132/events",
    "html_url": "https://github.com/PrismarineJS/flying-squid/issues/132",
    "id": 119009953,
    "labels": [
        {
            "color": "006b75",
            "name": "refactoring",
            "url": "https://api.github.com/repos/PrismarineJS/flying-squid/labels/refactoring"
        }
    ],
    "labels_url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 132,
    "repository_url": "https://api.github.com/repos/PrismarineJS/flying-squid",
    "state": "open",
    "title": "Separate emit and on in behaviors",
    "updated_at": "2015-12-13T05:16:01Z",
    "url": "https://api.github.com/repos/PrismarineJS/flying-squid/issues/132",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
        "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
        "followers_url": "https://api.github.com/users/rom1504/followers",
        "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
        "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rom1504",
        "id": 2346494,
        "login": "rom1504",
        "organizations_url": "https://api.github.com/users/rom1504/orgs",
        "received_events_url": "https://api.github.com/users/rom1504/received_events",
        "repos_url": "https://api.github.com/users/rom1504/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rom1504"
    }
}