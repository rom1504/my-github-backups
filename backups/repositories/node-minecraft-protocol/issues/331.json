{
    "assignee": null,
    "body": "Implements the dynamic part of https://github.com/PrismarineJS/node-minecraft-protocol/issues/234 Cross version support\r\n\r\nPorted from https://github.com/deathcap/node-minecraft-protocol-auto (which I can deprecate if this is merged)\r\n\r\nTo do:\r\n\r\n* [x] Enhance createClient() to allow waiting/pausing so it can be reconfigured before connect -- src/client/setProtocol.js? (installs client.on('connect') listener)\r\n* [x] Change the protocol negotiation to be supported with a createClient()-compatible API (vs createClientAsync)\r\n* [x] Update to use minecraft-data protocolVersions\r\n* [x] Move into src/client/ to act as plugin/middleware",
    "closed_at": "2016-02-02T08:04:23Z",
    "comment_data": [
        {
            "body": "createClient doesn't create an \"all ready\" client: people will want to wait for the login packet for example.\r\nSo I think it would be okay to return a client synchronously, and do the ping and set protocol thingies inside of createClient \"afterwards\".\r\nThat would mean changes in Client, but it might be okay.\r\nThis would have the benefit of keeping just one createClient.",
            "created_at": "2016-01-25T08:58:03Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-174441138",
            "id": 174441138,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-01-25T08:58:03Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174441138",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Err probably not login, that's server side, but there are many \"ready\" events in mineflayer (spawn, received inventory,...), so people wait for one of these before writing anything to the client.\r\nIt's also important to be able to listen to client \"error\" event asap",
            "created_at": "2016-01-25T09:01:11Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-174441722",
            "id": 174441722,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-01-25T09:13:44Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174441722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "I'd definitely like to maintain API compatibility with createClient, will have to investigate more to try to do this. The problem I was running into is that the client created by createClient would continue the protocol handshake even before I received the ping. Maybe need some way to \"pause\" the client object? Also to dynamically change the version and hostname after object construction.",
            "created_at": "2016-01-26T02:33:45Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-174783633",
            "id": 174783633,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-01-26T02:33:45Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174783633",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "I think to do it cleanly you'd have to change createClient so it would\n(optionally) \"wait\" (listen to the right event,...) for the ping pong to be\nover before starting the handshake. It's createClient doing the state\nchanging, Client only provide the functionality to do so.\nAlso I think it would be possible that way to use the same socket for\npinging and for the rest. The vanilla client probably doesn't use the same\nsocket, but I think it makes sense.\nYeah it would be needed to change the version after the pong. It is kind of\nalready being done anyway since mc.ping default to 1.8.\n\nOn Tue, Jan 26, 2016, 03:33 deathcap <notifications@github.com> wrote:\n\n> I'd definitely like to maintain API compatibility with createClient, will\n> have to investigate more to try to do this. The problem I was running into\n> is that the client created by createClient would continue the protocol\n> handshake even before I received the ping. Maybe need some way to \"pause\"\n> the client object? Also to dynamically change the version and hostname\n> after object construction.\n>\n> â€”\n> Reply to this email directly or view it on GitHub\n> <https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-174783633>\n> .\n>\n",
            "created_at": "2016-01-26T10:15:16Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-174941928",
            "id": 174941928,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-01-26T10:15:16Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174941928",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "> Yeah it would be needed to change the version after the pong. It is kind of\r\nalready being done anyway since mc.ping default to 1.8.\r\n\r\nI think that's problematic for other reasons, imho the 0xfe01 ping https://github.com/PrismarineJS/node-minecraft-protocol/issues/332 is superior, as it does not require a status handshake, nor a protocol version (and works on all 1.4.4+)\r\n\r\n> I think to do it cleanly you'd have to change createClient so it would\r\n(optionally) \"wait\" (listen to the right event,...) for the ping pong to be\r\nover before starting the handshake. It's createClient doing the state\r\nchanging, Client only provide the functionality to do so.\r\n\r\nNotes for testing this scenario:\r\n\r\nedit src/createServer.js to comment out `client.once('ping_start', onPing);`\r\n\r\n`node examples/server/server.js`\r\n\r\n`NODE_DEBUG=mc-proto node examples/client_auto/client_auto.js localhost 25565`\r\n\r\nclient should hang (hits https://github.com/PrismarineJS/node-minecraft-protocol/issues/329 Missing ping timeout callback when server is running but not responding to pings) or timeout:\r\n\r\n```\r\nnode-minecraft-protocol $ NODE_DEBUG=mc-proto node examples/client_auto/client_auto.js localhost 25565\r\nMC-PROTO: 54954 creating client\r\nMC-PROTO: 54954 pinging localhost\r\nMC-PROTO: 54954 writing packet handshaking.set_protocol\r\nMC-PROTO: 54954 { protocolVersion: 47,\r\n  serverHost: 'localhost',\r\n  serverPort: 25565,\r\n  nextState: 1 }\r\nMC-PROTO: 54954 writing packet status.ping_start\r\nMC-PROTO: 54954 {}\r\n```\r\n\r\nthen edit src/createClientAuto.js (from this PR), move the `createClient()` call outside of the ping callback directly into `createClientAsync()`, and rerun client_auto.js\r\n\r\nnow, the client will despite not receiving a ping (callback not executed), it will still begin to connect:\r\n\r\n```\r\nnode-minecraft-protocol $ NODE_DEBUG=mc-proto node examples/client_auto/client_auto.js localhost 25565\r\nMC-PROTO: 54970 creating client\r\nMC-PROTO: 54970 pinging localhost\r\nMC-PROTO: 54970 writing packet handshaking.set_protocol\r\nMC-PROTO: 54970 { protocolVersion: 47,\r\n  serverHost: 'localhost',\r\n  serverPort: 25565,\r\n  nextState: 2 }\r\nMC-PROTO: 54970 writing packet login.login_start\r\nMC-PROTO: 54970 { username: 'echo' }\r\nMC-PROTO: 54970 writing packet handshaking.set_protocol\r\nMC-PROTO: 54970 { protocolVersion: 47,\r\n  serverHost: 'localhost',\r\n  serverPort: 25565,\r\n  nextState: 1 }\r\nMC-PROTO: 54970 writing packet status.ping_start\r\nMC-PROTO: 54970 {}\r\nMC-PROTO: 54970 read packet login.compress\r\nMC-PROTO: 54970 { threshold: 256 }\r\nMC-PROTO: 54970 read packet login.success\r\nMC-PROTO: 54970 { uuid: 'c39fa4c6-85a3-3582-8167-db3805dbe851',\r\n  username: 'echo' }\r\nMC-PROTO: 54970 read packet play.chat\r\nMC-PROTO: 54970 { message: '{\"translate\":\"chat.type.text\",\"with\":[\"Server\",\"echo joined the game.\"]}',\r\n  position: 0 }\r\nMC-PROTO: 54970 read packet play.login\r\nMC-PROTO: 54970 { entityId: 1,\r\n  gameMode: 1,\r\n  dimension: 0,\r\n  difficulty: 2,\r\n  maxPlayers: 127,\r\n  levelType: 'default',\r\n  reducedDebugInfo: false }\r\nMC-PROTO: 54970 read packet play.position\r\nMC-PROTO: 54970 { x: 0, y: 256, z: 0, yaw: 0, pitch: 0, flags: 0 }\r\nMC-PROTO: 54970 read packet play.keep_alive\r\nMC-PROTO: 54970 { keepAliveId: 2138214823 }\r\nMC-PROTO: 54970 writing packet play.keep_alive\r\nMC-PROTO: 54970 { keepAliveId: 2138214823 }\r\nMC-PROTO: 54970 read packet play.keep_alive\r\nMC-PROTO: 54970 { keepAliveId: 648251752 }\r\nMC-PROTO: 54970 writing packet play.keep_alive\r\nMC-PROTO: 54970 { keepAliveId: 648251752 }\r\nMC-PROTO: 54970 read packet play.keep_alive\r\nMC-PROTO: 54970 { keepAliveId: 1917937053 }\r\nMC-PROTO: 54970 writing packet play.keep_alive\r\nMC-PROTO: 54970 { keepAliveId: 1917937053 }\r\n\r\n```\r\n\r\n---\r\n\r\nNow that the client is more modular, it's easier to see what's going on, need to test to confirm but I think this is where it is unexpectedly (or undesirably) executing from:\r\n\r\n```javascript\r\n// src/client/setProtocol.js\r\nar states = require(\"../states\");\r\n\r\nmodule.exports = function(client, options) {\r\n  client.on('connect', onConnect);\r\n\r\n  function onConnect() {\r\n    client.write('set_protocol', {\r\n      protocolVersion: options.protocolVersion,\r\n      serverHost: options.host,\r\n      serverPort: options.port,\r\n      nextState: 2\r\n    });\r\n```\r\n\r\nsetProtocol sends the set_protocol packet as soon as the socket connects. \r\n\r\n(and src/client/caseCorrect.js calls client options.connect(), which is set from src/client/tcp_dns.js to call client.setSocket())",
            "created_at": "2016-01-28T07:45:34Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-176037367",
            "id": 176037367,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-01-28T07:57:09Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/176037367",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "caseCorrecting and tcp_dns (SRV lookup and TCP initiation) can occur beforehand, but sending set_protocol should be delayed until the client knows (via ping) the protocolVersion.",
            "created_at": "2016-01-28T08:02:06Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-176044435",
            "id": 176044435,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-01-28T08:02:06Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/176044435",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Listen for another event in setProtocol before sending the packet? 'connect' is going to be received when the TCP socket it connected, whether we are ready for it or not. Additionally block on another event (optionally), something like 'connect_allowed'?",
            "created_at": "2016-01-28T08:58:59Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-176069639",
            "id": 176069639,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-01-28T08:58:59Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/176069639",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "> Also I think it would be possible that way to use the same socket for\r\npinging and for the rest. The vanilla client probably doesn't use the same\r\nsocket, but I think it makes sense.\r\n\r\nThe server immediately closes the socket after sending the ping response, so unfortunately I don't think reusing it is possible. ",
            "created_at": "2016-01-31T05:45:23Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-177402764",
            "id": 177402764,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-01-31T05:45:23Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177402764",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Converted to use \"sync\" API ok, started to move into createClient() via a src/client/autoVersion.js plugin. Having some difficulty re-versioning the client object after it is instantiated. The constructor calls setHandshake() and sets .version to the major version, so I do this too in autoVersion.js after the version is ready, and then emit connect_allowed to uncork setProtocol, it sends the set_protocol packet but then the program just exits:\r\n\r\n```\r\nnode-minecraft-protocol $ NODE_DEBUG=mc-proto node examples/client_auto/client_auto.js localhost 9999\r\nMC-PROTO: 7249 creating client\r\nMC-PROTO: 7249 pinging localhost\r\nconnected\r\nMC-PROTO: 7249 writing packet handshaking.set_protocol\r\nMC-PROTO: 7249 { protocolVersion: 47,\r\n  serverHost: 'localhost',\r\n  serverPort: 9999,\r\n  nextState: 1 }\r\nMC-PROTO: 7249 writing packet status.ping_start\r\nMC-PROTO: 7249 {}\r\nMC-PROTO: 7249 read packet status.server_info\r\nMC-PROTO: 7249 { response: '{\"description\":{\"text\":\"A Minecraft Server\"},\"players\":{\"max\":20,\"online\":0},\"version\":{\"name\":\"15w40b\",\"protocol\":76}}' }\r\nMC-PROTO: 7249 writing packet status.ping\r\nMC-PROTO: 7249 { time: [ 0, 0 ] }\r\nMC-PROTO: 7249 read packet status.ping\r\nMC-PROTO: 7249 { time: [ 0, 0 ] }\r\nMC-PROTO: 7249 ping response { description: { text: 'A Minecraft Server' },\r\n  players: { max: 20, online: 0 },\r\n  version: { name: '15w40b', protocol: 76 },\r\n  latency: 1 }\r\nMC-PROTO: 7249 Server description: { text: 'A Minecraft Server' }\r\nMC-PROTO: 7249 Server version: 15w40b, protocol: 76\r\n{ minecraftVersion: '15w40b',\r\n  version: 76,\r\n  usesNetty: true,\r\n  majorVersion: '1.9' }\r\nMC-PROTO: 7249 writing packet handshaking.set_protocol\r\nMC-PROTO: 7249 { protocolVersion: 76,\r\n  serverHost: 'localhost',\r\n  serverPort: 9999,\r\n  nextState: 2 }\r\nMC-PROTO: 7249 writing packet login.login_start\r\nMC-PROTO: 7249 { username: 'echo' }\r\n```",
            "created_at": "2016-01-31T06:52:48Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-177414948",
            "id": 177414948,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-01-31T06:52:48Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177414948",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Looks like the ping connection is somehow interfering with the subsequent normal connection. `connected` is logged right after \"pinging localhost\", when receiving the client `connect` event, but not for the re-connect with the new version. The program ends because the client receives the `end` event.\r\n\r\n---\r\n\r\nThe logged `connected` message is actually from the normal connection, the TCP socket connects almost immediately, but is held without reply until the ping is received. client_echo logs for comparison:\r\n\r\n```\r\nnode-minecraft-protocol $ NODE_DEBUG=mc-proto node examples/client_echo/client_echo.js localhost 18900\r\nsetProtocol onConnect\r\nMC-PROTO: 11592 writing packet handshaking.set_protocol\r\nMC-PROTO: 11592 { protocolVersion: 47,\r\n  serverHost: 'localhost',\r\n  serverPort: 18900,\r\n  nextState: 2 }\r\nMC-PROTO: 11592 writing packet login.login_start\r\nMC-PROTO: 11592 { username: 'echo' }\r\nconnected\r\nMC-PROTO: 11592 read packet login.compress\r\nMC-PROTO: 11592 { threshold: 256 }\r\nMC-PROTO: 11592 read packet login.success\r\nMC-PROTO: 11592 { uuid: 'c39fa4c6-85a3-3582-8167-db3805dbe851',\r\n  username: 'echo' }\r\nMC-PROTO: 11592 read packet play.login\r\nMC-PROTO: 11592 { entityId: 364,\r\n  gameMode: 0,\r\n  dimension: 0,\r\n  difficulty: 1,\r\n  maxPlayers: 20,\r\n  levelType: 'default',\r\n  reducedDebugInfo: false }\r\nMC-PROTO: 11592 read packet play.custom_payload\r\nMC-PROTO: 11592 { channel: 'MC|Brand', data: <Buffer 07 76 61 6e 69 6c 6c 61> }\r\nMC-PROTO: 11592 read packet play.difficulty\r\nMC-PROTO: 11592 { difficulty: 1 }\r\nMC-PROTO: 11592 read packet play.spawn_position\r\nMC-PROTO: 11592 { location: { x: -8, y: 64, z: -196 } }\r\n```\r\n\r\n---\r\n\r\nProblem with the serializer? Packet capture shows the handshaking.set_protocol packet is never sent on the 2nd connection, only the login.login_start packet:\r\n\r\n```\r\n00000000  06                                               .\r\n00000001  00 04 65 63 68 6f                                ..echo\r\n```\r\n\r\neven though it was logged as being written in:\r\n\r\n```\r\nsetting serializer for state=handshaking, version=1.9\r\nMC-PROTO: 12311 writing packet handshaking.set_protocol\r\nMC-PROTO: 12311 { protocolVersion: 76,\r\n  serverHost: 'localhost',\r\n  serverPort: 9999,\r\n  nextState: 2 }\r\nsetting serializer for state=login, version=1.9\r\nMC-PROTO: 12311 writing packet login.login_start\r\nMC-PROTO: 12311 { username: 'echo' }\r\nended\r\n```",
            "created_at": "2016-01-31T19:39:17Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-177595548",
            "id": 177595548,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-01-31T20:13:37Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177595548",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Updating the client state using `client.state = states.HANDSHAKING` instead of `client.setSerializer(states.HANDSHAKING)` resolves the above issue, now able to connect with the auto-negotiated protocol.\r\n\r\n(why I was confused: the src/client.js constructor calls this.setSerializer, not this.state=..., tried to mimic that behavior to re-initialize the version, but `set state(newProperty)` has a setter to perform important useful tasks of piping/unpiping the serializers).",
            "created_at": "2016-01-31T20:22:24Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-177601123",
            "id": 177601123,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-01-31T20:23:54Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177601123",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Removing [WIP], ready to pull, but see some thoughts for future improvements to versioning in https://github.com/PrismarineJS/node-minecraft-protocol/issues/234#issuecomment-177621514",
            "created_at": "2016-01-31T21:37:23Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-177621651",
            "id": 177621651,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-01-31T23:09:39Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177621651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Failing tests in requiring minecraft-data: https://github.com/PrismarineJS/node-minecraft-data/issues/16\r\n\r\nAttempted to use latest node-minecraft-data from git, but still fails, I think CircleCI is caching the node_modules. Will try a clean CircleCI setup.",
            "created_at": "2016-02-01T04:53:02Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-177763478",
            "id": 177763478,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-02-01T04:53:35Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177763478",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "I made some comments\r\n* minecraft-data 0.19.1 is now usable\r\n* I'd like to keep the `client, options` pattern if possible, I think it would be better to put the changing attributes in the Client object https://github.com/PrismarineJS/node-minecraft-protocol/blob/master/src/client.js#L14\r\n\r\n(I guess it's probably necessary for some plugins to depend on other, but let's probably keep it implicit for now)",
            "created_at": "2016-02-01T08:58:57Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-177861725",
            "id": 177861725,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-02-01T08:58:57Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177861725",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "I am very, very, **very** much against the `client.options` pattern. Ideally, I should be able to do\r\n\r\n```\r\nvar client = new Client();\r\ntcpConnect(client, { opts for tcpConnect });\r\nforgeHandshake(client, { opts for forgeHandshake });\r\nplay(client, { opts for play });\r\netc...\r\n```\r\n\r\nWhat plugin needs modifying the options ? I believe that if any plugin requires this, it should instead wrap the original plugin in some way.",
            "created_at": "2016-02-01T11:54:42Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-177935969",
            "id": 177935969,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-02-01T11:54:42Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177935969",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "Updated to data 0.19.1, removing need for git clone post-action\r\n\r\nPlugins currently modifying options:\r\n\r\n* autoVersion: sets options.wait_connect, used by setProtocol plugin\r\n* caseCorrect: sets accessToken and haveCredentials\r\n* tcp_dns: sets port and host to defaults if not set, and sets connect to callback\r\n* forgeHandshake: sets tagHost\r\n\r\nI suppose these 'options' could be moved onto the client object, since they're not really options but data passed between plugins (which can initially come from options, but only as a default). tagHost could use the system described in https://github.com/PrismarineJS/node-minecraft-protocol/issues/336#issuecomment-177942918",
            "created_at": "2016-02-01T17:52:01Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-178093831",
            "id": 178093831,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-02-01T17:52:01Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/178093831",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Alright I've restored the `options` parameters to each of the client plugin parameters. This gets us closer to separate independent options per plugin, but a few plugins still modify their options making them interdependent.",
            "created_at": "2016-02-02T05:18:57Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-178382335",
            "id": 178382335,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-02-02T05:18:57Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/178382335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Moved `wait_connect` from options to the client object, but moving all the other plugin-mutable options to client is a much bigger change, would prefer it as a separate PR (poses some non-obvious questions, e.g. how to handle the version parameter in the options vs the client object)",
            "created_at": "2016-02-02T05:44:26Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-178386269",
            "id": 178386269,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-02-02T05:44:26Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/178386269",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Ok good enough. We can track the remaining things to do here in https://github.com/PrismarineJS/node-minecraft-protocol/issues/338 and https://github.com/PrismarineJS/node-minecraft-protocol/issues/234",
            "created_at": "2016-02-02T08:04:18Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-178436389",
            "id": 178436389,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
            "updated_at": "2016-02-02T08:04:18Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/178436389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 19,
    "comments_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331/comments",
    "created_at": "2016-01-25T02:57:16Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-31T20:55:50Z",
            "event": "renamed",
            "id": 533317186,
            "rename": {
                "from": "[WIP] Add dynamic cross-protocol support",
                "to": "Add dynamic cross-protocol support"
            },
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/533317186"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": "ba89e24a568c20d184f49236082af98902e62d8e",
            "commit_url": "https://api.github.com/repos/deathcap/node-minecraft-protocols/commits/ba89e24a568c20d184f49236082af98902e62d8e",
            "created_at": "2016-02-01T04:56:19Z",
            "event": "referenced",
            "id": 533642829,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/533642829"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": "0ba187d97a0f8b164817f5ca9556223206541381",
            "commit_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/commits/0ba187d97a0f8b164817f5ca9556223206541381",
            "created_at": "2016-02-02T08:04:23Z",
            "event": "referenced",
            "id": 535445445,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/535445445"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": "0ba187d97a0f8b164817f5ca9556223206541381",
            "commit_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/commits/0ba187d97a0f8b164817f5ca9556223206541381",
            "created_at": "2016-02-02T08:04:23Z",
            "event": "merged",
            "id": 535445446,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/535445446"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-02-02T08:04:23Z",
            "event": "closed",
            "id": 535445447,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/535445447"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331/events",
    "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331",
    "id": 128449312,
    "labels": [],
    "labels_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 331,
    "pull_request": {
        "diff_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331.diff",
        "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331",
        "patch_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/331.patch",
        "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/pulls/331"
    },
    "repository_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol",
    "state": "closed",
    "title": "Add dynamic cross-protocol support",
    "updated_at": "2016-02-02T08:04:23Z",
    "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/331",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
        "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
        "followers_url": "https://api.github.com/users/deathcap/followers",
        "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
        "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/deathcap",
        "id": 5897956,
        "login": "deathcap",
        "organizations_url": "https://api.github.com/users/deathcap/orgs",
        "received_events_url": "https://api.github.com/users/deathcap/received_events",
        "repos_url": "https://api.github.com/users/deathcap/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/deathcap"
    }
}