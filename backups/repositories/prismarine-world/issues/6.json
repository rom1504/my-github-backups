{
    "assignee": null,
    "body": "My [first iteration](https://github.com/PrismarineJS/prismarine-world/blob/e2589ee9881b4f39e80ab26e5a8a649875fa6b59/src/world.js) on this was completely sync, that's because I had in mind the model of mineflayer, which has a completely in-memory world representation.\r\n\r\nNow it's fully async, because we'll need a world representation that won't be entirely loaded in memory and that can be generated/loaded at any point.\r\n\r\nWe need both representation : for mineflayer and for flying-squid. What would be nice is having a common API that users could use so they could switch from one representation to the other without too much problem.\r\n\r\nIt might even not be just 2 representations : there are probably many ways to represent the async one : which generation, which format for loading/saving, when to load/save,... It might be that several possibles representations would be interesting.\r\n\r\nHow should that common API be ? Is there any way to go around the sync/async seemingly different api ?\r\n\r\nAnyway, we'll probably need an other package to store the in-memory representation, and possibly a repo to store the definition of the common API. (see inspiration there https://github.com/mafintosh/abstract-chunk-store)",
    "closed_at": "2015-10-08T11:43:09Z",
    "comment_data": [
        {
            "body": "So a solution might simply be to have the in-memory store be async anyway. Just like https://github.com/mafintosh/memory-chunk-store/blob/master/index.js\r\n\r\nI guess prismarine-world is currently async and in-memory, so that's the in-memory thing.",
            "created_at": "2015-09-30T23:26:13Z",
            "html_url": "https://github.com/PrismarineJS/prismarine-world/issues/6#issuecomment-144572971",
            "id": 144572971,
            "issue_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/6",
            "updated_at": "2015-09-30T23:26:13Z",
            "url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/comments/144572971",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "It would make mineflayer bot.blockAt async, is it worth breaking everything depending on it ? (https://github.com/andrewrk/mineflayer/search?p=2&q=blockAt&utf8=%E2%9C%93)",
            "created_at": "2015-09-30T23:36:31Z",
            "html_url": "https://github.com/PrismarineJS/prismarine-world/issues/6#issuecomment-144574895",
            "id": 144574895,
            "issue_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/6",
            "updated_at": "2015-09-30T23:36:54Z",
            "url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/comments/144574895",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Hmm, I think I should just bring back the *Sync methods, and possibly make them fail if the blocks aren't loaded or something. Or just load/generate things sync.\r\n\r\nHaving it async it really not convenient. Is there any situation where we'd want to access block that are not loaded anyway ? The server will obviously have chunk around people loaded.",
            "created_at": "2015-10-01T18:47:26Z",
            "html_url": "https://github.com/PrismarineJS/prismarine-world/issues/6#issuecomment-144814203",
            "id": 144814203,
            "issue_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/6",
            "updated_at": "2015-10-01T18:47:26Z",
            "url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/comments/144814203",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Ok using the async thing in fs.\r\nI guess if we have to break mineflayer api to make things better, we'll live.",
            "created_at": "2015-10-01T22:51:41Z",
            "html_url": "https://github.com/PrismarineJS/prismarine-world/issues/6#issuecomment-144869764",
            "id": 144869764,
            "issue_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/6",
            "updated_at": "2015-10-01T22:51:41Z",
            "url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/comments/144869764",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "http://wiki.minetest.net/Database_backends : actually seems like a good idea to make a redis backend. (or anyway sqlite)",
            "created_at": "2015-10-03T16:01:10Z",
            "html_url": "https://github.com/PrismarineJS/prismarine-world/issues/6#issuecomment-145260908",
            "id": 145260908,
            "issue_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/6",
            "updated_at": "2015-10-03T16:03:35Z",
            "url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/comments/145260908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Conclusions : \r\n1. the api will be async for all implementations to make thing simpler and because it is required for some implementations (using a database for example)\r\n2. we can implement some prismarine-world-redis using the same api whenever needed, prismarine-world repo will try to implement some reasonable default implementation",
            "created_at": "2015-10-08T11:43:09Z",
            "html_url": "https://github.com/PrismarineJS/prismarine-world/issues/6#issuecomment-146511756",
            "id": 146511756,
            "issue_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/6",
            "updated_at": "2015-10-08T11:43:09Z",
            "url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/comments/146511756",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/6/comments",
    "created_at": "2015-09-30T22:26:50Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-10-08T11:43:09Z",
            "event": "closed",
            "id": 430201644,
            "url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/events/430201644"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/6/events",
    "html_url": "https://github.com/PrismarineJS/prismarine-world/issues/6",
    "id": 109193178,
    "labels": [],
    "labels_url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/6/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 6,
    "repository_url": "https://api.github.com/repos/PrismarineJS/prismarine-world",
    "state": "closed",
    "title": "In-memory world, abstract storage and sync/async",
    "updated_at": "2015-10-08T11:43:09Z",
    "url": "https://api.github.com/repos/PrismarineJS/prismarine-world/issues/6",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
        "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
        "followers_url": "https://api.github.com/users/rom1504/followers",
        "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
        "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rom1504",
        "id": 2346494,
        "login": "rom1504",
        "organizations_url": "https://api.github.com/users/rom1504/orgs",
        "received_events_url": "https://api.github.com/users/rom1504/received_events",
        "repos_url": "https://api.github.com/users/rom1504/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rom1504"
    }
}