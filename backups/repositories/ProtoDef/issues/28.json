{
    "assignee": null,
    "body": "It can be easily predicted what value will typeargs take, so it should be possible to build reader/writer/sizer object which will be dedicated to read/write/size a specific type.\r\n\r\nThat might make things faster (it would take a little bit more ram but that doesn't matter)\r\n\r\nRelated: creating object is very slow.",
    "closed_at": null,
    "comment_data": [
        {
            "body": "This is for when we'll want to improve the perf, maybe not now. (When it gets a problem)\r\n\r\nEdit: this is basically about having an \"initialize\" function for every datatype, and then using the initialized stuff in reader, writer and size",
            "created_at": "2015-11-06T14:34:25Z",
            "html_url": "https://github.com/roblabla/ProtoDef/issues/28#issuecomment-154424310",
            "id": 154424310,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/28",
            "updated_at": "2015-11-06T14:35:48Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/154424310",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "In my recent profiling work (for async reading), I found that (as I expected) a lot of time is spent for parsing the json of the typeargs (in extendType)\r\nThere has to be a better way to build/clone these typeArgs.\r\n\r\nBuilding it only one time like proposed here would definitely work.\r\n\r\n(edit: and seeing how much faster bluebird is makes me think that yes it is possible to optimize stuff in js)",
            "created_at": "2015-12-03T16:50:07Z",
            "html_url": "https://github.com/roblabla/ProtoDef/issues/28#issuecomment-161712281",
            "id": 161712281,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/28",
            "updated_at": "2015-12-03T16:50:42Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161712281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/28/comments",
    "created_at": "2015-11-06T14:06:26Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/28/events",
    "html_url": "https://github.com/roblabla/ProtoDef/issues/28",
    "id": 115510836,
    "labels": [],
    "labels_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/28/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 28,
    "state": "open",
    "title": "Initializing types to avoid passing typeargs everywhere",
    "updated_at": "2015-12-03T16:50:42Z",
    "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/28",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
        "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
        "followers_url": "https://api.github.com/users/rom1504/followers",
        "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
        "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rom1504",
        "id": 2346494,
        "login": "rom1504",
        "organizations_url": "https://api.github.com/users/rom1504/orgs",
        "received_events_url": "https://api.github.com/users/rom1504/received_events",
        "repos_url": "https://api.github.com/users/rom1504/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rom1504"
    }
}