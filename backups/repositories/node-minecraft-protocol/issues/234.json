{
    "assignee": null,
    "body": "There are 2 kinds of cross version support:\r\n* static : for one instance of a program using nmp, only one version is supported\r\n* dynamic : for one instance of a program using nmp, several versions are supported\r\n\r\nCurrently we almost got static support (see #212 about that).\r\n\r\nYou'd think dynamic support would be much harder but actually all it would be about is getting the protocol information from the server/client you are connecting to, and using the correct protocol.json to parse and serialize the packets for that server/client.\r\n\r\nOf course, that wouldn't solve the multi-version support for users of nmp which would still have to deal with the packets difference between version, one way to deal with that might be #231 \r\n\r\nDynamic support  would allow createClient and createServer to work for both 1.8 and 1.9 without   change to the api, nmp would just need to expose the version of the server/client  it connected to.\r\n\r\nThis idea might be extendable to multi-platform support (with mcpe) but that would be a bit harder (the protocol architecture of mcpe is different from mcpc)\r\n\r\nRelated with #65 ",
    "closed_at": null,
    "comment_data": [
        {
            "body": "About dynamic support:\r\nIt would be better to add a versions:[\"1.8\", \"1.9\"] option to createClient so that the bot will only connect to versions supported by the nmp user.\r\n\r\nAnd the default versions might be just [\"1.8\"] in nmp 0.15.0 . In 0.16.0 it might become [\"1.9\"] and the nmp user would anyway would have to manually update to 0.16.0 so we wouldn't \"pull the rug under the user's feets\".\r\n\r\nOr we could just say that \"versions\" is not optional.\r\n\r\nDynamic just mean multiple versions support at the same time, we don't force the user to support everything if he doesn't care to.\r\n\r\n(the same thing goes for createServer)",
            "created_at": "2015-09-13T11:14:22Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/234#issuecomment-139860950",
            "id": 139860950,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234",
            "updated_at": "2015-09-13T11:15:23Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/139860950",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "We need to be able to convert the protocolVersion (https://github.com/PrismarineJS/node-minecraft-protocol/blob/master/src/createServer.js#L143) (=version.version) to the corresponding majorVersion/mcDataVersion. node-minecraft-data should be able to do that in https://github.com/PrismarineJS/node-minecraft-data/blob/master/index.js#L18 (just check if one of the mcData submodule is that version)\r\n\r\nThen we basically just need to do `require('minecraft-data')` when we know the version. To have cross version support dynamically I think we'd need to assume the other states than play are the same cross version (is this true ?) in order to go far enough for the client/server to give us the version he wants.\r\n\r\nthe other states than play are the same between 1.8 and 1.9, so that would work. 1.7 would be something else though (among other problems related to 1.7)",
            "created_at": "2015-09-14T23:54:07Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/234#issuecomment-140235644",
            "id": 140235644,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234",
            "updated_at": "2015-09-14T23:58:01Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/140235644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "@rom1504 it would work for anything >= 1.7. For < 1.6, there would only be one state (LEGACY, or whatever we end up calling it). I think we should keep the require('minecraft-data')('version'). It's easier and more flexible. ",
            "created_at": "2015-09-15T00:09:40Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/234#issuecomment-140237793",
            "id": 140237793,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234",
            "updated_at": "2015-09-15T00:09:40Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/140237793",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "Ah yeah sure, I forgot the version. I meant putting require ('minecraft-data')(protocolVersion) when the client (or server) sends us the protocol version",
            "created_at": "2015-09-15T09:20:52Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/234#issuecomment-140334595",
            "id": 140334595,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234",
            "updated_at": "2015-09-15T09:20:52Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/140334595",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Places that should use a dynamically stored version : \r\n\r\n| file | places | method |\r\n| --- | --- | --- |\r\n| createServer.js | [ping](https://github.com/PrismarineJS/node-minecraft-protocol/blob/4a1b2bf052958dcb579a52707b80c882b3d478eb/src/createServer.js#L90) and [set_protocol](https://github.com/PrismarineJS/node-minecraft-protocol/blob/4a1b2bf052958dcb579a52707b80c882b3d478eb/src/createServer.js#L143) | store the version the client is sending us in the client object so the correct protocol packets can be used for that client, use that version for the ping |\r\n| ping.js | [set_protocol](https://github.com/PrismarineJS/node-minecraft-protocol/blob/4a1b2bf052958dcb579a52707b80c882b3d478eb/src/ping.js#L35) | used the version stored for that client, or a default version (1.8 for example) |\r\n| createClient.js | [set_protocol](https://github.com/PrismarineJS/node-minecraft-protocol/blob/4a1b2bf052958dcb579a52707b80c882b3d478eb/src/createClient.js#L79) | store the version the server is using it, to the correct protocol packets can be used |\r\n| client.js | [packets loading](https://github.com/PrismarineJS/node-minecraft-protocol/blob/e3b435af1b4a3fad192d9534fca2cac466c520eb/src/client.js#L11) | preload a default protocol packets version, then when we know the correct version change it (the change can be done in a function that will be called by createServer.js or createClient.js) | \r\n| serializer.js | [packets loading](https://github.com/PrismarineJS/node-minecraft-protocol/blob/74e4d415fbd8299eb27cf5e970aac35e8a11f52a/src/transforms/serializer.js#L50) | same thing than in client.js | \r\n| test.js | [version checking](https://github.com/PrismarineJS/node-minecraft-protocol/blob/a2abb70fc7427a34cfed511555e0244fc42e8ef8/test/test.js#L455) | execute the test for each supported version (see #240)\r\n| circle-ci | [server download](https://github.com/PrismarineJS/node-minecraft-protocol/blob/a2abb70fc7427a34cfed511555e0244fc42e8ef8/circle.yml#L11) | same than test.js |\r\n| index.js | [packets exposing](https://github.com/PrismarineJS/node-minecraft-protocol/blob/e3b435af1b4a3fad192d9534fca2cac466c520eb/src/index.js#L7) | expose all the versions or nothing |\r\n| browser.js | [packets exposing](https://github.com/PrismarineJS/node-minecraft-protocol/blob/e3b435af1b4a3fad192d9534fca2cac466c520eb/src/browser.js#L2) | same than index.js |\r\n\r\ncreateClient and createServer should also have a new option \"versions\" to prevent client connecting to a server with a version the user doesn't want to support, and client connecting to a server version the user doesn't want to support. That \"versions\" info should be used in createClient.js and createServer.js to restrict the supported versions (a bit like #213 )",
            "created_at": "2015-09-16T13:53:31Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/234#issuecomment-140748574",
            "id": 140748574,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234",
            "updated_at": "2015-09-16T14:20:06Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/140748574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "I think I'll start by implementing static cross version (the API proposed in #65) before dynamic, it's easier.",
            "created_at": "2015-09-24T11:21:58Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/234#issuecomment-142901110",
            "id": 142901110,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234",
            "updated_at": "2015-09-24T11:21:58Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/142901110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Once #257 is merged, adding dynamic cross version will mainly be about changing the serializer and deserializer dynamically in client.js when we know the version we want.",
            "created_at": "2015-09-29T22:24:26Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/234#issuecomment-144208265",
            "id": 144208265,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234",
            "updated_at": "2015-09-29T22:24:26Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/144208265",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "hmm hmm, so it seems the server never send the version to the client, so it doesn't seem possible to implement dynamic cross version for the client.\r\nAh actually, the client can ask the server its version with the ping packet, and get it back with the pong packet http://wiki.vg/Protocol#Pong\r\nSo it is possible to do that to figure out the version.",
            "created_at": "2015-10-01T13:25:06Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/234#issuecomment-144725318",
            "id": 144725318,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234",
            "updated_at": "2015-10-01T13:28:10Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/144725318",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Once dynamic cross version is implemented, I think a good API for createClient and createServer would be:\r\n\r\n* no version option is provided : default to enabledVersions = [defaultVersion]\r\n* version:\"1.9\" : enabledVersions = [\"1.9\"]\r\n* version:[\"1.8\",\"1.9\"] : enabledVersions = [\"1.8\",\"1.9\"]\r\n* version:\"any\" : enabledVersions = supportedVersions\r\n\r\nThen NMP would refuse to connect to any version not in enabledVersions.\r\n\r\nThat way:\r\n\r\n* we don't break users than don't specify the version (it won't automatically connect to 1.9 while their code only handle 1.8 either)\r\n* we let people that want to handle any versions \"at the same time\" do it. It might be useful for users that don't rely too much on the specific packets fields, for example a simple proxy. (and for people that have a compatibility layer like I want to do in #231 )",
            "created_at": "2015-10-01T13:36:14Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/234#issuecomment-144727681",
            "id": 144727681,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234",
            "updated_at": "2015-10-01T13:39:48Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/144727681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234/comments",
    "created_at": "2015-09-12T23:06:10Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-09-15T00:09:40Z",
            "event": "mentioned",
            "id": 409267738,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/409267738"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-09-15T00:09:40Z",
            "event": "subscribed",
            "id": 409267739,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/409267739"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": "285e70fe29bc047f2c3245dc0a2654f1447f6fdb",
            "commit_url": "https://api.github.com/repos/rom1504/node-minecraft-protocol/commits/285e70fe29bc047f2c3245dc0a2654f1447f6fdb",
            "created_at": "2015-09-29T20:41:46Z",
            "event": "referenced",
            "id": 422364938,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/422364938"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": "917b6adda176f81baecdb29980d11a3d35fccb7c",
            "commit_url": "https://api.github.com/repos/rom1504/node-minecraft-protocol/commits/917b6adda176f81baecdb29980d11a3d35fccb7c",
            "created_at": "2015-09-29T20:44:48Z",
            "event": "referenced",
            "id": 422367808,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/422367808"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234/events",
    "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/234",
    "id": 106189754,
    "labels": [],
    "labels_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 234,
    "state": "open",
    "title": "Cross version",
    "updated_at": "2015-10-01T13:39:48Z",
    "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/234",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
        "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
        "followers_url": "https://api.github.com/users/rom1504/followers",
        "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
        "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rom1504",
        "id": 2346494,
        "login": "rom1504",
        "organizations_url": "https://api.github.com/users/rom1504/orgs",
        "received_events_url": "https://api.github.com/users/rom1504/received_events",
        "repos_url": "https://api.github.com/users/rom1504/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rom1504"
    }
}