{
    "assignee": null,
    "body": "## prismarine-sever:\r\n Core Package - Manages loading of other modules, connections to clients and server<->client messages.  Messages will be routed to servers based on modules registering their commands with this Core Package Module.\r\n\r\n## prismarine-server-cli:\r\n  Command Line Interface for installing new mod-packs as well as other useful tools.\r\n  commands:\r\n- ppm install <pack name>\r\n- ppm remove <pack name>\r\n- ppm list\r\n- prismarine configure\r\n- prismarine create\r\n- prismarine start ?--port 12345\r\n\r\n## prismarine-server-cli-admin:\r\n CLI add-on for Low Graphics admin system for server.  Shows Player List, Ram usage, CPU usage, loaded worlds, RCon, and other useful things.  Could include https://github.com/chjj/blessed as project base.\r\n- prismarine start ?--no-admin\r\n- prismarine start ?--no-color\r\n\r\n## prismarine-server-pacemaker\r\n Core Package - This will manage the ticks of the server.\r\n\r\n## prismarine-server-world\r\n Boilerplate for creating new worlds.  Should hold information about the world such as blocks, entities, and liquids.\r\n\r\n## prismarine-server-world-overworld\r\n Core Package - Default overworld module.  CREEPER!!! \r\n\r\n## prismarine-server-world-nether\r\n Default Nether module.  Man its hot in here.\r\n\r\n## prismarine-server-world-end\r\n Default end module. Think EnderMan\r\n\r\n## prismarine-server-world-heaven\r\n Default anti-nether module.  This should be a realm where you are considered an intruder and will be attacked by \"angels\" and \"spirits\".  Blocks here should be bright, and monotone-ish.  The void should be below and you should have the fear of falling into it if knocked off a \"platform\".  You can get to \"heaven\" by building a stairs ( 3 tall ) with a portal ( the gate ) above y = 100.  This Portal should be made of materials that are easily retrieved, but have a requirements path to mine ( obsidian requires diamond pick-axe).\r\n\r\n## prismarine-server-worldgen\r\n Core Package - Checks for loaded world packs and generates blocks in their world files.\r\n\r\n## prismarine-server-block\r\n Core Package - Manages how blocks that are registered with it interact with each other.  Manages if a block's state.\r\n\r\n## prismarine-server-entities\r\n Core Package - Manages spawning and tracking of entities.  Manages pathing of entities (mods and friendly npc's).  The entities that are spawned are respective to the world that the player is in.\r\n\r\n## prismarine-server-physics\r\n Core Package - Manages ",
    "closed_at": null,
    "comment_data": [
        {
            "body": "Please leave comments and we can discuss, this is a living document.  As we discuss, things can be added/removed.",
            "created_at": "2015-02-26T00:19:47Z",
            "html_url": "https://github.com/PrismarineJS/prismarine-server/issues/14#issuecomment-76094098",
            "id": 76094098,
            "issue_url": "https://api.github.com/repos/PrismarineJS/prismarine-server/issues/14",
            "updated_at": "2015-02-26T00:19:47Z",
            "url": "https://api.github.com/repos/PrismarineJS/prismarine-server/issues/comments/76094098",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1077050?v=3",
                "events_url": "https://api.github.com/users/dcbartlett/events{/privacy}",
                "followers_url": "https://api.github.com/users/dcbartlett/followers",
                "following_url": "https://api.github.com/users/dcbartlett/following{/other_user}",
                "gists_url": "https://api.github.com/users/dcbartlett/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dcbartlett",
                "id": 1077050,
                "login": "dcbartlett",
                "organizations_url": "https://api.github.com/users/dcbartlett/orgs",
                "received_events_url": "https://api.github.com/users/dcbartlett/received_events",
                "repos_url": "https://api.github.com/users/dcbartlett/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dcbartlett/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dcbartlett/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dcbartlett"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PrismarineJS/prismarine-server/issues/14/comments",
    "created_at": "2015-02-25T07:45:39Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/PrismarineJS/prismarine-server/issues/14/events",
    "html_url": "https://github.com/PrismarineJS/prismarine-server/issues/14",
    "id": 58862679,
    "labels": [],
    "labels_url": "https://api.github.com/repos/PrismarineJS/prismarine-server/issues/14/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 14,
    "repository_url": "https://api.github.com/repos/PrismarineJS/prismarine-server",
    "state": "open",
    "title": "Proposed Modules: Open for additions",
    "updated_at": "2015-02-26T02:17:19Z",
    "url": "https://api.github.com/repos/PrismarineJS/prismarine-server/issues/14",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1077050?v=3",
        "events_url": "https://api.github.com/users/dcbartlett/events{/privacy}",
        "followers_url": "https://api.github.com/users/dcbartlett/followers",
        "following_url": "https://api.github.com/users/dcbartlett/following{/other_user}",
        "gists_url": "https://api.github.com/users/dcbartlett/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dcbartlett",
        "id": 1077050,
        "login": "dcbartlett",
        "organizations_url": "https://api.github.com/users/dcbartlett/orgs",
        "received_events_url": "https://api.github.com/users/dcbartlett/received_events",
        "repos_url": "https://api.github.com/users/dcbartlett/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dcbartlett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dcbartlett/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dcbartlett"
    }
}