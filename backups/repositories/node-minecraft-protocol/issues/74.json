{
    "assignee": null,
    "body": "WIP, still have to fix the test cases, and I don't like how some things currently are. \r\n\r\n### The Issue:\r\n\r\nWe have a plethora of array types (byteArray16, byteArray8, slotArray) and container types (intVector, byteVector, mapChunkBulk), with only more getting added after each update, that make the protocol.js harder to read, understand and maintain. \r\n\r\nAlso, the protocol is kinda messy. This PR puts the read, write and sizeof of the same type together. \r\n\r\n### Justification for this PR:\r\n\r\nThis creates three simple, convenient types (array, buffer, container) that replaces the current array and container types thanks to a simple, extensible system.\r\n\r\n### PR Breakdown\r\n\r\n*   Array : arrays have a \"count\" field, a string that points to another field in the packet. This field represents the array's length. They also have a \"arrayType\" field, which tells us what type the array's contents are. arrayType must be a valid type from the \"types\" object. Example : \r\n\r\n```javascript\r\n\"toClient/0x30\": [\r\n  { name: \"windowId\", type: \"ubyte\" },\r\n  { name: \"count\", type: \"short\" },\r\n  { name: \"items\", type: \"array\", arrayType: \"slot\", count: \"count\" }\r\n]\r\n```\r\n\r\n* Buffer : buffers acts exactly like array, except they don't have an \"arrayType\". They read/write nodejs buffers. Example : \r\n\r\n```javascript\r\n\"serverBound/0x01\": [\r\n  { name: \"countSharedSecret\", type: \"short\" },\r\n  { name: \"sharedSecret\", type: \"buffer\", count: \"countSharedSecret\" },\r\n  { name: \"countVerifyToken\", type: \"short\" },\r\n  { name: \"verifyToken\", type: \"buffer\", count: \"countVerifyToken\" }\r\n]\r\n```\r\n\r\n* Container : Container have a \"contents\" field, representing the contents of the container in the same format as a packet.\r\n\r\n```javascript\r\n0x20: [\r\n  { name: \"entityId\", type: \"int\" },\r\n  { name: \"count\", type: \"int\" },\r\n  { name: \"properties\", type: \"array\", arrayType: \"container\", count: \"count\", contents: [\r\n    { name: \"key\", type: \"string\" },\r\n    { name: \"value\", type: \"double\" },\r\n    { name: \"listLength\", type: \"short\" },\r\n    { name: \"modifiers\", type: \"array\", arrayType: \"container\", count: \"listLength\", contents: [\r\n      { name: \"uuid\", type: \"UUID\" },\r\n      { name: \"amount\", type: \"double\" },\r\n      { name: \"operation\", type: \"byte\" },\r\n    ]}\r\n  ]}\r\n],\r\n```\r\n\r\n### Caveats: \r\nRight now, count field has to be a variable within the same \"container\" as the array it represents.\r\n\r\n### Notes : \r\nHaving a nodejs script that'd generate a documentation of the packets out of the protocol.js would be cool. Right now I think the biggest caveat with node-minecraft-protocol is having to check the protocol.js to find out the fields name for the packet. Having a single html page, following more-or-less the same \"layout\" as http://wiki.vg/Protocol , but without own field names, would speed up looking up those fields.",
    "closed_at": "2014-03-16T15:58:18Z",
    "comment_data": [
        {
            "body": "In another quest to further simplify code, \r\n\r\n```javascript\r\n  var lengthField = readVarInt(buffer, 0);\r\n  if (!!!lengthField) return null;\r\n  var length = lengthField.value;\r\n  cursor += lengthField.size;\r\n```\r\n\r\nFour lines just to get one field ? Having two already sounds like more than enough. Why not pass the cursor around as a \"global variable\" of sorts ? E.G. : \r\n\r\n```javascript\r\n// somewhere before in code\r\nvar cursor = {pos: 0};\r\n\r\n// then\r\nvar lengthField = readVarInt(buffer, cursor);\r\nif (!!!lengthField) return null;\r\n```\r\n\r\nAnd then just doing cursor.pos += whatever when we need to update the cursor ? I mean that would litterally cut down code in half :|",
            "created_at": "2014-01-15T21:33:56Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/74#issuecomment-32417483",
            "id": 32417483,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/74",
            "updated_at": "2014-01-15T21:34:21Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/32417483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "Closing down, I have found a much, MUCH better way to do this, but it's currently not ready. This will come after the packet name switch. ",
            "created_at": "2014-03-16T15:58:18Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/74#issuecomment-37760805",
            "id": 37760805,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/74",
            "updated_at": "2014-03-16T15:58:18Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/37760805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/74/comments",
    "created_at": "2014-01-12T21:15:06Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2014-03-16T15:58:18Z",
            "event": "closed",
            "id": 102400699,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/102400699"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/74/events",
    "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/74",
    "id": 25470008,
    "labels": [],
    "labels_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/74/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 74,
    "pull_request": {
        "diff_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/74.diff",
        "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/74",
        "patch_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/74.patch",
        "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/pulls/74"
    },
    "repository_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol",
    "state": "closed",
    "title": "[WIP] Array and Container type, general protocol.js cleanup",
    "updated_at": "2014-03-16T15:58:18Z",
    "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/74",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
        "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
        "followers_url": "https://api.github.com/users/roblabla/followers",
        "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
        "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/roblabla",
        "id": 1069318,
        "login": "roblabla",
        "organizations_url": "https://api.github.com/users/roblabla/orgs",
        "received_events_url": "https://api.github.com/users/roblabla/received_events",
        "repos_url": "https://api.github.com/users/roblabla/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/roblabla"
    }
}