{
    "assignee": null,
    "body": "How hard would it be to use a websocket connection instead of tcp in the server ? (and both ?)\r\n\r\nThat would allow anybody to connect through a web browser to connect to flying-squid using https://github.com/voxel/voxel-clientmc\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "body": "relevant https://github.com/deathcap/wsmc",
            "created_at": "2016-01-07T18:07:58Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-169759170",
            "id": 169759170,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-07T18:07:58Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/169759170",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2612164?v=3",
                "events_url": "https://api.github.com/users/Gjum/events{/privacy}",
                "followers_url": "https://api.github.com/users/Gjum/followers",
                "following_url": "https://api.github.com/users/Gjum/following{/other_user}",
                "gists_url": "https://api.github.com/users/Gjum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Gjum",
                "id": 2612164,
                "login": "Gjum",
                "organizations_url": "https://api.github.com/users/Gjum/orgs",
                "received_events_url": "https://api.github.com/users/Gjum/received_events",
                "repos_url": "https://api.github.com/users/Gjum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Gjum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Gjum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Gjum"
            }
        },
        {
            "body": "Yeah sure I know about wsmc, but it would be cool to have native support for that in nmp.",
            "created_at": "2016-01-07T18:12:13Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-169760156",
            "id": 169760156,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-07T18:12:13Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/169760156",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": ":+1: for native ws in nmp. Currently wsmc is [broken](https://github.com/deathcap/wsmc/issues/19), I think the relevant bits could be easier to maintain in sync with this repository if they were a part of it.",
            "created_at": "2016-01-09T05:53:07Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-170200351",
            "id": 170200351,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-09T05:53:07Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/170200351",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Or maybe, refactor node-minecraft-protocol to operate on node.js [streams](https://nodejs.org/api/stream.html#stream_stream) instead of TCP sockets? References:\r\n\r\nTCP: https://github.com/PrismarineJS/node-minecraft-protocol/blob/master/src/createClient.js\r\nStream: https://github.com/deathcap/wsmc/blob/master/minecraft-protocol-stream.js\r\n\r\nSince streams are an abstract interface, using them with websockets is as simple as piping to [websocket-stream](https://www.npmjs.com/package/websocket-stream). Although some options may still be needed to control various other tweaks (e.g. for websockets you likely want to disable MC protocol encryption, since it is slow in JavaScript and wss:// URLs (analogous to https://) can be used instead for encryption). Useful handbook on streams:\r\n\r\nhttps://github.com/substack/stream-handbook\r\n\r\n\r\nedit: also, for web sockets you probably don't want Minecraft's packet framing, since the ws protocol https://html.spec.whatwg.org/multipage/comms.html#server-sent-events-intro already has its own framing",
            "created_at": "2016-01-09T06:06:24Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-170200699",
            "id": 170200699,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-09T06:54:22Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/170200699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "NPm already operates on streams. All you have to do is call setConnection\nwith your stream?\n\nOn Sat, Jan 9, 2016, 7:06 AM deathcap <notifications@github.com> wrote:\n\n> Or maybe, refactor node-minecraft-protocol to operate on node.js streams\n> <https://nodejs.org/api/stream.html#stream_stream> instead of TCP\n> sockets? References:\n>\n> TCP:\n> https://github.com/PrismarineJS/node-minecraft-protocol/blob/master/src/createClient.js\n> Stream:\n> https://github.com/deathcap/wsmc/blob/master/minecraft-protocol-stream.js\n>\n> Since streams are an abstract interface, using them with websockets is as\n> simple as piping to websocket-stream\n> <https://www.npmjs.com/package/websocket-stream>. Although some options\n> may still be needed to control various other tweaks (e.g. for websockets\n> you likely want to disable MC protocol encryption, since it is slow in\n> JavaScript and wss:// URLs (analogous to https://) can be used instead\n> for encryption).\n>\n> https://github.com/substack/stream-handbook\n>\n> â€”\n> Reply to this email directly or view it on GitHub\n> <https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-170200699>\n> .\n>\n",
            "created_at": "2016-01-09T13:43:02Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-170240694",
            "id": 170240694,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-09T13:43:02Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/170240694",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "But the `createClient()` API [accepts](https://github.com/PrismarineJS/node-minecraft-protocol/blob/master/src/createClient.js#L32) `host` and `port` options, which it passes to `net.connect()` to get a stream for `setSocket()` â€”Â I'd like to [pass](https://github.com/deathcap/wsmc/blob/2a4416adcd39a2403a3a73cf1adc947ec1aaa5e8/minecraft-protocol-stream.js#L33) createClient a stream directly. ",
            "created_at": "2016-01-12T05:39:29Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-170801329",
            "id": 170801329,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-12T05:39:29Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/170801329",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Being able to pass a stream would be useful for https://github.com/PrismarineJS/node-minecraft-protocol/issues/185 too.",
            "created_at": "2016-01-12T10:51:40Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-170874368",
            "id": 170874368,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-12T10:51:40Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/170874368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Actually, one of the point of the old modularization work (https://github.com/PrismarineJS/node-minecraft-protocol/pull/210) was to help mitigate this. You'd use the raw Client API and then attach the modulese to it, so you could pass whatever stream you want to Client. I never finished that PR, but the idea's there.",
            "created_at": "2016-01-12T12:21:07Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-170895080",
            "id": 170895080,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-12T12:21:07Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/170895080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "It's a good idea, the changes in modularizing NMP I think would be useful for websocket support:\r\n\r\n* [ ] Protocol stream access: allow connecting NMP directly to a `Stream`, which could be either a TCP socket or WS socket or something else, **update: like in voxel-clientmc, I use a [duplexer](https://www.npmjs.com/package/duplexer) stream and connect NMP to a webworker, instead of a websocket directly**  (currently I have my own createClient taking a `stream` option, calls `client.setSocket(stream)`)\r\n* [ ] Handshaking: allow skipping the `HANDSHAKING` phase, not necessary/feasible for WS â€”Â this also disables packet encryption, can use WSS (â‰ˆ HTTPS) instead (currently I set `client.state = states.LOGIN` upon receiving the `connect` event)\r\n* [ ] Framing: allow disabling MC packet framing (length prepending), as WS has its own, and multiple writes cause packet fragmentation with WS unlike TCP with Nagle's algorithm https://github.com/PrismarineJS/node-minecraft-protocol/pull/316 (currently I set `client.framer` to an empty transform stream)\r\n* [ ] Compression: allow disabling compression, since there is a websocket extension with per-frame compression (currently I'm not using this, very new only standardized last month, but would like to https://github.com/deathcap/wsmc/issues/23)\r\n\r\nIf NMP is sufficiently modularized, it should be possible to build all of the above from modular components, taking only what is needed from this module.\r\n\r\n---\r\n\r\nThere's also the question of where websocket support should live exactly, e.g. should node-minecraft-protocol have websocket-stream as a dependency? On one hand, there is an argument for keeping NMP small and minimal, allowing other modules to build on top of it. On the other hand, having built-in WS support could greatly help ease WS/MC adoption - meaning that, for example, someone writing a client/server/proxy with NMP could trivially interoperate with WS client/server/proxies.\r\n\r\nhttps://github.com/feross/webtorrent faces a similar problem: they have implemented bittorrent in the browser, but cannot interoperate with peers only supporting the original native TCP/UDP BT protocol. So they are advocating other bittorrent software (even native apps) adopt browser support so they can talk to each other (WebRTC in their case, but it is analogous to WebSockets in this project).",
            "created_at": "2016-01-17T21:58:31Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-172387533",
            "id": 172387533,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-18T02:13:52Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/172387533",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Prototyping sort of what I had in mind in: https://github.com/PrismarineJS/node-minecraft-protocol/pull/320 Client stream - factoring out the common code (keep alive, login state change, compression request), which both WS and TCP sockets can use. ",
            "created_at": "2016-01-18T21:32:52Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-172659928",
            "id": 172659928,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-18T21:32:52Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/172659928",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "BTW, it's worth noting that we disable Nagle's algorithm. So we actually send two TCP frames, one with the ID alone, one with the content. I consciously chose this on-the-wire overhead over recreating a buffer for the sole purpose of doing only a single, clean write.\r\n\r\nThat being said, with WS being message-based, (vs stream-based), having a framer makes absolutely no sense there ^^.",
            "created_at": "2016-01-18T21:36:40Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-172660685",
            "id": 172660685,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-18T21:36:40Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/172660685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "Oh and concerning websocket support directly IN NMP, I think it would be great if NMP worked easily with WS, but I'm a bit iffy with having it completely built-in. That is to say : patches to make websocket usage work better are great, but having a dependency on websocket is meh.\r\n\r\nWhat would totally make sense, however, is having a server implementation based on NMP (E.G. : Flying-Squid) support WS natively (for instance, by running two instances of NMP, one with a websocket server stream, one with the usual tcp server stream, and synching the two).",
            "created_at": "2016-01-18T21:40:29Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-172661429",
            "id": 172661429,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-18T21:40:29Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/172661429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "For the multiple writes wrt Nagle, I think that's worth discussing further, in https://github.com/PrismarineJS/node-minecraft-protocol/pull/316\r\n\r\nNot having a direct dependency on websocket-stream in NMP, looking into this some more, I agree. The most generic API that NMP could expose is a plain Node.js `Stream`, which is compatible with websocket-stream, duplexer, websocket-stream, etc. (I use all these for various purposes, so a built-in ws stream would only be marginally useful). I first passed this in through `options.stream`, but @rom1504 has a point, callers can just use `client.setSocket()` - updated https://github.com/PrismarineJS/node-minecraft-protocol/pull/320 accordingly. \r\n\r\n#320 factors out all of the TCP-specific stuff into a separate file (DNS SRV lookup, net.connect, encryption/authentication/yggdrasil), this way WS clients (or other non-TCP clients â€” WebRTC P2P?) can use NMP without this baggage.\r\n\r\nThe remaining problem is disabling framing â€”Â cleanly â€”, #320 has a hack by setting the framer to an empty stream, not sure of the best way to do this. ",
            "created_at": "2016-01-18T22:10:01Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-172667623",
            "id": 172667623,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-18T22:10:01Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/172667623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "To fix that problem, we really, really need the pipeline module outlined in #176 ",
            "created_at": "2016-01-19T00:33:37Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312#issuecomment-172692285",
            "id": 172692285,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
            "updated_at": "2016-01-19T00:33:37Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/172692285",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312/comments",
    "created_at": "2016-01-06T13:51:14Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-18T22:10:01Z",
            "event": "mentioned",
            "id": 518428480,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/518428480"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-18T22:10:01Z",
            "event": "subscribed",
            "id": 518428481,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/518428481"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312/events",
    "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/issues/312",
    "id": 125179920,
    "labels": [],
    "labels_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 312,
    "state": "open",
    "title": "WebSocket support",
    "updated_at": "2016-01-19T00:33:37Z",
    "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/312",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
        "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
        "followers_url": "https://api.github.com/users/rom1504/followers",
        "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
        "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rom1504",
        "id": 2346494,
        "login": "rom1504",
        "organizations_url": "https://api.github.com/users/rom1504/orgs",
        "received_events_url": "https://api.github.com/users/rom1504/received_events",
        "repos_url": "https://api.github.com/users/rom1504/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rom1504"
    }
}