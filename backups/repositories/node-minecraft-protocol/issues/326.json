{
    "assignee": null,
    "body": "Add client-side https://github.com/PrismarineJS/node-minecraft-protocol/issues/114 Forge Support\r\n\r\n* [x] Send tagged hostname in set_protocol packet\r\n* [x] Receive server channel registrations (FML|HS, FML, FML|MP, FML, FORGE)\r\n* [x] Handle the FML|HS ServerHello with the player's dimension\r\n* [x] Register client plugin channels (FML|HS, FML, FML|MP, FML, FORGE)\r\n* [x] Send the FML|HS ClientHello\r\n* [x] Send client modList\r\n* [x] Receive server modList\r\n* [x] Check client/server mod compatibility - emits `forgeMods` event for app to check\r\n* [x] Send HandshakeAck\r\n* [x] Receive RegistryData packet(s) until hasMore=false\r\n* [x] Send/receive final HandshakeAcks and CompleteHandshake\r\n* [x] Refactor discriminator byte / 'FMLIndexedMessageToMessageCodec' to use a mapper\r\n* [x] Refactor discriminator byte / 'FMLIndexedMessageToMessageCodec' parsing to use one big switch\r\n* [x] Move FML|HS handshake to src/fml.js, support and document forge/forgeMods opts, event\r\n* [x] Refactor into separate module?\r\n* [x] Update for https://github.com/PrismarineJS/node-minecraft-protocol/pull/333 Modularization attempt of createClient()\r\n* [x] Move tagHost=\\0FML\\0 to be installed by src/client/forgeHandshake.js, not the client example\r\n\r\nNot included, out of scope for this PR:\r\n* Fully parse the RegistryData packets and emit registry events - would be nice but only needed for advanced usage, can come later\r\n* FORGE plugin channel (observed in packet logging, sends lava and water)\r\n* FML and FML|MP plugin channels (registered, but not seen that they are used at least at login)\r\n* Server-side Forge support https://github.com/PrismarineJS/node-minecraft-protocol/issues/114 \r\n",
    "closed_at": null,
    "comment_data": [
        {
            "body": "Current status (testing against server: forge-1.8.9-11.15.0.1715 + mods/ironchest-1.8.9-6.0.121.768.jar):\r\n\r\n```\r\nnode-minecraft-protocol $ NODE_DEBUG=mc-proto node examples/client_forge/client_forge.js localhost 25565\r\nMC-PROTO: 19450 writing packet handshaking.set_protocol\r\nMC-PROTO: 19450 { protocolVersion: 47,\r\n  serverHost: 'localhost\\u0000FML\\u0000',\r\n  serverPort: 25565,\r\n  nextState: 2 }\r\nMC-PROTO: 19450 writing packet login.login_start\r\nMC-PROTO: 19450 { username: 'echo' }\r\nconnected\r\nMC-PROTO: 19450 read packet login.compress\r\nMC-PROTO: 19450 { threshold: 256 }\r\nMC-PROTO: 19450 read packet login.success\r\nMC-PROTO: 19450 { uuid: 'c39fa4c6-85a3-3582-8167-db3805dbe851',\r\n  username: 'echo' }\r\nMC-PROTO: 19450 read packet play.custom_payload\r\nMC-PROTO: 19450 { channel: 'REGISTER',\r\n  data: <Buffer 46 4d 4c 7c 48 53 00 46 4d 4c 00 46 4d 4c 7c 4d 50 00 46 4d 4c 00 46 4f 52 47 45> }\r\n^ this buffer is \"'FML|HS\\x00FML\\x00FML|MP\\x00FML\\x00FORGE'\"\r\nMC-PROTO: 19450 read packet play.custom_payload\r\nMC-PROTO: 19450 { channel: 'FML|HS', data: <Buffer 00 02 00 00 00 00> }\r\n```\r\n\r\nNo longer kicked, but need to handle the plugin channels and FML handshakes",
            "created_at": "2016-01-23T21:13:19Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-174222963",
            "id": 174222963,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-23T21:13:40Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174222963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Getting further, to the mod list exchange:\r\n\r\n```\r\nclient_forge $ NODE_DEBUG=mc-proto node client_forge.js localhost 25565\r\nMC-PROTO: 24794 writing packet handshaking.set_protocol\r\nMC-PROTO: 24794 { protocolVersion: 47,\r\n  serverHost: 'localhost\\u0000FML\\u0000',\r\n  serverPort: 25565,\r\n  nextState: 2 }\r\nMC-PROTO: 24794 writing packet login.login_start\r\nMC-PROTO: 24794 { username: 'echo' }\r\nconnected\r\nMC-PROTO: 24794 read packet login.compress\r\nMC-PROTO: 24794 { threshold: 256 }\r\nMC-PROTO: 24794 read packet login.success\r\nMC-PROTO: 24794 { uuid: 'c39fa4c6-85a3-3582-8167-db3805dbe851',\r\n  username: 'echo' }\r\nMC-PROTO: 24794 read packet play.custom_payload\r\nMC-PROTO: 24794 { channel: 'REGISTER',\r\n  data: <Buffer 46 4d 4c 7c 48 53 00 46 4d 4c 00 46 4d 4c 7c 4d 50 00 46 4f 52 47 45 00 46 4d 4c> }\r\nServer-side registered channels: [ 'FML|HS', 'FML', 'FML|MP', 'FORGE', 'FML' ]\r\nMC-PROTO: 24794 read packet play.custom_payload\r\nMC-PROTO: 24794 { channel: 'FML|HS', data: <Buffer 00 02 00 00 00 00> }\r\nFML|HS { data: \r\n   { discriminator: 0,\r\n     fmlProtocolVersionServer: 2,\r\n     overrideDimension: 0,\r\n     fmlProtocolVersionClient: undefined,\r\n     mods: undefined },\r\n  metadata: { size: 6 },\r\n  buffer: <Buffer 00 02 00 00 00 00> }\r\nMC-PROTO: 24794 writing packet play.custom_payload\r\nMC-PROTO: 24794 { channel: 'REGISTER',\r\n  data: <Buffer 46 4d 4c 7c 48 53 00 46 4d 4c 00 46 4d 4c 7c 4d 50 00 46 4d 4c 00 46 4f 52 47 45> }\r\nMC-PROTO: 24794 writing packet play.custom_payload\r\nMC-PROTO: 24794 { channel: 'FML|HS', data: <Buffer 01 02> }\r\nMC-PROTO: 24794 writing packet play.custom_payload\r\nMC-PROTO: 24794 { channel: 'FML|HS', data: <Buffer 02 00> }\r\nMC-PROTO: 24794 read packet play.kick_disconnect\r\nMC-PROTO: 24794 { reason: '\"Mod rejections [FMLMod:IronChest{6.0.121.768}]\"' }\r\n```\r\n\r\nThe mod list will likely need to come from the ServerListPing, since a client must match the server and does not really need to implement all of the mods (for most bots/scripts/clients expected as the use case of NMP). But if I send:\r\n\r\n```javascript\r\n         mods: [\r\n           {name:'IronChest', version:'6.0.121.768'}\r\n         ]\r\n```\r\n\r\nget an error encoding the mods array:\r\n\r\n```\r\n/Users/admin/games/voxeljs/node-minecraft-protocol/node_modules/protodef/dist/protodef.js:157\r\n        throw e;\r\n        ^\r\n\r\nError: SizeOf error for mods.2.0.name : missing data type: string\r\n    at ProtoDef.sizeOf (/Users/admin/games/voxeljs/node-minecraft-protocol/node_modules/protodef/dist/protodef.js:140:15)\r\n    at /Users/admin/games/voxeljs/node-minecraft-protocol/node_modules/protodef/dist/datatypes/structures.js:153:21\r\n    at tryCatch (/Users/admin/games/voxeljs/node-minecraft-protocol/node_modules/protodef/dist/utils.js:33:12)\r\n    at tryDoc (/Users/admin/games/voxeljs/node-minecraft-protocol/node_modules/protodef/dist/utils.js:40:10)\r\n    at /Users/admin/games/voxeljs/node-minecraft-protocol/node_modules/protodef/dist/datatypes/structures.js:152:19\r\n    at Array.reduce (native)\r\n    at ProtoDef.sizeOfContainer (/Users/admin/games/voxeljs/node-minecraft-protocol/node_modules/protodef/dist/datatypes/structures.js:148:23)\r\n    at ProtoDef.sizeOf (/Users/admin/games/voxeljs/node-minecraft-protocol/node_modules/protodef/dist/protodef.js:143:33)\r\n    at /Users/admin/games/voxeljs/node-minecraft-protocol/node_modules/protodef/dist/datatypes/structures.js:96:28\r\n    at tryCatch (/Users/admin/games/voxeljs/node-minecraft-protocol/node_modules/protodef/dist/utils.js:33:12)\r\n```",
            "created_at": "2016-01-23T23:04:34Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-174229156",
            "id": 174229156,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-23T23:04:34Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174229156",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "```javascript\r\nServer ModList: [ { name: 'Forge', version: '11.15.0.1715' },\r\n  { name: 'IronChest', version: '6.0.121.768' },\r\n  { name: 'mcp', version: '9.18' },\r\n  { name: 'FML', version: '8.0.99.99' } ]\r\n```",
            "created_at": "2016-01-23T23:20:05Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-174231553",
            "id": 174231553,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-23T23:20:05Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174231553",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Server debug logging for reference: https://gist.github.com/deathcap/2c31e498b2375053c0e0\r\n\r\nThe handshake completes, but exits immediately after the FML handshake completes **update: fixed, don't run your Forge server with -Dfml.debugNetworkHandshake=true**; ~~maybe need to hook up the \"handshake complete state\" to node-minecraft-protocol's notion of handshake/login complete~~, and also general refactoring\r\n",
            "created_at": "2016-01-23T23:54:44Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-174235374",
            "id": 174235374,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-24T01:55:45Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174235374",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "This is now functional, just needs to be cleaned up/refactored",
            "created_at": "2016-01-24T01:56:04Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-174243007",
            "id": 174243007,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-24T01:56:04Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174243007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Removing [WIP], further enhancements are possible but I think this is working well enough to review, let me know what you think. Future changes I would like but not included here:\r\n\r\n* Move `FML|HS` protodef to [minecraft-data](https://github.com/PrismarineJS/minecraft-data) - and other plugin channel payloads like [MC|AdvCdm] (https://github.com/PrismarineJS/mineflayer/commit/24f24349261c5b5031ff4ec624fef670af3028a5) and [MC|Brand](https://github.com/PrismarineJS/mineflayer/pull/254) in mineflayer, requires deciding how to package this data, so put it off for now\r\n* Add a generic plugin channel API to node-minecraft-protocol (and mineflayer: https://github.com/PrismarineJS/mineflayer/issues/361)), right now I just listen for `custom_payload` events **update: internal PR: https://github.com/deathcap/node-minecraft-protocol/pull/2, but want to wait for this PR first**\r\n* Move the pre-connect ping into createClient() / SRV refactoring - https://github.com/PrismarineJS/node-minecraft-protocol/issues/327 - right now it is in the example, but would be more convenient for apps if it was built-in to the library (automatically support bots connecting to Forge servers with no changes on their part), except it is a disruptive change so I left it out for now\r\n* Complete parsing of `RegistryData` and more events - a fully-functional FML/Forge client would need these, but for most bots and simple clients, it is not needed, can come later - this PR gets handshaking/connecting working, a necessary prerequisite for even connecting to modded servers",
            "created_at": "2016-01-24T05:18:01Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-174254784",
            "id": 174254784,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-24T06:36:02Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174254784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Roblabla was talking about putting this as a plugin in an other repo. It would probably be possible and it raises the question of how much non-vanilla we want to support directly it nmp. It might be better to put these kind of extensions in their own module so it can be independently maintained. Especially if it's needed to support lot of forge mods.\r\nSame idea for Minecraft-data : do we want to put non vanilla content in there or should it be in its own repo ? Not sure\r\n\r\nPutting everything in nmp and mcdata themselves has the benefit of making it a bit easier for the users, but it means a bit more code to maintain.\r\n\r\nApart from where the code should go, it looks fine to me.",
            "created_at": "2016-01-24T13:05:36Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-174295510",
            "id": 174295510,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-24T13:05:36Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174295510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Alright I'll see about refactoring out into a separate module. There may be some layering difficulties though, FML requires the `set_protocol` packet serverHost to end in `\\0FML\\0`, I can pass this to createClient() but not sure how DNS SRV resolution will react to trying to resolve it, need to test further, think about how/if NMP could be enhanced to support an optional FML|HS plugin",
            "created_at": "2016-01-24T19:08:37Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-174331799",
            "id": 174331799,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-24T19:08:37Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174331799",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Started factoring out in https://github.com/deathcap/node-minecraft-protocol-forge - works with the 0.16.6 minecraft-protocol release, but some concerns:\r\n\r\nNMP Resolving \\0\\FML\\0 DNS Hostnames\r\n\r\nAs part of the FML protocol I append a null byte and the FML string and another null byte to the serverHost in the set_protocol packet, to get this to work with no changes to the NMP release, I just pass this 'tagged' hostname to the `host` parameter of NMP's `createClient()`. It does seem to work, at least on my system — I imagine because null is recognized as a terminator on the underlying network APIs, e.g.:\r\n\r\n```javascript\r\n> require('dns').resolve('github.com', function(){console.log(arguments)})\r\nQueryReqWrap {\r\n  bindingName: 'queryA',\r\n  callback: { [Function: asyncCallback] immediately: true },\r\n  hostname: 'github.com',\r\n  oncomplete: [Function: onresolve],\r\n  domain: \r\n   Domain {\r\n     domain: null,\r\n     _events: { error: [Function] },\r\n     _eventsCount: 1,\r\n     _maxListeners: undefined,\r\n     members: [] } }\r\n> { '0': null, '1': [ '192.30.252.131' ] }\r\n\r\n> require('dns').resolve('github.com\\0FML\\0', function(){console.log(arguments)})\r\nQueryReqWrap {\r\n  bindingName: 'queryA',\r\n  callback: { [Function: asyncCallback] immediately: true },\r\n  hostname: 'github.com\\u0000FML\\u0000',\r\n  oncomplete: [Function: onresolve],\r\n  domain: \r\n   Domain {\r\n     domain: null,\r\n     _events: { error: [Function] },\r\n     _eventsCount: 1,\r\n     _maxListeners: undefined,\r\n     members: [] } }\r\n> { '0': null, '1': [ '192.30.252.128' ] }\r\n```\r\n\r\nbut its not clear if it is a good idea to rely on this behavior. Another option would be for NMP to support another option to append a string to the hostname, but only in the set_protocol packet, see: https://github.com/deathcap/node-minecraft-protocol/commit/93c5c7315a81a379906c0df9862d04d9b9cd5c0a\r\n\r\nProtocol Module Layering\r\n\r\nSecond is the larger issue of how to cleanly integrate NMP with NMPF. The client has to advertise the fact that it supports FML/Forge, so I [wrap the createClient()](https://github.com/deathcap/node-minecraft-protocol-forge/commit/16fa0023a3eeddcdcc069fa3a3829aa8f53f17ab) function from NMP, to add the tag (or alter the hostname, for now).\r\n",
            "created_at": "2016-01-24T20:19:52Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-174337553",
            "id": 174337553,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-24T20:23:35Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174337553",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Also added [node-minecraft-protocol-forge](https://github.com/deathcap/node-minecraft-protocol-forge) support to [node-minecraft-protocol-auto](https://github.com/deathcap/node-minecraft-protocol-auto), but to be honest I'd still favor integrating either or both into node-minecraft-protocol proper.\r\n\r\nWhat about a compromise, add -forge and -auto as separate \"modules\" but in this same repository? Along the lines of https://github.com/PrismarineJS/node-minecraft-protocol/pull/210 [WIP] Modularize NMP. As long as they are cleanly separated from the rest of the code, I think it should not increase maintenance cost too much, or if they do become a problem, could disable the modules without affecting the rest of the project.",
            "created_at": "2016-01-25T02:25:57Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-174373408",
            "id": 174373408,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-25T02:25:57Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174373408",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Hmm, I think it should be used as a \"plugin\" of node-minecraft-protocol, and not as an independant createClient. See also:\r\n> 13:49 < roblabla> @deathcap those using forge know they are using forge\r\n> 13:51 < roblabla> What I'd really like is finishing the NMP modularisation work, so we could just do\r\n ```\r\ncreateClient({\r\nmodules: [ require('nmp-forge'), \"handshake\", \"encryption\", \"compression\", \"play\" ]\r\n });\r\n```\r\n> 13:51 < roblabla> Which would inject the code required to connect on a forge server\r\n",
            "created_at": "2016-01-25T20:47:41Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-174657796",
            "id": 174657796,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-25T20:47:41Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174657796",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "I guess I can wait until GH-210 Modularize NMP to update this code to be a plugin of node-minecraft-protocol. Features needed:\r\n\r\n* ability to append to the hostname in the `set_protocol` packet\r\n* ability to use plugin channels (possible already by listening on `custom_payload` packets, but ofc GH-328 plugin channel API would be cleaner)\r\n* ability to accept new client options and emit new client events",
            "created_at": "2016-01-26T02:49:15Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-174789144",
            "id": 174789144,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-26T02:49:15Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/174789144",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Updated for GH-333 client modularization, but an outstanding issue is having the client_forge example need to set tagHost \\0FML\\0. This logic should not need to be known by the app, ought to be refactored into the src/client/forgeHandshake.js middleware.\r\n\r\nBut if I have src/client/forgeHandshake.js set options.tagHost, then it is too late for src/client/setProtocol.js to read it, so the server doesn't know the client supports Forge. Likely the same problem (and solution) described in https://github.com/PrismarineJS/node-minecraft-protocol/pull/331#issuecomment-174941928 - may need some kind of 'pause' mechanism, to change the client object before it is fully created and ready.\r\n\r\n`forgeHandshake(client, options)` is called immediately after `createClient()`, but it is still too late.",
            "created_at": "2016-01-28T04:47:15Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-175972696",
            "id": 175972696,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-28T04:47:23Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/175972696",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Moved tagHost \\0FML\\0 into the plugin. It is now enabled when `forgeMods` is set, in src/createClient.js, because it has to be set before setProtocol (since it is the plugin that sends the serverHost). With these changes, I believe this PR is ready.\r\n\r\nNote: the `tagHost` option added to src/client/setProtocol.js could also be used for https://github.com/PrismarineJS/node-minecraft-protocol/issues/336 BungeeCord protocol support\r\n\r\nNote 2: the client_forge example demonstrates auto-negotiation, since that's the likely usage for Forge clients written with node-minecraft-protocol, but it could be refactored after https://github.com/PrismarineJS/node-minecraft-protocol/pull/331 dynamic protocol support. Other enhancements/cleanup are possible, but I think this PR is good enough to pull at this point (pending any review feedback).\r\n",
            "created_at": "2016-01-31T19:23:20Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-177592849",
            "id": 177592849,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-01-31T19:23:31Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177592849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "Looks good to me, but I think it belongs in its own repo.\r\n> 09:39 < rom1504> deathcap: https://github.com/PrismarineJS/node-minecraft-protocol/pull/326/files could be organized as https://github.com/andrewrk/mineflayer-navigate/ : forgeHandshake.js could be the index.js and client_forge.js could be the example.js\r\n> 09:39 < rom1504> ah and `if (options.forgeMods) forgeHandshake(client, options);` should be in the client_forge.js / example.js imho",
            "created_at": "2016-02-01T09:09:14Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-177867165",
            "id": 177867165,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-02-01T09:09:14Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/177867165",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Updated to fix conflicts with master but still needs to be moved into its own repo, re:gitter, agreed could be best served in a repository under the PrismarineJS organization in order to ease maintenance. src/client/forgeHandshake.js is easy to separate but will need to untangle the tagHost and autoVersion.",
            "created_at": "2016-02-03T06:10:00Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-179030538",
            "id": 179030538,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-02-03T06:10:00Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/179030538",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            }
        },
        {
            "body": "@deathcap you should now be able to create a repo in PrismarineJS for that forge plugin . (Or move https://github.com/deathcap/node-minecraft-protocol-forge but then I think you should first remove almost all the commits, it's a plugin, not a nmp fork)",
            "created_at": "2016-02-03T08:03:59Z",
            "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326#issuecomment-179078346",
            "id": 179078346,
            "issue_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
            "updated_at": "2016-02-03T08:03:59Z",
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/comments/179078346",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 17,
    "comments_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326/comments",
    "created_at": "2016-01-23T21:03:36Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-24T05:06:45Z",
            "event": "renamed",
            "id": 524111241,
            "rename": {
                "from": "[WIP] Forge client",
                "to": "Forge client support"
            },
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/524111241"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": "7b9a915224276da429433f2517bdf3f1b47d0b02",
            "commit_url": "https://api.github.com/repos/deathcap/node-minecraft-protocol-forge/commits/7b9a915224276da429433f2517bdf3f1b47d0b02",
            "created_at": "2016-01-24T20:02:12Z",
            "event": "referenced",
            "id": 524337440,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/524337440"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-25T20:47:41Z",
            "event": "mentioned",
            "id": 525536772,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/525536772"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-01-25T20:47:41Z",
            "event": "subscribed",
            "id": 525536773,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/525536773"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": "b817dd96c5f50c6f5a8f38d4bb69855fc53bbd04",
            "commit_url": "https://api.github.com/repos/deathcap/node-minecraft-protocols/commits/b817dd96c5f50c6f5a8f38d4bb69855fc53bbd04",
            "created_at": "2016-02-01T04:56:19Z",
            "event": "referenced",
            "id": 533642827,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/533642827"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-02-03T08:03:59Z",
            "event": "mentioned",
            "id": 537149972,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/537149972"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
                "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathcap/followers",
                "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathcap",
                "id": 5897956,
                "login": "deathcap",
                "organizations_url": "https://api.github.com/users/deathcap/orgs",
                "received_events_url": "https://api.github.com/users/deathcap/received_events",
                "repos_url": "https://api.github.com/users/deathcap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathcap"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-02-03T08:03:59Z",
            "event": "subscribed",
            "id": 537149973,
            "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/events/537149973"
        }
    ],
    "events_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326/events",
    "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326",
    "id": 128352570,
    "labels": [],
    "labels_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 326,
    "pull_request": {
        "diff_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326.diff",
        "html_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326",
        "patch_url": "https://github.com/PrismarineJS/node-minecraft-protocol/pull/326.patch",
        "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/pulls/326"
    },
    "repository_url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol",
    "state": "open",
    "title": "Forge client support",
    "updated_at": "2016-02-03T08:03:59Z",
    "url": "https://api.github.com/repos/PrismarineJS/node-minecraft-protocol/issues/326",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5897956?v=3",
        "events_url": "https://api.github.com/users/deathcap/events{/privacy}",
        "followers_url": "https://api.github.com/users/deathcap/followers",
        "following_url": "https://api.github.com/users/deathcap/following{/other_user}",
        "gists_url": "https://api.github.com/users/deathcap/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/deathcap",
        "id": 5897956,
        "login": "deathcap",
        "organizations_url": "https://api.github.com/users/deathcap/orgs",
        "received_events_url": "https://api.github.com/users/deathcap/received_events",
        "repos_url": "https://api.github.com/users/deathcap/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/deathcap/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/deathcap/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/deathcap"
    }
}