{
    "assignee": null,
    "body": "completely untested",
    "closed_at": null,
    "comment_data": [
        {
            "body": "maybe do getter.get -> read (bind it and everything)",
            "created_at": "2015-12-01T16:57:02Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161030414",
            "id": 161030414,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-01T16:57:02Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161030414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "looks pretty good. I'm going to make it work next.",
            "created_at": "2015-12-01T17:42:53Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161044109",
            "id": 161044109,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-01T17:42:53Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161044109",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "I think using the same idea I can make sizeof go away and writeX take a write. That will also let the serializer decide when he wants to send the data, in the middle of a packet if that's fitting\r\n\r\nedit: Hmm, except it would probably require copying and all (unlike Buffer.slice in reading), and anyway the whole packet is compressed in modern minecraft so you can't send part of it. I'll probably try that in a second time.",
            "created_at": "2015-12-01T18:00:16Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161048442",
            "id": 161048442,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-01T19:21:44Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161048442",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "This looks really good. Concerning write, you can send part of the packet to the compress stream.",
            "created_at": "2015-12-01T20:43:32Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161089677",
            "id": 161089677,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-01T20:43:32Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161089677",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "I fixed the tests and the benchmark.\r\n\r\nBut sadly it makes the benchmark 10 times slower. I'm not sure what to think about that...",
            "created_at": "2015-12-01T23:15:24Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161127900",
            "id": 161127900,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-01T23:15:24Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161127900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "https://github.com/rvagg/bl maybe we could use this instead of concatting the buffer. \r\n\r\nAlso concerning async/await, a good way to speed stuff up would be to use the `babel-plugin-transform-async-to-module-method` and bluebird for the async/await transform, instead of relying on generators. Generators are pretty damn slow right now. If we could somehow make babel transform await in the \"natural-style\" promise.then(), we'd probably see a perf bump.",
            "created_at": "2015-12-02T13:57:00Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161300311",
            "id": 161300311,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-02T13:57:00Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161300311",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "bl would indeed help, I'll try using that.\r\n\r\nIs there any information anywhere about `babel-plugin-transform-async-to-module-method` ? I'm not sure how to use that\r\n\r\nedit: it would also be possible to rewrite the code manually using only .then instead of async/await, but I think it might not be very pretty (there for example https://github.com/roblabla/ProtoDef/blob/wait_for_data/src/datatypes/utils.js#L168 )",
            "created_at": "2015-12-02T14:10:58Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161307141",
            "id": 161307141,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-02T14:15:40Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161307141",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "https://kpdecker.github.io/six-speed/\r\n\r\ngenerators, hence async/await are really slow.\r\n\r\nI'll try rewriting with .then to see if that really improves perf a lot",
            "created_at": "2015-12-02T15:18:46Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161329689",
            "id": 161329689,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-02T15:18:46Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161329689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "consider using https://www.npmjs.com/package/nodent which claims better async/await perfs (it doesn't use generators)\r\n\r\n`node_modules/nodent/nodent.js --out c.js > dist/c.js`\r\n\r\n`require('nodent')() ;` in index.js\r\n\r\nand `\"use nodent-promises\";` in c.js\r\n\r\napply nodent first then babel\r\n\r\nah well obviously not, nodent doesn't do all es7 we use, so we'd need to do babel then nodent, but disabling babel async/await.\r\n\r\nedit: ah well no that can't work either, babel would get confused :|\r\n\r\n\r\nedit2: ah https://www.npmjs.com/package/fast-async would probably be a simpler way to use it",
            "created_at": "2015-12-02T15:39:24Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161337321",
            "id": 161337321,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-02T16:21:31Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161337321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Tentatives with circle ci times (10000 iteration + parser)\r\n\r\n| Description | Time |\r\n| --- | --- |\r\n| master | 372ms |\r\n| babel standard async/await | 6523ms |\r\n| bluebird promises | 1078ms |\r\n| babel promises | around 2000ms |\r\n| fast-async async/await with babel promises | 4162ms |\r\n| fast-async async/await with bluebird promises | 2015ms |\r\n| fast-async async/await with bluebird promises last version (with babel6) | 1431ms |\r\n\r\nes6 \"native\" node5 promises ([actually also coded in js](http://programmers.stackexchange.com/a/279003) ) are about as fast as babel promises.",
            "created_at": "2015-12-04T02:04:59Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161850219",
            "id": 161850219,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-04T13:48:53Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161850219",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Remaining possibilities:\r\n* [x] https://github.com/roblabla/ProtoDef/pull/39 babel6 + recent fast-async, might be better but can't do it before babel6 transform runtime get fixed : now working, added to the table\r\n* [ ] https://github.com/roblabla/ProtoDef/pull/42 babel6 + bluebird coroutine, might be better but can't do it before babel6 transform runtime get fixed\r\n* [x] callback ? (just look quickly to see how much of a pain that would be) : alright I looked quickly, that means putting `,cb` everywhere (and probably using async.js not to get mad), I'd better not do this.\r\n* [x] fast-async es5 conv : require to remove all the use of the Promise keyword first : tried it, not possible (requires too much not standard stuff)\r\n*  any other way to make async/await as fast as promises ?\r\n\r\nCurrently I think only the bluebird promises possibility is reasonably fast enough.",
            "created_at": "2015-12-04T02:22:35Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161852456",
            "id": 161852456,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-04T14:09:41Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161852456",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Actually one last possibility. Nodent has a \"Pure ES5 mode\" that is supposed to be much faster. Might want to look at that ?",
            "created_at": "2015-12-04T11:11:55Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161939826",
            "id": 161939826,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-04T11:11:55Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161939826",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1069318?v=3",
                "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
                "followers_url": "https://api.github.com/users/roblabla/followers",
                "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
                "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roblabla",
                "id": 1069318,
                "login": "roblabla",
                "organizations_url": "https://api.github.com/users/roblabla/orgs",
                "received_events_url": "https://api.github.com/users/roblabla/received_events",
                "repos_url": "https://api.github.com/users/roblabla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roblabla"
            }
        },
        {
            "body": "Yeah I might try, but that probably means forking the plugin https://github.com/MatAtBread/fast-async/issues/1#issuecomment-161702769 ",
            "created_at": "2015-12-04T11:25:53Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161942884",
            "id": 161942884,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-04T11:26:19Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161942884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "Alright, tried it, basing myself on https://github.com/roblabla/ProtoDef/pull/39\r\nThe problem is using the es5 transformation means you cannot use the Promise keyword, and I do need Promise there https://github.com/roblabla/ProtoDef/blob/babel6/src/serializer.js#L45\r\nI guess it might be possible to write manually their es5 transformation instead of the Promise keyword but I'd better not go there.",
            "created_at": "2015-12-04T14:07:21Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161976093",
            "id": 161976093,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-04T14:07:21Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161976093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "So that leaves 2 reasonable choices:\r\n* [bluebird promises](https://github.com/roblabla/ProtoDef/pull/41) : best speed, style is okay if not as natural for some stuff (bitfields for example). Using only standard interfaces\r\n* [fast-async babel6 bluebird](https://github.com/roblabla/ProtoDef/pull/39) : speed is okay, style is good, but it requires fitting stuff to the async/await particularities of nodent which I'm not sure we want to do (see [that](https://github.com/MatAtBread/fast-async/issues/1#issuecomment-161938724) )\r\n\r\nBasically, I think using async/await heavily is too soon, there are still performance problems or interface problems. Going with the promise option is probably the safe bet for now. That is until the async/await get fixed in babel/node and then it will be easy to switch to it if we want to because promises are compatible with async/await.",
            "created_at": "2015-12-04T14:25:11Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161979597",
            "id": 161979597,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-04T14:25:11Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161979597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        },
        {
            "body": "so I'm going to go with https://github.com/roblabla/ProtoDef/pull/41 , and I'm doing https://github.com/roblabla/ProtoDef/pull/43 next to try to improve the write interface and to check the parser actually handle split packets (which it doesn't right now apparently)",
            "created_at": "2015-12-04T14:30:14Z",
            "html_url": "https://github.com/roblabla/ProtoDef/pull/37#issuecomment-161980515",
            "id": 161980515,
            "issue_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
            "updated_at": "2015-12-04T14:30:14Z",
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/comments/161980515",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            }
        }
    ],
    "comments": 16,
    "comments_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37/comments",
    "created_at": "2015-12-01T16:33:51Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
                "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
                "followers_url": "https://api.github.com/users/rom1504/followers",
                "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
                "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rom1504",
                "id": 2346494,
                "login": "rom1504",
                "organizations_url": "https://api.github.com/users/rom1504/orgs",
                "received_events_url": "https://api.github.com/users/rom1504/received_events",
                "repos_url": "https://api.github.com/users/rom1504/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rom1504"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2015-12-04T14:17:01Z",
            "event": "renamed",
            "id": 482672595,
            "rename": {
                "from": "[WIP] ideas about #24 : async reading",
                "to": "babel5 async/await"
            },
            "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/events/482672595"
        }
    ],
    "events_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37/events",
    "html_url": "https://github.com/roblabla/ProtoDef/pull/37",
    "id": 119755782,
    "labels": [],
    "labels_url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 37,
    "pull_request": {
        "diff_url": "https://github.com/roblabla/ProtoDef/pull/37.diff",
        "html_url": "https://github.com/roblabla/ProtoDef/pull/37",
        "patch_url": "https://github.com/roblabla/ProtoDef/pull/37.patch",
        "url": "https://api.github.com/repos/roblabla/ProtoDef/pulls/37"
    },
    "state": "open",
    "title": "babel5 async/await",
    "updated_at": "2015-12-04T14:30:14Z",
    "url": "https://api.github.com/repos/roblabla/ProtoDef/issues/37",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2346494?v=3",
        "events_url": "https://api.github.com/users/rom1504/events{/privacy}",
        "followers_url": "https://api.github.com/users/rom1504/followers",
        "following_url": "https://api.github.com/users/rom1504/following{/other_user}",
        "gists_url": "https://api.github.com/users/rom1504/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rom1504",
        "id": 2346494,
        "login": "rom1504",
        "organizations_url": "https://api.github.com/users/rom1504/orgs",
        "received_events_url": "https://api.github.com/users/rom1504/received_events",
        "repos_url": "https://api.github.com/users/rom1504/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rom1504/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rom1504/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rom1504"
    }
}